{"version":3,"file":"easytimer-BQd7-5IF.js","sources":["../../../node_modules/easytimer.js/dist/easytimer.js"],"sourcesContent":["/**\n * easytimer.js\n * Generated: 2023-08-28\n * Version: 4.6.0\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.easytimer = {}));\n})(this, (function (exports) { 'use strict';\n\n  function ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n      var o = Object.getOwnPropertySymbols(e);\n      r && (o = o.filter(function (r) {\n        return Object.getOwnPropertyDescriptor(e, r).enumerable;\n      })), t.push.apply(t, o);\n    }\n    return t;\n  }\n  function _objectSpread2(e) {\n    for (var r = 1; r < arguments.length; r++) {\n      var t = null != arguments[r] ? arguments[r] : {};\n      r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n        _defineProperty(e, r, t[r]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n        Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n      });\n    }\n    return e;\n  }\n  function _typeof(o) {\n    \"@babel/helpers - typeof\";\n\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n      return typeof o;\n    } : function (o) {\n      return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n  }\n  function _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function _toPrimitive(input, hint) {\n    if (typeof input !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n      var res = prim.call(input, hint || \"default\");\n      if (typeof res !== \"object\") return res;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n  }\n  function _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return typeof key === \"symbol\" ? key : String(key);\n  }\n\n  function leftPadding(string, padLength, character) {\n    var i;\n    var characters = '';\n    string = typeof string === 'number' ? String(string) : string;\n    if (string.length > padLength) {\n      return string;\n    }\n    for (i = 0; i < padLength; i = i + 1) {\n      characters += String(character);\n    }\n    return (characters + string).slice(-characters.length);\n  }\n\n  function TimeCounter() {\n    this.reset();\n  }\n\n  /**\n   * [toString convert the counted values on a string]\n   * @param  {array} units           [array with the units to display]\n   * @param  {string} separator       [separator of the units]\n   * @param  {number} leftZeroPadding [number of zero padding]\n   * @return {string}                 [result string]\n   */\n  TimeCounter.prototype.toString = function () {\n    var units = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['hours', 'minutes', 'seconds'];\n    var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ':';\n    var leftZeroPadding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n    units = units || ['hours', 'minutes', 'seconds'];\n    separator = separator || ':';\n    leftZeroPadding = leftZeroPadding || 2;\n    var arrayTime = [];\n    var i;\n    for (i = 0; i < units.length; i = i + 1) {\n      if (this[units[i]] !== undefined) {\n        if (units[i] === 'secondTenths') {\n          arrayTime.push(this[units[i]]);\n        } else {\n          arrayTime.push(leftPadding(this[units[i]], leftZeroPadding, '0'));\n        }\n      }\n    }\n    return arrayTime.join(separator);\n  };\n\n  /**\n   * [reset reset counter]\n   */\n  TimeCounter.prototype.reset = function () {\n    this.secondTenths = 0;\n    this.seconds = 0;\n    this.minutes = 0;\n    this.hours = 0;\n    this.days = 0;\n  };\n\n  function EventEmitter() {\n    this.events = {};\n  }\n  EventEmitter.prototype.on = function (event, listener) {\n    var _this = this;\n    if (!Array.isArray(this.events[event])) {\n      this.events[event] = [];\n    }\n    this.events[event].push(listener);\n    return function () {\n      return _this.removeListener(event, listener);\n    };\n  };\n  EventEmitter.prototype.removeListener = function (event, listener) {\n    if (Array.isArray(this.events[event])) {\n      var eventIndex = this.events[event].indexOf(listener);\n      if (eventIndex > -1) {\n        this.events[event].splice(eventIndex, 1);\n      }\n    }\n  };\n  EventEmitter.prototype.removeAllListeners = function (event) {\n    if (!event) {\n      this.events = {};\n    } else if (Array.isArray(this.events[event])) {\n      this.events[event] = [];\n    }\n  };\n  EventEmitter.prototype.emit = function (event) {\n    var _this2 = this;\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (Array.isArray(this.events[event])) {\n      this.events[event].forEach(function (listener) {\n        return listener.apply(_this2, args);\n      });\n    }\n  };\n\n  /*\n   * General functions, variables and constants\n   */\n  var SECOND_TENTHS_PER_SECOND = 10;\n  var SECONDS_PER_MINUTE = 60;\n  var MINUTES_PER_HOUR = 60;\n  var HOURS_PER_DAY = 24;\n  var SECOND_TENTHS_POSITION = 0;\n  var SECONDS_POSITION = 1;\n  var MINUTES_POSITION = 2;\n  var HOURS_POSITION = 3;\n  var DAYS_POSITION = 4;\n  var SECOND_TENTHS = 'secondTenths';\n  var SECONDS = 'seconds';\n  var MINUTES = 'minutes';\n  var HOURS = 'hours';\n  var DAYS = 'days';\n  var VALID_INPUT_VALUES = [SECOND_TENTHS, SECONDS, MINUTES, HOURS, DAYS];\n  var unitsInMilliseconds = {\n    secondTenths: 100,\n    seconds: 1000,\n    minutes: 60000,\n    hours: 3600000,\n    days: 86400000\n  };\n  var groupedUnits = {\n    secondTenths: SECOND_TENTHS_PER_SECOND,\n    seconds: SECONDS_PER_MINUTE,\n    minutes: MINUTES_PER_HOUR,\n    hours: HOURS_PER_DAY\n  };\n  function mod(number, module) {\n    return (number % module + module) % module;\n  }\n\n  /**\n   * [Timer Timer/Chronometer/Countdown compatible with AMD and NodeJS.\n   * Can update time values with different time intervals: tenth of seconds,\n   * seconds, minutes and hours.]\n   */\n  function Timer() {\n    var defaultParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    /*\n    * PRIVATE variables and Functions\n    */\n    var counters = new TimeCounter();\n    var totalCounters = new TimeCounter();\n    var intervalId;\n    var eventEmitter = new EventEmitter();\n    var running = false;\n    var paused = false;\n    var precision;\n    var timerTypeFactor;\n    var customCallback;\n    var timerConfig = {};\n    var currentParams;\n    var targetValues;\n    var startValues;\n    var countdown;\n    var startingDate;\n    var targetDate;\n    var eventData = {\n      detail: {\n        timer: this\n      }\n    };\n    setParams(defaultParams);\n    function updateCounters(precision, roundedValue) {\n      var unitsPerGroup = groupedUnits[precision];\n      totalCounters[precision] = roundedValue;\n      if (precision === DAYS) {\n        counters[precision] = Math.abs(roundedValue);\n      } else if (roundedValue >= 0) {\n        counters[precision] = mod(roundedValue, unitsPerGroup);\n      } else {\n        counters[precision] = mod(unitsPerGroup - mod(roundedValue, unitsPerGroup), unitsPerGroup);\n      }\n    }\n    function updateDays(value) {\n      return updateUnitByPrecision(value, DAYS);\n    }\n    function updateHours(value) {\n      return updateUnitByPrecision(value, HOURS);\n    }\n    function updateMinutes(value) {\n      return updateUnitByPrecision(value, MINUTES);\n    }\n    function updateSeconds(value) {\n      return updateUnitByPrecision(value, SECONDS);\n    }\n    function updateSecondTenths(value) {\n      return updateUnitByPrecision(value, SECOND_TENTHS);\n    }\n    function updateUnitByPrecision(value, precision) {\n      var previousValue = totalCounters[precision];\n      updateCounters(precision, calculateIntegerUnitQuotient(value, unitsInMilliseconds[precision]));\n      return totalCounters[precision] !== previousValue;\n    }\n    function stopTimerAndResetCounters() {\n      stopTimer();\n      resetCounters();\n    }\n    function stopTimer() {\n      clearInterval(intervalId);\n      intervalId = undefined;\n      running = false;\n      paused = false;\n    }\n    function setParamsAndStartTimer(params) {\n      if (!isPaused()) {\n        setParams(params);\n      } else {\n        startingDate = calculateStartingDate();\n        targetValues = setTarget(currentParams.target);\n      }\n      startTimer();\n    }\n    function startTimer() {\n      var interval = unitsInMilliseconds[precision];\n      if (isTargetAchieved(roundTimestamp(Date.now()))) {\n        return;\n      }\n      intervalId = setInterval(updateTimerAndDispatchEvents, interval);\n      running = true;\n      paused = false;\n    }\n    function calculateStartingDate() {\n      return roundTimestamp(Date.now()) - totalCounters.secondTenths * unitsInMilliseconds[SECOND_TENTHS] * timerTypeFactor;\n    }\n    function updateTimerAndDispatchEvents() {\n      var currentTime = roundTimestamp(Date.now());\n      var valuesUpdated = updateTimer();\n      dispatchEvents(valuesUpdated);\n      customCallback(eventData.detail.timer);\n      if (isTargetAchieved(currentTime)) {\n        stop();\n        dispatchEvent('targetAchieved', eventData);\n      }\n    }\n    function updateTimer() {\n      var currentTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : roundTimestamp(Date.now());\n      var elapsedTime = timerTypeFactor > 0 ? currentTime - startingDate : startingDate - currentTime;\n      var valuesUpdated = {};\n      valuesUpdated[SECOND_TENTHS] = updateSecondTenths(elapsedTime);\n      valuesUpdated[SECONDS] = updateSeconds(elapsedTime);\n      valuesUpdated[MINUTES] = updateMinutes(elapsedTime);\n      valuesUpdated[HOURS] = updateHours(elapsedTime);\n      valuesUpdated[DAYS] = updateDays(elapsedTime);\n      return valuesUpdated;\n    }\n    function roundTimestamp(timestamp) {\n      return Math.floor(timestamp / unitsInMilliseconds[precision]) * unitsInMilliseconds[precision];\n    }\n    function dispatchEvents(valuesUpdated) {\n      if (valuesUpdated[SECOND_TENTHS]) {\n        dispatchEvent('secondTenthsUpdated', eventData);\n      }\n      if (valuesUpdated[SECONDS]) {\n        dispatchEvent('secondsUpdated', eventData);\n      }\n      if (valuesUpdated[MINUTES]) {\n        dispatchEvent('minutesUpdated', eventData);\n      }\n      if (valuesUpdated[HOURS]) {\n        dispatchEvent('hoursUpdated', eventData);\n      }\n      if (valuesUpdated[DAYS]) {\n        dispatchEvent('daysUpdated', eventData);\n      }\n    }\n    function isTargetAchieved(currentDate) {\n      return targetValues instanceof Array && currentDate >= targetDate;\n    }\n    function resetCounters() {\n      counters.reset();\n      totalCounters.reset();\n    }\n    function setParams(params) {\n      params = params || {};\n      precision = checkPrecision(params.precision);\n      customCallback = typeof params.callback === 'function' ? params.callback : function () {};\n      countdown = params.countdown === true;\n      timerTypeFactor = countdown === true ? -1 : 1;\n      if (_typeof(params.startValues) === 'object') {\n        setStartValues(params.startValues);\n      } else {\n        startValues = null;\n      }\n      startingDate = calculateStartingDate();\n      updateTimer();\n      if (_typeof(params.target) === 'object') {\n        targetValues = setTarget(params.target);\n      } else if (countdown) {\n        params.target = {\n          seconds: 0\n        };\n        targetValues = setTarget(params.target);\n      } else {\n        targetValues = null;\n      }\n      timerConfig = {\n        precision: precision,\n        callback: customCallback,\n        countdown: _typeof(params) === 'object' && params.countdown === true,\n        target: targetValues,\n        startValues: startValues\n      };\n      currentParams = params;\n    }\n    function checkPrecision(precision) {\n      precision = typeof precision === 'string' ? precision : SECONDS;\n      if (!isValidInputValue(precision)) {\n        throw new Error(\"Error in precision parameter: \".concat(precision, \" is not a valid value\"));\n      }\n      return precision;\n    }\n    function isValidInputValue(value) {\n      return VALID_INPUT_VALUES.indexOf(value) >= 0;\n    }\n    function configInputValues(inputValues) {\n      var values;\n      if (_typeof(inputValues) === 'object') {\n        if (inputValues instanceof Array) {\n          if (inputValues.length !== 5) {\n            throw new Error('Array size not valid');\n          }\n          values = inputValues;\n        } else {\n          for (var value in inputValues) {\n            if (VALID_INPUT_VALUES.indexOf(value) < 0) {\n              throw new Error(\"Error in startValues or target parameter: \".concat(value, \" is not a valid input value\"));\n            }\n          }\n          values = [inputValues.secondTenths || 0, inputValues.seconds || 0, inputValues.minutes || 0, inputValues.hours || 0, inputValues.days || 0];\n        }\n      }\n      values = values.map(function (value) {\n        return parseInt(value, 10);\n      });\n      var secondTenths = values[SECOND_TENTHS_POSITION];\n      var seconds = values[SECONDS_POSITION] + calculateIntegerUnitQuotient(secondTenths, SECOND_TENTHS_PER_SECOND);\n      var minutes = values[MINUTES_POSITION] + calculateIntegerUnitQuotient(seconds, SECONDS_PER_MINUTE);\n      var hours = values[HOURS_POSITION] + calculateIntegerUnitQuotient(minutes, MINUTES_PER_HOUR);\n      var days = values[DAYS_POSITION] + calculateIntegerUnitQuotient(hours, HOURS_PER_DAY);\n      values[SECOND_TENTHS_POSITION] = secondTenths % SECOND_TENTHS_PER_SECOND;\n      values[SECONDS_POSITION] = seconds % SECONDS_PER_MINUTE;\n      values[MINUTES_POSITION] = minutes % MINUTES_PER_HOUR;\n      values[HOURS_POSITION] = hours % HOURS_PER_DAY;\n      values[DAYS_POSITION] = days;\n      return values;\n    }\n    function calculateIntegerUnitQuotient(unit, divisor) {\n      var quotient = unit / divisor;\n      return quotient < 0 ? Math.ceil(quotient) : Math.floor(quotient);\n    }\n    function setTarget(inputTarget) {\n      if (!inputTarget) {\n        return;\n      }\n      targetValues = configInputValues(inputTarget);\n      var targetCounter = calculateTotalCounterFromValues(targetValues);\n      targetDate = startingDate + targetCounter.secondTenths * unitsInMilliseconds[SECOND_TENTHS] * timerTypeFactor;\n      return targetValues;\n    }\n    function setStartValues(inputStartValues) {\n      startValues = configInputValues(inputStartValues);\n      counters.secondTenths = startValues[SECOND_TENTHS_POSITION];\n      counters.seconds = startValues[SECONDS_POSITION];\n      counters.minutes = startValues[MINUTES_POSITION];\n      counters.hours = startValues[HOURS_POSITION];\n      counters.days = startValues[DAYS_POSITION];\n      totalCounters = calculateTotalCounterFromValues(startValues, totalCounters);\n    }\n    function calculateTotalCounterFromValues(values, outputCounter) {\n      var total = outputCounter || {};\n      total.days = values[DAYS_POSITION];\n      total.hours = total.days * HOURS_PER_DAY + values[HOURS_POSITION];\n      total.minutes = total.hours * MINUTES_PER_HOUR + values[MINUTES_POSITION];\n      total.seconds = total.minutes * SECONDS_PER_MINUTE + values[SECONDS_POSITION];\n      total.secondTenths = total.seconds * SECOND_TENTHS_PER_SECOND + values[[SECOND_TENTHS_POSITION]];\n      return total;\n    }\n\n    /*\n     * PUBLIC functions\n     */\n\n    /**\n     * [stop stops the timer and resets the counters. Dispatch stopped event]\n     */\n    function stop() {\n      stopTimerAndResetCounters();\n      dispatchEvent('stopped', eventData);\n    }\n\n    /**\n     * [stop stops and starts the timer. Dispatch stopped event]\n     */\n    function reset() {\n      stopTimerAndResetCounters();\n      setParamsAndStartTimer(currentParams);\n      dispatchEvent('reset', eventData);\n    }\n\n    /**\n     * [start starts the timer configured by the params object. Dispatch started event]\n     * @param  {object} params [Configuration parameters]\n     */\n    function start() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      params = _objectSpread2(_objectSpread2({}, defaultParams), params);\n      if (isRunning()) {\n        return;\n      }\n      setParamsAndStartTimer(params);\n      dispatchEvent('started', eventData);\n    }\n\n    /**\n     * [pause stops the timer without resetting the counters. The timer it can be restarted with start function.\n     * Dispatch paused event]\n     * @return {type} [description]\n     */\n    function pause() {\n      stopTimer();\n      paused = true;\n      dispatchEvent('paused', eventData);\n    }\n\n    /**\n     * [addEventListener Adds event listener to the timer]\n     * @param {string} eventType      [event to listen]\n     * @param {function} listener   [the event listener function]\n     */\n    function addEventListener(eventType, listener) {\n      eventEmitter.on(eventType, listener);\n    }\n\n    /**\n     * [removeEventListener Removes event listener to the timer]\n     * @param  {string} eventType    [event to remove listener]\n     * @param  {function} listener [listener to remove]\n     */\n    function removeEventListener(eventType, listener) {\n      eventEmitter.removeListener(eventType, listener);\n    }\n\n    /**\n     * [removeAllEventListeners Removes all events listeners for the given type, no type to remove all types]\n     * @param  {string} [eventType]  [event to remove listener]\n     */\n    function removeAllEventListeners(eventType) {\n      eventEmitter.removeAllListeners(eventType);\n    }\n\n    /**\n     * [dispatchEvent dispatches an event]\n     * @param  {string} eventType [event to dispatch]\n     * @param data\n     */\n    function dispatchEvent(eventType, data) {\n      eventEmitter.emit(eventType, data);\n    }\n\n    /**\n     * [isRunning return true if the timer is running]\n     * @return {Boolean}\n     */\n    function isRunning() {\n      return running;\n    }\n\n    /**\n     * [isPaused returns true if the timer is paused]\n     * @return {Boolean}\n     */\n    function isPaused() {\n      return paused;\n    }\n\n    /**\n     * [getTimeValues returns the counter with the current timer values]\n     * @return {TimeCounter}\n     */\n    function getTimeValues() {\n      return counters;\n    }\n\n    /**\n     * [getTotalTimeValues returns the counter with the current timer total values]\n     * @return {TimeCounter}\n     */\n    function getTotalTimeValues() {\n      return totalCounters;\n    }\n\n    /**\n     * [getConfig returns the configuration parameters]\n     * @return {type}\n     */\n    function getConfig() {\n      return timerConfig;\n    }\n\n    /**\n     * Public API\n     * Definition of Timer instance public functions\n     */\n    if (typeof this !== 'undefined') {\n      this.start = start;\n      this.pause = pause;\n      this.stop = stop;\n      this.reset = reset;\n      this.isRunning = isRunning;\n      this.isPaused = isPaused;\n      this.getTimeValues = getTimeValues;\n      this.getTotalTimeValues = getTotalTimeValues;\n      this.getConfig = getConfig;\n      this.addEventListener = addEventListener;\n      this.on = addEventListener;\n      this.removeEventListener = removeEventListener;\n      this.removeAllEventListeners = removeAllEventListeners;\n      this.off = removeEventListener;\n    }\n  }\n\n  exports.Timer = Timer;\n  exports.default = Timer;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"],"names":["global","factory","exports","this","ownKeys","t","r","_objectSpread2","_defineProperty","_typeof","o","obj","key","value","_toPropertyKey","_toPrimitive","input","hint","prim","res","arg","leftPadding","string","padLength","character","i","characters","TimeCounter","units","separator","leftZeroPadding","arrayTime","EventEmitter","event","listener","_this","eventIndex","_this2","_len","args","_key","SECOND_TENTHS_PER_SECOND","SECONDS_PER_MINUTE","MINUTES_PER_HOUR","HOURS_PER_DAY","SECOND_TENTHS_POSITION","SECONDS_POSITION","MINUTES_POSITION","HOURS_POSITION","DAYS_POSITION","SECOND_TENTHS","SECONDS","MINUTES","HOURS","DAYS","VALID_INPUT_VALUES","unitsInMilliseconds","groupedUnits","mod","number","module","Timer","defaultParams","counters","totalCounters","intervalId","eventEmitter","running","paused","precision","timerTypeFactor","customCallback","timerConfig","currentParams","targetValues","startValues","countdown","startingDate","targetDate","eventData","setParams","updateCounters","roundedValue","unitsPerGroup","updateDays","updateUnitByPrecision","updateHours","updateMinutes","updateSeconds","updateSecondTenths","previousValue","calculateIntegerUnitQuotient","stopTimerAndResetCounters","stopTimer","resetCounters","setParamsAndStartTimer","params","isPaused","calculateStartingDate","setTarget","startTimer","interval","isTargetAchieved","roundTimestamp","updateTimerAndDispatchEvents","currentTime","valuesUpdated","updateTimer","dispatchEvents","stop","dispatchEvent","elapsedTime","timestamp","currentDate","checkPrecision","setStartValues","isValidInputValue","configInputValues","inputValues","values","secondTenths","seconds","minutes","hours","days","unit","divisor","quotient","inputTarget","targetCounter","calculateTotalCounterFromValues","inputStartValues","outputCounter","total","reset","start","isRunning","pause","addEventListener","eventType","removeEventListener","removeAllEventListeners","data","getTimeValues","getTotalTimeValues","getConfig"],"mappings":"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","x_google_ignoreList":[0]}