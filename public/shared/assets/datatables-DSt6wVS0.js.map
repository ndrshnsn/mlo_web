{"version":3,"file":"datatables-DSt6wVS0.js","sources":["../../../node_modules/datatables.net/js/jquery.dataTables.mjs","../../../node_modules/datatables.net-bs5/js/dataTables.bootstrap5.mjs","../../../app/frontend/javascript/base/datatables.js"],"sourcesContent":["/*! DataTables 1.13.11\n * Â©2008-2024 SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\n\n// DataTables code uses $ internally, but we want to be able to\n// reassign $ with the `use` method, so it is a regular var.\nvar $ = jQuery;\n\n\nvar DataTable = function ( selector, options )\n{\n\t// Check if called with a window or jQuery object for DOM less applications\n\t// This is for backwards compatibility\n\tif (DataTable.factory(selector, options)) {\n\t\treturn DataTable;\n\t}\n\n\t// When creating with `new`, create a new DataTable, returning the API instance\n\tif (this instanceof DataTable) {\n\t\treturn $(selector).DataTable(options);\n\t}\n\telse {\n\t\t// Argument switching\n\t\toptions = selector;\n\t}\n\n\t/**\n\t * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n\t * return the resulting jQuery object.\n\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n\t *    criterion (\"applied\") or all TR elements (i.e. no filter).\n\t *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t *    'original' whereby the original order the data was read into the table is used.\n\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t *  @returns {object} jQuery object, filtered by the given selector.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Highlight every second row\n\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n\t *    } );\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\n\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\n\t *      oTable.fnFilter('Webkit');\n\t *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n\t *      oTable.fnFilter('');\n\t *    } );\n\t */\n\tthis.$ = function ( sSelector, oOpts )\n\t{\n\t\treturn this.api(true).$( sSelector, oOpts );\n\t};\n\t\n\t\n\t/**\n\t * Almost identical to $ in operation, but in this case returns the data for the matched\n\t * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n\t * rather than any descendants, so the data can be obtained for the row/cell. If matching\n\t * rows are found, the data returned is the original data array/object that was used to\n\t * create the row (or a generated array if from a DOM source).\n\t *\n\t * This method is often useful in-combination with $ where both functions are given the\n\t * same parameters and the array indexes will match identically.\n\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n\t *    criterion (\"applied\") or all elements (i.e. no filter).\n\t *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t *    'original' whereby the original order the data was read into the table is used.\n\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t *  @returns {array} Data for the matched elements. If any elements, as a result of the\n\t *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n\t *    entry in the array.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Get the data from the first row in the table\n\t *      var data = oTable._('tr:first');\n\t *\n\t *      // Do something useful with the data\n\t *      alert( \"First cell is: \"+data[0] );\n\t *    } );\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Filter to 'Webkit' and get all data for\n\t *      oTable.fnFilter('Webkit');\n\t *      var data = oTable._('tr', {\"search\": \"applied\"});\n\t *\n\t *      // Do something with the data\n\t *      alert( data.length+\" rows matched the search\" );\n\t *    } );\n\t */\n\tthis._ = function ( sSelector, oOpts )\n\t{\n\t\treturn this.api(true).rows( sSelector, oOpts ).data();\n\t};\n\t\n\t\n\t/**\n\t * Create a DataTables Api instance, with the currently selected tables for\n\t * the Api's context.\n\t * @param {boolean} [traditional=false] Set the API instance's context to be\n\t *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n\t *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n\t *   or if all tables captured in the jQuery object should be used.\n\t * @return {DataTables.Api}\n\t */\n\tthis.api = function ( traditional )\n\t{\n\t\treturn traditional ?\n\t\t\tnew _Api(\n\t\t\t\t_fnSettingsFromNode( this[ _ext.iApiIndex ] )\n\t\t\t) :\n\t\t\tnew _Api( this );\n\t};\n\t\n\t\n\t/**\n\t * Add a single new row or multiple rows of data to the table. Please note\n\t * that this is suitable for client-side processing only - if you are using\n\t * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n\t * must add it to the data source, i.e. the server-side, through an Ajax call.\n\t *  @param {array|object} data The data to be added to the table. This can be:\n\t *    <ul>\n\t *      <li>1D array of data - add a single row with the data provided</li>\n\t *      <li>2D array of arrays - add multiple rows in a single call</li>\n\t *      <li>object - data object when using <i>mData</i></li>\n\t *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n\t *    </ul>\n\t *  @param {bool} [redraw=true] redraw the table or not\n\t *  @returns {array} An array of integers, representing the list of indexes in\n\t *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n\t *    the table.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    // Global var for counter\n\t *    var giCount = 2;\n\t *\n\t *    $(document).ready(function() {\n\t *      $('#example').dataTable();\n\t *    } );\n\t *\n\t *    function fnClickAddRow() {\n\t *      $('#example').dataTable().fnAddData( [\n\t *        giCount+\".1\",\n\t *        giCount+\".2\",\n\t *        giCount+\".3\",\n\t *        giCount+\".4\" ]\n\t *      );\n\t *\n\t *      giCount++;\n\t *    }\n\t */\n\tthis.fnAddData = function( data, redraw )\n\t{\n\t\tvar api = this.api( true );\n\t\n\t\t/* Check if we want to add multiple rows or not */\n\t\tvar rows = Array.isArray(data) && ( Array.isArray(data[0]) || $.isPlainObject(data[0]) ) ?\n\t\t\tapi.rows.add( data ) :\n\t\t\tapi.row.add( data );\n\t\n\t\tif ( redraw === undefined || redraw ) {\n\t\t\tapi.draw();\n\t\t}\n\t\n\t\treturn rows.flatten().toArray();\n\t};\n\t\n\t\n\t/**\n\t * This function will make DataTables recalculate the column sizes, based on the data\n\t * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n\t * through the sWidth parameter). This can be useful when the width of the table's\n\t * parent element changes (for example a window resize).\n\t *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable( {\n\t *        \"sScrollY\": \"200px\",\n\t *        \"bPaginate\": false\n\t *      } );\n\t *\n\t *      $(window).on('resize', function () {\n\t *        oTable.fnAdjustColumnSizing();\n\t *      } );\n\t *    } );\n\t */\n\tthis.fnAdjustColumnSizing = function ( bRedraw )\n\t{\n\t\tvar api = this.api( true ).columns.adjust();\n\t\tvar settings = api.settings()[0];\n\t\tvar scroll = settings.oScroll;\n\t\n\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\tapi.draw( false );\n\t\t}\n\t\telse if ( scroll.sX !== \"\" || scroll.sY !== \"\" ) {\n\t\t\t/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n\t\t\t_fnScrollDraw( settings );\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Quickly and simply clear a table\n\t *  @param {bool} [bRedraw=true] redraw the table or not\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n\t *      oTable.fnClearTable();\n\t *    } );\n\t */\n\tthis.fnClearTable = function( bRedraw )\n\t{\n\t\tvar api = this.api( true ).clear();\n\t\n\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\tapi.draw();\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * The exact opposite of 'opening' a row, this function will close any rows which\n\t * are currently 'open'.\n\t *  @param {node} nTr the table row to 'close'\n\t *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable;\n\t *\n\t *      // 'open' an information row when a row is clicked on\n\t *      $('#example tbody tr').click( function () {\n\t *        if ( oTable.fnIsOpen(this) ) {\n\t *          oTable.fnClose( this );\n\t *        } else {\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t *        }\n\t *      } );\n\t *\n\t *      oTable = $('#example').dataTable();\n\t *    } );\n\t */\n\tthis.fnClose = function( nTr )\n\t{\n\t\tthis.api( true ).row( nTr ).child.hide();\n\t};\n\t\n\t\n\t/**\n\t * Remove a row for the table\n\t *  @param {mixed} target The index of the row from aoData to be deleted, or\n\t *    the TR element you want to delete\n\t *  @param {function|null} [callBack] Callback function\n\t *  @param {bool} [redraw=true] Redraw the table or not\n\t *  @returns {array} The row that was deleted\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Immediately remove the first row\n\t *      oTable.fnDeleteRow( 0 );\n\t *    } );\n\t */\n\tthis.fnDeleteRow = function( target, callback, redraw )\n\t{\n\t\tvar api = this.api( true );\n\t\tvar rows = api.rows( target );\n\t\tvar settings = rows.settings()[0];\n\t\tvar data = settings.aoData[ rows[0][0] ];\n\t\n\t\trows.remove();\n\t\n\t\tif ( callback ) {\n\t\t\tcallback.call( this, settings, data );\n\t\t}\n\t\n\t\tif ( redraw === undefined || redraw ) {\n\t\t\tapi.draw();\n\t\t}\n\t\n\t\treturn data;\n\t};\n\t\n\t\n\t/**\n\t * Restore the table to it's original state in the DOM by removing all of DataTables\n\t * enhancements, alterations to the DOM structure of the table and event listeners.\n\t *  @param {boolean} [remove=false] Completely remove the table from the DOM\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n\t *      var oTable = $('#example').dataTable();\n\t *      oTable.fnDestroy();\n\t *    } );\n\t */\n\tthis.fnDestroy = function ( remove )\n\t{\n\t\tthis.api( true ).destroy( remove );\n\t};\n\t\n\t\n\t/**\n\t * Redraw the table\n\t *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n\t *      oTable.fnDraw();\n\t *    } );\n\t */\n\tthis.fnDraw = function( complete )\n\t{\n\t\t// Note that this isn't an exact match to the old call to _fnDraw - it takes\n\t\t// into account the new data, but can hold position.\n\t\tthis.api( true ).draw( complete );\n\t};\n\t\n\t\n\t/**\n\t * Filter the input based on data\n\t *  @param {string} sInput String to filter the table on\n\t *  @param {int|null} [iColumn] Column to limit filtering to\n\t *  @param {bool} [bRegex=false] Treat as regular expression or not\n\t *  @param {bool} [bSmart=true] Perform smart filtering or not\n\t *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n\t *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Sometime later - filter...\n\t *      oTable.fnFilter( 'test string' );\n\t *    } );\n\t */\n\tthis.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )\n\t{\n\t\tvar api = this.api( true );\n\t\n\t\tif ( iColumn === null || iColumn === undefined ) {\n\t\t\tapi.search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t}\n\t\telse {\n\t\t\tapi.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t}\n\t\n\t\tapi.draw();\n\t};\n\t\n\t\n\t/**\n\t * Get the data for the whole table, an individual row or an individual cell based on the\n\t * provided parameters.\n\t *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n\t *    a TR node then the data source for the whole row will be returned. If given as a\n\t *    TD/TH cell node then iCol will be automatically calculated and the data for the\n\t *    cell returned. If given as an integer, then this is treated as the aoData internal\n\t *    data index for the row (see fnGetPosition) and the data for that row used.\n\t *  @param {int} [col] Optional column index that you want the data of.\n\t *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n\t *    returned. If mRow is defined, just data for that row, and is iCol is\n\t *    defined, only data for the designated cell is returned.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    // Row data\n\t *    $(document).ready(function() {\n\t *      oTable = $('#example').dataTable();\n\t *\n\t *      oTable.$('tr').click( function () {\n\t *        var data = oTable.fnGetData( this );\n\t *        // ... do something with the array / object of data for the row\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Individual cell data\n\t *    $(document).ready(function() {\n\t *      oTable = $('#example').dataTable();\n\t *\n\t *      oTable.$('td').click( function () {\n\t *        var sData = oTable.fnGetData( this );\n\t *        alert( 'The cell clicked on had the value of '+sData );\n\t *      } );\n\t *    } );\n\t */\n\tthis.fnGetData = function( src, col )\n\t{\n\t\tvar api = this.api( true );\n\t\n\t\tif ( src !== undefined ) {\n\t\t\tvar type = src.nodeName ? src.nodeName.toLowerCase() : '';\n\t\n\t\t\treturn col !== undefined || type == 'td' || type == 'th' ?\n\t\t\t\tapi.cell( src, col ).data() :\n\t\t\t\tapi.row( src ).data() || null;\n\t\t}\n\t\n\t\treturn api.data().toArray();\n\t};\n\t\n\t\n\t/**\n\t * Get an array of the TR nodes that are used in the table's body. Note that you will\n\t * typically want to use the '$' API method in preference to this as it is more\n\t * flexible.\n\t *  @param {int} [iRow] Optional row index for the TR element you want\n\t *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n\t *    in the table's body, or iRow is defined, just the TR element requested.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Get the nodes from the table\n\t *      var nNodes = oTable.fnGetNodes( );\n\t *    } );\n\t */\n\tthis.fnGetNodes = function( iRow )\n\t{\n\t\tvar api = this.api( true );\n\t\n\t\treturn iRow !== undefined ?\n\t\t\tapi.row( iRow ).node() :\n\t\t\tapi.rows().nodes().flatten().toArray();\n\t};\n\t\n\t\n\t/**\n\t * Get the array indexes of a particular cell from it's DOM element\n\t * and column index including hidden columns\n\t *  @param {node} node this can either be a TR, TD or TH in the table's body\n\t *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n\t *    if given as a cell, an array of [row index, column index (visible),\n\t *    column index (all)] is given.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      $('#example tbody td').click( function () {\n\t *        // Get the position of the current data from the node\n\t *        var aPos = oTable.fnGetPosition( this );\n\t *\n\t *        // Get the data array for this row\n\t *        var aData = oTable.fnGetData( aPos[0] );\n\t *\n\t *        // Update the data array and return the value\n\t *        aData[ aPos[1] ] = 'clicked';\n\t *        this.innerHTML = 'clicked';\n\t *      } );\n\t *\n\t *      // Init DataTables\n\t *      oTable = $('#example').dataTable();\n\t *    } );\n\t */\n\tthis.fnGetPosition = function( node )\n\t{\n\t\tvar api = this.api( true );\n\t\tvar nodeName = node.nodeName.toUpperCase();\n\t\n\t\tif ( nodeName == 'TR' ) {\n\t\t\treturn api.row( node ).index();\n\t\t}\n\t\telse if ( nodeName == 'TD' || nodeName == 'TH' ) {\n\t\t\tvar cell = api.cell( node ).index();\n\t\n\t\t\treturn [\n\t\t\t\tcell.row,\n\t\t\t\tcell.columnVisible,\n\t\t\t\tcell.column\n\t\t\t];\n\t\t}\n\t\treturn null;\n\t};\n\t\n\t\n\t/**\n\t * Check to see if a row is 'open' or not.\n\t *  @param {node} nTr the table row to check\n\t *  @returns {boolean} true if the row is currently open, false otherwise\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable;\n\t *\n\t *      // 'open' an information row when a row is clicked on\n\t *      $('#example tbody tr').click( function () {\n\t *        if ( oTable.fnIsOpen(this) ) {\n\t *          oTable.fnClose( this );\n\t *        } else {\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t *        }\n\t *      } );\n\t *\n\t *      oTable = $('#example').dataTable();\n\t *    } );\n\t */\n\tthis.fnIsOpen = function( nTr )\n\t{\n\t\treturn this.api( true ).row( nTr ).child.isShown();\n\t};\n\t\n\t\n\t/**\n\t * This function will place a new row directly after a row which is currently\n\t * on display on the page, with the HTML contents that is passed into the\n\t * function. This can be used, for example, to ask for confirmation that a\n\t * particular record should be deleted.\n\t *  @param {node} nTr The table row to 'open'\n\t *  @param {string|node|jQuery} mHtml The HTML to put into the row\n\t *  @param {string} sClass Class to give the new TD cell\n\t *  @returns {node} The row opened. Note that if the table row passed in as the\n\t *    first parameter, is not found in the table, this method will silently\n\t *    return.\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable;\n\t *\n\t *      // 'open' an information row when a row is clicked on\n\t *      $('#example tbody tr').click( function () {\n\t *        if ( oTable.fnIsOpen(this) ) {\n\t *          oTable.fnClose( this );\n\t *        } else {\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t *        }\n\t *      } );\n\t *\n\t *      oTable = $('#example').dataTable();\n\t *    } );\n\t */\n\tthis.fnOpen = function( nTr, mHtml, sClass )\n\t{\n\t\treturn this.api( true )\n\t\t\t.row( nTr )\n\t\t\t.child( mHtml, sClass )\n\t\t\t.show()\n\t\t\t.child()[0];\n\t};\n\t\n\t\n\t/**\n\t * Change the pagination - provides the internal logic for pagination in a simple API\n\t * function. With this function you can have a DataTables table go to the next,\n\t * previous, first or last pages.\n\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n\t *    or page number to jump to (integer), note that page 0 is the first page.\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      oTable.fnPageChange( 'next' );\n\t *    } );\n\t */\n\tthis.fnPageChange = function ( mAction, bRedraw )\n\t{\n\t\tvar api = this.api( true ).page( mAction );\n\t\n\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\tapi.draw(false);\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Show a particular column\n\t *  @param {int} iCol The column whose display should be changed\n\t *  @param {bool} bShow Show (true) or hide (false) the column\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Hide the second column after initialisation\n\t *      oTable.fnSetColumnVis( 1, false );\n\t *    } );\n\t */\n\tthis.fnSetColumnVis = function ( iCol, bShow, bRedraw )\n\t{\n\t\tvar api = this.api( true ).column( iCol ).visible( bShow );\n\t\n\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\tapi.columns.adjust().draw();\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Get the settings for a particular table for external manipulation\n\t *  @returns {object} DataTables settings object. See\n\t *    {@link DataTable.models.oSettings}\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      var oSettings = oTable.fnSettings();\n\t *\n\t *      // Show an example parameter from the settings\n\t *      alert( oSettings._iDisplayStart );\n\t *    } );\n\t */\n\tthis.fnSettings = function()\n\t{\n\t\treturn _fnSettingsFromNode( this[_ext.iApiIndex] );\n\t};\n\t\n\t\n\t/**\n\t * Sort the table by a particular column\n\t *  @param {int} iCol the data index to sort on. Note that this will not match the\n\t *    'display index' if you have hidden data entries\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Sort immediately with columns 0 and 1\n\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n\t *    } );\n\t */\n\tthis.fnSort = function( aaSort )\n\t{\n\t\tthis.api( true ).order( aaSort ).draw();\n\t};\n\t\n\t\n\t/**\n\t * Attach a sort listener to an element for a given column\n\t *  @param {node} nNode the element to attach the sort listener to\n\t *  @param {int} iColumn the column that a click on this node will sort on\n\t *  @param {function} [fnCallback] callback function when sort is run\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Sort on column 1, when 'sorter' is clicked on\n\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n\t *    } );\n\t */\n\tthis.fnSortListener = function( nNode, iColumn, fnCallback )\n\t{\n\t\tthis.api( true ).order.listener( nNode, iColumn, fnCallback );\n\t};\n\t\n\t\n\t/**\n\t * Update a table cell or row - this method will accept either a single value to\n\t * update the cell with, an array of values with one element for each column or\n\t * an object in the same format as the original data source. The function is\n\t * self-referencing in order to make the multi column updates easier.\n\t *  @param {object|array|string} mData Data to update the cell/row with\n\t *  @param {node|int} mRow TR element you want to update or the aoData index\n\t *  @param {int} [iColumn] The column to update, give as null or undefined to\n\t *    update a whole row.\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t *  @param {bool} [bAction=true] Perform pre-draw actions or not\n\t *  @returns {int} 0 on success, 1 on error\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n\t *    } );\n\t */\n\tthis.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )\n\t{\n\t\tvar api = this.api( true );\n\t\n\t\tif ( iColumn === undefined || iColumn === null ) {\n\t\t\tapi.row( mRow ).data( mData );\n\t\t}\n\t\telse {\n\t\t\tapi.cell( mRow, iColumn ).data( mData );\n\t\t}\n\t\n\t\tif ( bAction === undefined || bAction ) {\n\t\t\tapi.columns.adjust();\n\t\t}\n\t\n\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\tapi.draw();\n\t\t}\n\t\treturn 0;\n\t};\n\t\n\t\n\t/**\n\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\n\t * to ensure compatibility.\n\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n\t *    formats \"X\" and \"X.Y\" are also acceptable.\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n\t *    version, or false if this version of DataTales is not suitable\n\t *  @method\n\t *  @dtopt API\n\t *  @deprecated Since v1.10\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n\t *    } );\n\t */\n\tthis.fnVersionCheck = _ext.fnVersionCheck;\n\t\n\n\tvar _that = this;\n\tvar emptyInit = options === undefined;\n\tvar len = this.length;\n\n\tif ( emptyInit ) {\n\t\toptions = {};\n\t}\n\n\tthis.oApi = this.internal = _ext.internal;\n\n\t// Extend with old style plug-in API methods\n\tfor ( var fn in DataTable.ext.internal ) {\n\t\tif ( fn ) {\n\t\t\tthis[fn] = _fnExternApiFunc(fn);\n\t\t}\n\t}\n\n\tthis.each(function() {\n\t\t// For each initialisation we want to give it a clean initialisation\n\t\t// object that can be bashed around\n\t\tvar o = {};\n\t\tvar oInit = len > 1 ? // optimisation for single table case\n\t\t\t_fnExtend( o, options, true ) :\n\t\t\toptions;\n\n\t\t/*global oInit,_that,emptyInit*/\n\t\tvar i=0, iLen, j, jLen, k, kLen;\n\t\tvar sId = this.getAttribute( 'id' );\n\t\tvar bInitHandedOff = false;\n\t\tvar defaults = DataTable.defaults;\n\t\tvar $this = $(this);\n\t\t\n\t\t\n\t\t/* Sanity check */\n\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t{\n\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t/* Backwards compatibility for the defaults */\n\t\t_fnCompatOpts( defaults );\n\t\t_fnCompatCols( defaults.column );\n\t\t\n\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t_fnCamelToHungarian( defaults, defaults, true );\n\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\n\t\t\n\t\t/* Setting up the initialisation object */\n\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ), true );\n\t\t\n\t\t\n\t\t\n\t\t/* Check to see if we are re-initialising a table */\n\t\tvar allSettings = DataTable.settings;\n\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar s = allSettings[i];\n\t\t\n\t\t\t/* Base check on table node */\n\t\t\tif (\n\t\t\t\ts.nTable == this ||\n\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\n\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\n\t\t\t) {\n\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\t\t\n\t\t\t\tif ( emptyInit || bRetrieve )\n\t\t\t\t{\n\t\t\t\t\treturn s.oInstance;\n\t\t\t\t}\n\t\t\t\telse if ( bDestroy )\n\t\t\t\t{\n\t\t\t\t\ts.oInstance.fnDestroy();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t */\n\t\t\tif ( s.sTableId == this.id )\n\t\t\t{\n\t\t\t\tallSettings.splice( i, 1 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Ensure the table has an ID - required for accessibility */\n\t\tif ( sId === null || sId === \"\" )\n\t\t{\n\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\n\t\t\tthis.id = sId;\n\t\t}\n\t\t\n\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\"sInstance\":     sId,\n\t\t\t\"sTableId\":      sId\n\t\t} );\n\t\toSettings.nTable = this;\n\t\toSettings.oApi   = _that.internal;\n\t\toSettings.oInit  = oInit;\n\t\t\n\t\tallSettings.push( oSettings );\n\t\t\n\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\n\t\t\n\t\t// Backwards compatibility, before we apply all the defaults\n\t\t_fnCompatOpts( oInit );\n\t\t_fnLanguageCompat( oInit.oLanguage );\n\t\t\n\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\n\t\t{\n\t\t\toInit.iDisplayLength = Array.isArray( oInit.aLengthMenu[0] ) ?\n\t\t\t\toInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n\t\t}\n\t\t\n\t\t// Apply the defaults and init options to make a single init object will all\n\t\t// options defined from defaults and instance options.\n\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\n\t\t\n\t\t\n\t\t// Map the initialisation options onto the settings object\n\t\t_fnMap( oSettings.oFeatures, oInit, [\n\t\t\t\"bPaginate\",\n\t\t\t\"bLengthChange\",\n\t\t\t\"bFilter\",\n\t\t\t\"bSort\",\n\t\t\t\"bSortMulti\",\n\t\t\t\"bInfo\",\n\t\t\t\"bProcessing\",\n\t\t\t\"bAutoWidth\",\n\t\t\t\"bSortClasses\",\n\t\t\t\"bServerSide\",\n\t\t\t\"bDeferRender\"\n\t\t] );\n\t\t_fnMap( oSettings, oInit, [\n\t\t\t\"asStripeClasses\",\n\t\t\t\"ajax\",\n\t\t\t\"fnServerData\",\n\t\t\t\"fnFormatNumber\",\n\t\t\t\"sServerMethod\",\n\t\t\t\"aaSorting\",\n\t\t\t\"aaSortingFixed\",\n\t\t\t\"aLengthMenu\",\n\t\t\t\"sPaginationType\",\n\t\t\t\"sAjaxSource\",\n\t\t\t\"sAjaxDataProp\",\n\t\t\t\"iStateDuration\",\n\t\t\t\"sDom\",\n\t\t\t\"bSortCellsTop\",\n\t\t\t\"iTabIndex\",\n\t\t\t\"fnStateLoadCallback\",\n\t\t\t\"fnStateSaveCallback\",\n\t\t\t\"renderer\",\n\t\t\t\"searchDelay\",\n\t\t\t\"rowId\",\n\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\n\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\n\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\n\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ]\n\t\t] );\n\t\t_fnMap( oSettings.oScroll, oInit, [\n\t\t\t[ \"sScrollX\", \"sX\" ],\n\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\n\t\t\t[ \"sScrollY\", \"sY\" ],\n\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\n\t\t] );\n\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\t\t\n\t\t/* Callback functions which are array driven */\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );\n\t\t_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );\n\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );\n\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );\n\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );\n\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );\n\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );\n\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );\n\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );\n\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );\n\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );\n\t\t\n\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\n\t\t\n\t\t/* Browser support detection */\n\t\t_fnBrowserDetect( oSettings );\n\t\t\n\t\tvar oClasses = oSettings.oClasses;\n\t\t\n\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\n\t\t$this.addClass( oClasses.sTable );\n\t\t\n\t\t\n\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t{\n\t\t\t/* Display start point, taking into account the save saving */\n\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t}\n\t\t\n\t\tif ( oInit.iDeferLoading !== null )\n\t\t{\n\t\t\toSettings.bDeferLoading = true;\n\t\t\tvar tmp = Array.isArray( oInit.iDeferLoading );\n\t\t\toSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n\t\t\toSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n\t\t}\n\t\t\n\t\t/* Language definitions */\n\t\tvar oLanguage = oSettings.oLanguage;\n\t\t$.extend( true, oLanguage, oInit.oLanguage );\n\t\t\n\t\tif ( oLanguage.sUrl )\n\t\t{\n\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\n\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that\n\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n\t\t\t */\n\t\t\t$.ajax( {\n\t\t\t\tdataType: 'json',\n\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\tsuccess: function ( json ) {\n\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\n\t\t\t\t\t_fnLanguageCompat( json );\n\t\t\t\t\t$.extend( true, oLanguage, json, oSettings.oInit.oLanguage );\n\t\t\n\t\t\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t},\n\t\t\t\terror: function () {\n\t\t\t\t\t// Error occurred loading language file, continue on as best we can\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t}\n\t\t\t} );\n\t\t\tbInitHandedOff = true;\n\t\t}\n\t\telse {\n\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\n\t\t}\n\t\t\n\t\t/*\n\t\t * Stripes\n\t\t */\n\t\tif ( oInit.asStripeClasses === null )\n\t\t{\n\t\t\toSettings.asStripeClasses =[\n\t\t\t\toClasses.sStripeOdd,\n\t\t\t\toClasses.sStripeEven\n\t\t\t];\n\t\t}\n\t\t\n\t\t/* Remove row stripe classes if they are already on the table row */\n\t\tvar stripeClasses = oSettings.asStripeClasses;\n\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\n\t\tif ( $.inArray( true, $.map( stripeClasses, function(el, i) {\n\t\t\treturn rowOne.hasClass(el);\n\t\t} ) ) !== -1 ) {\n\t\t\t$('tbody tr', this).removeClass( stripeClasses.join(' ') );\n\t\t\toSettings.asDestroyStripes = stripeClasses.slice();\n\t\t}\n\t\t\n\t\t/*\n\t\t * Columns\n\t\t * See if we should load columns automatically or use defined ones\n\t\t */\n\t\tvar anThs = [];\n\t\tvar aoColumnsInit;\n\t\tvar nThead = this.getElementsByTagName('thead');\n\t\tif ( nThead.length !== 0 )\n\t\t{\n\t\t\t_fnDetectHeader( oSettings.aoHeader, nThead[0] );\n\t\t\tanThs = _fnGetUniqueThs( oSettings );\n\t\t}\n\t\t\n\t\t/* If not given a column array, generate one with nulls */\n\t\tif ( oInit.aoColumns === null )\n\t\t{\n\t\t\taoColumnsInit = [];\n\t\t\tfor ( i=0, iLen=anThs.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\taoColumnsInit.push( null );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\taoColumnsInit = oInit.aoColumns;\n\t\t}\n\t\t\n\t\t/* Add the columns */\n\t\tfor ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )\n\t\t{\n\t\t\t_fnAddColumn( oSettings, anThs ? anThs[i] : null );\n\t\t}\n\t\t\n\t\t/* Apply the column definitions */\n\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t} );\n\t\t\n\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t * attributes are found\n\t\t */\n\t\tif ( rowOne.length ) {\n\t\t\tvar a = function ( cell, name ) {\n\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\n\t\t\t};\n\t\t\n\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\n\t\t\t\tvar col = oSettings.aoColumns[i];\n\t\t\n\t\t\t\tif (! col) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t\t}\n\t\t\n\t\t\t\tif ( col.mData === i ) {\n\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\n\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\n\t\t\n\t\t\t\t\tif ( sort !== null || filter !== null ) {\n\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t_:      i+'.display',\n\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\n\t\t\t\t\t\t};\n\t\t\t\t\t\tcol._isArrayHost = true;\n\t\t\n\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\t\n\t\tvar features = oSettings.oFeatures;\n\t\tvar loadedInit = function () {\n\t\t\t/*\n\t\t\t * Sorting\n\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler\n\t\t\t */\n\t\t\n\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t\t// in case that has been altered, so the default sort reflects that option\n\t\t\tif ( oInit.aaSorting === undefined ) {\n\t\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\n\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t\t * account, and also will apply sorting disabled classes if disabled\n\t\t\t */\n\t\t\t_fnSortingClasses( oSettings );\n\t\t\n\t\t\tif ( features.bSort ) {\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\tif ( oSettings.bSorted ) {\n\t\t\t\t\t\tvar aSort = _fnSortFlatten( oSettings );\n\t\t\t\t\t\tvar sortedColumns = {};\n\t\t\n\t\t\t\t\t\t$.each( aSort, function (i, val) {\n\t\t\t\t\t\t\tsortedColumns[ val.src ] = val.dir;\n\t\t\t\t\t\t} );\n\t\t\n\t\t\t\t\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );\n\t\t\t\t\t\t_fnSortAria( oSettings );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\n\t\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\t}\n\t\t\t}, 'sc' );\n\t\t\n\t\t\n\t\t\t/*\n\t\t\t * Final init\n\t\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t\t */\n\t\t\n\t\t\t// Work around for Webkit bug 83867 - store the caption-side before removing from doc\n\t\t\tvar captions = $this.children('caption').each( function () {\n\t\t\t\tthis._captionSide = $(this).css('caption-side');\n\t\t\t} );\n\t\t\n\t\t\tvar thead = $this.children('thead');\n\t\t\tif ( thead.length === 0 ) {\n\t\t\t\tthead = $('<thead/>').appendTo($this);\n\t\t\t}\n\t\t\toSettings.nTHead = thead[0];\n\t\t\n\t\t\tvar tbody = $this.children('tbody');\n\t\t\tif ( tbody.length === 0 ) {\n\t\t\t\ttbody = $('<tbody/>').insertAfter(thead);\n\t\t\t}\n\t\t\toSettings.nTBody = tbody[0];\n\t\t\n\t\t\tvar tfoot = $this.children('tfoot');\n\t\t\tif ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") ) {\n\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\t\ttfoot = $('<tfoot/>').appendTo($this);\n\t\t\t}\n\t\t\n\t\t\tif ( tfoot.length === 0 || tfoot.children().length === 0 ) {\n\t\t\t\t$this.addClass( oClasses.sNoFooter );\n\t\t\t}\n\t\t\telse if ( tfoot.length > 0 ) {\n\t\t\t\toSettings.nTFoot = tfoot[0];\n\t\t\t\t_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );\n\t\t\t}\n\t\t\n\t\t\t/* Check if there is data passing into the constructor */\n\t\t\tif ( oInit.aaData ) {\n\t\t\t\tfor ( i=0 ; i<oInit.aaData.length ; i++ ) {\n\t\t\t\t\t_fnAddData( oSettings, oInit.aaData[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' ) {\n\t\t\t\t/* Grab the data from the page - only do this when deferred loading or no Ajax\n\t\t\t\t * source since there is no point in reading the DOM data if we are then going\n\t\t\t\t * to replace it with Ajax data\n\t\t\t\t */\n\t\t\t\t_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );\n\t\t\t}\n\t\t\n\t\t\t/* Copy the data index array */\n\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\n\t\t\t/* Initialisation complete - table can be drawn */\n\t\t\toSettings.bInitialised = true;\n\t\t\n\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\n\t\t\t * language processor)\n\t\t\t */\n\t\t\tif ( bInitHandedOff === false ) {\n\t\t\t\t_fnInitialise( oSettings );\n\t\t\t}\n\t\t};\n\t\t\n\t\t/* Must be done after everything which can be overridden by the state saving! */\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );\n\t\t\n\t\tif ( oInit.bStateSave )\n\t\t{\n\t\t\tfeatures.bStateSave = true;\n\t\t\t_fnLoadState( oSettings, oInit, loadedInit );\n\t\t}\n\t\telse {\n\t\t\tloadedInit();\n\t\t}\n\t\t\n\t} );\n\t_that = null;\n\treturn this;\n};\n\n\n/*\n * It is useful to have variables which are scoped locally so only the\n * DataTables functions can access them and they don't leak into global space.\n * At the same time these functions are often useful over multiple files in the\n * core and API, so we list, or at least document, all variables which are used\n * by DataTables as private variables here. This also ensures that there is no\n * clashing of variable names and that they can easily referenced for reuse.\n */\n\n\n// Defined else where\n//  _selector_run\n//  _selector_opts\n//  _selector_first\n//  _selector_row_indexes\n\nvar _ext; // DataTable.ext\nvar _Api; // DataTable.Api\nvar _api_register; // DataTable.Api.register\nvar _api_registerPlural; // DataTable.Api.registerPlural\n\nvar _re_dic = {};\nvar _re_new_lines = /[\\r\\n\\u2028]/g;\nvar _re_html = /<.*?>/g;\n\n// This is not strict ISO8601 - Date.parse() is quite lax, although\n// implementations differ between browsers.\nvar _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/;\n\n// Escape regular expression special characters\nvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\n\n// https://en.wikipedia.org/wiki/Foreign_exchange_market\n// - \\u20BD - Russian ruble.\n// - \\u20a9 - South Korean Won\n// - \\u20BA - Turkish Lira\n// - \\u20B9 - Indian Rupee\n// - R - Brazil (R$) and South Africa\n// - fr - Swiss Franc\n// - kr - Swedish krona, Norwegian krone and Danish krone\n// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n// - É - Bitcoin\n// - Î - Ethereum\n//   standards as thousands separators.\nvar _re_formatted_numeric = /['\\u00A0,$Â£â¬Â¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkÉÎ]/gi;\n\n\nvar _empty = function ( d ) {\n\treturn !d || d === true || d === '-' ? true : false;\n};\n\n\nvar _intVal = function ( s ) {\n\tvar integer = parseInt( s, 10 );\n\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n};\n\n// Convert from a formatted number with characters other than `.` as the\n// decimal place, to a Javascript number\nvar _numToDecimal = function ( num, decimalPoint ) {\n\t// Cache created regular expressions for speed as this function is called often\n\tif ( ! _re_dic[ decimalPoint ] ) {\n\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\n\t}\n\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\n\t\tnum;\n};\n\n\nvar _isNumber = function ( d, decimalPoint, formatted ) {\n\tvar type = typeof d;\n\tvar strType = type === 'string';\n\n\tif ( type === 'number' || type === 'bigint') {\n\t\treturn true;\n\t}\n\n\t// If empty return immediately so there must be a number if it is a\n\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t// as a formatted number for currency\n\tif ( _empty( d ) ) {\n\t\treturn true;\n\t}\n\n\tif ( decimalPoint && strType ) {\n\t\td = _numToDecimal( d, decimalPoint );\n\t}\n\n\tif ( formatted && strType ) {\n\t\td = d.replace( _re_formatted_numeric, '' );\n\t}\n\n\treturn !isNaN( parseFloat(d) ) && isFinite( d );\n};\n\n\n// A string without HTML in it can be considered to be HTML still\nvar _isHtml = function ( d ) {\n\treturn _empty( d ) || typeof d === 'string';\n};\n\n\nvar _htmlNumeric = function ( d, decimalPoint, formatted ) {\n\tif ( _empty( d ) ) {\n\t\treturn true;\n\t}\n\n\tvar html = _isHtml( d );\n\treturn ! html ?\n\t\tnull :\n\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?\n\t\t\ttrue :\n\t\t\tnull;\n};\n\n\nvar _pluck = function ( a, prop, prop2 ) {\n\tvar out = [];\n\tvar i=0, ien=a.length;\n\n\t// Could have the test in the loop for slightly smaller code, but speed\n\t// is essential here\n\tif ( prop2 !== undefined ) {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[i] && a[i][ prop ] ) {\n\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[i] ) {\n\t\t\t\tout.push( a[i][ prop ] );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\n// Basically the same as _pluck, but rather than looping over `a` we use `order`\n// as the indexes to pick from `a`\nvar _pluck_order = function ( a, order, prop, prop2 )\n{\n\tvar out = [];\n\tvar i=0, ien=order.length;\n\n\t// Could have the test in the loop for slightly smaller code, but speed\n\t// is essential here\n\tif ( prop2 !== undefined ) {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[ order[i] ][ prop ] ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tout.push( a[ order[i] ][ prop ] );\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\nvar _range = function ( len, start )\n{\n\tvar out = [];\n\tvar end;\n\n\tif ( start === undefined ) {\n\t\tstart = 0;\n\t\tend = len;\n\t}\n\telse {\n\t\tend = start;\n\t\tstart = len;\n\t}\n\n\tfor ( var i=start ; i<end ; i++ ) {\n\t\tout.push( i );\n\t}\n\n\treturn out;\n};\n\n\nvar _removeEmpty = function ( a )\n{\n\tvar out = [];\n\n\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\tif ( a[i] ) { // careful - will remove all falsy values!\n\t\t\tout.push( a[i] );\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\nvar _stripHtml = function ( d ) {\n\treturn d\n\t\t.replace( _re_html, '' ) // Complete tags\n\t\t.replace(/<script/i, ''); // Safety for incomplete script tag\n};\n\n\n/**\n * Determine if all values in the array are unique. This means we can short\n * cut the _unique method at the cost of a single loop. A sorted array is used\n * to easily check the values.\n *\n * @param  {array} src Source array\n * @return {boolean} true if all unique, false otherwise\n * @ignore\n */\nvar _areAllUnique = function ( src ) {\n\tif ( src.length < 2 ) {\n\t\treturn true;\n\t}\n\n\tvar sorted = src.slice().sort();\n\tvar last = sorted[0];\n\n\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\n\t\tif ( sorted[i] === last ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlast = sorted[i];\n\t}\n\n\treturn true;\n};\n\n\n/**\n * Find the unique elements in a source array.\n *\n * @param  {array} src Source array\n * @return {array} Array of unique items\n * @ignore\n */\nvar _unique = function ( src )\n{\n\tif ( _areAllUnique( src ) ) {\n\t\treturn src.slice();\n\t}\n\n\t// A faster unique method is to use object keys to identify used values,\n\t// but this doesn't work with arrays or objects, which we must also\n\t// consider. See jsperf.com/compare-array-unique-versions/4 for more\n\t// information.\n\tvar\n\t\tout = [],\n\t\tval,\n\t\ti, ien=src.length,\n\t\tj, k=0;\n\n\tagain: for ( i=0 ; i<ien ; i++ ) {\n\t\tval = src[i];\n\n\t\tfor ( j=0 ; j<k ; j++ ) {\n\t\t\tif ( out[j] === val ) {\n\t\t\t\tcontinue again;\n\t\t\t}\n\t\t}\n\n\t\tout.push( val );\n\t\tk++;\n\t}\n\n\treturn out;\n};\n\n// Surprisingly this is faster than [].concat.apply\n// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\nvar _flatten = function (out, val) {\n\tif (Array.isArray(val)) {\n\t\tfor (var i=0 ; i<val.length ; i++) {\n\t\t\t_flatten(out, val[i]);\n\t\t}\n\t}\n\telse {\n\t\tout.push(val);\n\t}\n  \n\treturn out;\n}\n\nvar _includes = function (search, start) {\n\tif (start === undefined) {\n\t\tstart = 0;\n\t}\n\n\treturn this.indexOf(search, start) !== -1;\t\n};\n\n// Array.isArray polyfill.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\nif (! Array.isArray) {\n    Array.isArray = function(arg) {\n        return Object.prototype.toString.call(arg) === '[object Array]';\n    };\n}\n\nif (! Array.prototype.includes) {\n\tArray.prototype.includes = _includes;\n}\n\n// .trim() polyfill\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  };\n}\n\nif (! String.prototype.includes) {\n\tString.prototype.includes = _includes;\n}\n\n/**\n * DataTables utility methods\n * \n * This namespace provides helper methods that DataTables uses internally to\n * create a DataTable, but which are not exclusively used only for DataTables.\n * These methods can be used by extension authors to save the duplication of\n * code.\n *\n *  @namespace\n */\nDataTable.util = {\n\t/**\n\t * Throttle the calls to a function. Arguments and context are maintained\n\t * for the throttled function.\n\t *\n\t * @param {function} fn Function to be called\n\t * @param {integer} freq Call frequency in mS\n\t * @return {function} Wrapped function\n\t */\n\tthrottle: function ( fn, freq ) {\n\t\tvar\n\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\tlast,\n\t\t\ttimer;\n\n\t\treturn function () {\n\t\t\tvar\n\t\t\t\tthat = this,\n\t\t\t\tnow  = +new Date(),\n\t\t\t\targs = arguments;\n\n\t\t\tif ( last && now < last + frequency ) {\n\t\t\t\tclearTimeout( timer );\n\n\t\t\t\ttimer = setTimeout( function () {\n\t\t\t\t\tlast = undefined;\n\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t}, frequency );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlast = now;\n\t\t\t\tfn.apply( that, args );\n\t\t\t}\n\t\t};\n\t},\n\n\n\t/**\n\t * Escape a string such that it can be used in a regular expression\n\t *\n\t *  @param {string} val string to escape\n\t *  @returns {string} escaped string\n\t */\n\tescapeRegex: function ( val ) {\n\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\n\t},\n\n\t/**\n\t * Create a function that will write to a nested object or array\n\t * @param {*} source JSON notation string\n\t * @returns Write function\n\t */\n\tset: function ( source ) {\n\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t * for `mRender` which is read only.\n\t\t\t */\n\t\t\treturn DataTable.util.set( source._ );\n\t\t}\n\t\telse if ( source === null ) {\n\t\t\t// Nothing to do when the data source is null\n\t\t\treturn function () {};\n\t\t}\n\t\telse if ( typeof source === 'function' ) {\n\t\t\treturn function (data, val, meta) {\n\t\t\t\tsource( data, 'set', val, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\t\t  source.indexOf('[') !== -1 || source.indexOf('(') !== -1) )\n\t\t{\n\t\t\t// Like the get, we need to get data from a nested object\n\t\t\tvar setData = function (data, val, src) {\n\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\n\t\t\t\tvar aLast = a[a.length-1];\n\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\t\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ ) {\n\t\t\t\t\t// Protect against prototype pollution\n\t\t\t\t\tif (a[i] === '__proto__' || a[i] === 'constructor') {\n\t\t\t\t\t\tthrow new Error('Cannot set prototype values');\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\tdata[ a[i] ] = [];\n\t\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\tinnerSrc = b.join('.');\n\t\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\tdata[ a[i] ] = val;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\tdata = data[ a[i] ]( val );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t}\n\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t}\n\t\n\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\tif ( aLast.match(__reFn ) ) {\n\t\t\t\t\t// Function call\n\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\treturn setData( data, val, source );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Array or flat object mapping\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\tdata[source] = val;\n\t\t\t};\n\t\t}\n\t},\n\n\t/**\n\t * Create a function that will read nested objects from arrays, based on JSON notation\n\t * @param {*} source JSON notation string\n\t * @returns Value read\n\t */\n\tget: function ( source ) {\n\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t// Build an object of get functions, and wrap them in a single call\n\t\t\tvar o = {};\n\t\t\t$.each( source, function (key, val) {\n\t\t\t\tif ( val ) {\n\t\t\t\t\to[key] = DataTable.util.get( val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\tvar t = o[type] || o._;\n\t\t\t\treturn t !== undefined ?\n\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\tdata;\n\t\t\t};\n\t\t}\n\t\telse if ( source === null ) {\n\t\t\t// Give an empty string for rendering / sorting etc\n\t\t\treturn function (data) { // type, row and meta also passed, but not used\n\t\t\t\treturn data;\n\t\t\t};\n\t\t}\n\t\telse if ( typeof source === 'function' ) {\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\treturn source( data, type, row, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\t\t  source.indexOf('[') !== -1 || source.indexOf('(') !== -1) )\n\t\t{\n\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t * be used if defined, rather than throwing an error\n\t\t\t */\n\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\t\n\t\t\t\tif ( src !== \"\" ) {\n\t\t\t\t\tvar a = _fnSplitObjNotation( src );\n\t\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ ) {\n\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tout = [];\n\t\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\t\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\tif ( Array.isArray( data ) ) {\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\t\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[ a[i] ]();\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (data === null || data[ a[i] ] === null) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( data === undefined || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn fetchData( data, type, source );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Array or flat object mapping\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn data[source];\n\t\t\t};\n\t\t}\n\t}\n};\n\n\n\n/**\n * Create a mapping object that allows camel case parameters to be looked up\n * for their Hungarian counterparts. The mapping is stored in a private\n * parameter called `_hungarianMap` which can be accessed on the source object.\n *  @param {object} o\n *  @memberof DataTable#oApi\n */\nfunction _fnHungarianMap ( o )\n{\n\tvar\n\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\tmatch,\n\t\tnewKey,\n\t\tmap = {};\n\n\t$.each( o, function (key, val) {\n\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\n\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\n\t\t{\n\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\n\t\t\tmap[ newKey ] = key;\n\n\t\t\tif ( match[1] === 'o' )\n\t\t\t{\n\t\t\t\t_fnHungarianMap( o[key] );\n\t\t\t}\n\t\t}\n\t} );\n\n\to._hungarianMap = map;\n}\n\n\n/**\n * Convert from camel case parameters to Hungarian, based on a Hungarian map\n * created by _fnHungarianMap.\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n *  @memberof DataTable#oApi\n */\nfunction _fnCamelToHungarian ( src, user, force )\n{\n\tif ( ! src._hungarianMap ) {\n\t\t_fnHungarianMap( src );\n\t}\n\n\tvar hungarianKey;\n\n\t$.each( user, function (key, val) {\n\t\thungarianKey = src._hungarianMap[ key ];\n\n\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\n\t\t{\n\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\tif ( hungarianKey.charAt(0) === 'o' )\n\t\t\t{\n\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\tif ( ! user[ hungarianKey ] ) {\n\t\t\t\t\tuser[ hungarianKey ] = {};\n\t\t\t\t}\n\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\n\n\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tuser[hungarianKey] = user[ key ];\n\t\t\t}\n\t\t}\n\t} );\n}\n\n\n/**\n * Language compatibility - when certain options are given, and others aren't, we\n * need to duplicate the values over, in order to provide backwards compatibility\n * with older language files.\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnLanguageCompat( lang )\n{\n\t// Note the use of the Hungarian notation for the parameters in this method as\n\t// this is called after the mapping of camelCase to Hungarian\n\tvar defaults = DataTable.defaults.oLanguage;\n\n\t// Default mapping\n\tvar defaultDecimal = defaults.sDecimal;\n\tif ( defaultDecimal ) {\n\t\t_addNumericSort( defaultDecimal );\n\t}\n\n\tif ( lang ) {\n\t\tvar zeroRecords = lang.sZeroRecords;\n\n\t\t// Backwards compatibility - if there is no sEmptyTable given, then use the same as\n\t\t// sZeroRecords - assuming that is given.\n\t\tif ( ! lang.sEmptyTable && zeroRecords &&\n\t\t\tdefaults.sEmptyTable === \"No data available in table\" )\n\t\t{\n\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );\n\t\t}\n\n\t\t// Likewise with loading records\n\t\tif ( ! lang.sLoadingRecords && zeroRecords &&\n\t\t\tdefaults.sLoadingRecords === \"Loading...\" )\n\t\t{\n\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );\n\t\t}\n\n\t\t// Old parameter name of the thousands separator mapped onto the new\n\t\tif ( lang.sInfoThousands ) {\n\t\t\tlang.sThousands = lang.sInfoThousands;\n\t\t}\n\n\t\tvar decimal = lang.sDecimal;\n\t\tif ( decimal && defaultDecimal !== decimal ) {\n\t\t\t_addNumericSort( decimal );\n\t\t}\n\t}\n}\n\n\n/**\n * Map one parameter onto another\n *  @param {object} o Object to map\n *  @param {*} knew The new parameter name\n *  @param {*} old The old parameter name\n */\nvar _fnCompatMap = function ( o, knew, old ) {\n\tif ( o[ knew ] !== undefined ) {\n\t\to[ old ] = o[ knew ];\n\t}\n};\n\n\n/**\n * Provide backwards compatibility for the main DT options. Note that the new\n * options are mapped onto the old parameters, so this is an external interface\n * change only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatOpts ( init )\n{\n\t_fnCompatMap( init, 'ordering',      'bSort' );\n\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\n\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\n\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\n\t_fnCompatMap( init, 'order',         'aaSorting' );\n\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\n\t_fnCompatMap( init, 'paging',        'bPaginate' );\n\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\n\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\n\t_fnCompatMap( init, 'searching',     'bFilter' );\n\n\t// Boolean initialisation of x-scrolling\n\tif ( typeof init.sScrollX === 'boolean' ) {\n\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t}\n\tif ( typeof init.scrollX === 'boolean' ) {\n\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t}\n\n\t// Column search objects are in an array, so it needs to be converted\n\t// element by element\n\tvar searchCols = init.aoSearchCols;\n\n\tif ( searchCols ) {\n\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\n\t\t\tif ( searchCols[i] ) {\n\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Provide backwards compatibility for column options. Note that the new options\n * are mapped onto the old parameters, so this is an external interface change\n * only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatCols ( init )\n{\n\t_fnCompatMap( init, 'orderable',     'bSortable' );\n\t_fnCompatMap( init, 'orderData',     'aDataSort' );\n\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\n\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\n\n\t// orderData can be given as an integer\n\tvar dataSort = init.aDataSort;\n\tif ( typeof dataSort === 'number' && ! Array.isArray( dataSort ) ) {\n\t\tinit.aDataSort = [ dataSort ];\n\t}\n}\n\n\n/**\n * Browser feature detection for capabilities, quirks\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBrowserDetect( settings )\n{\n\t// We don't need to do this every time DataTables is constructed, the values\n\t// calculated are specific to the browser and OS configuration which we\n\t// don't expect to change between initialisations\n\tif ( ! DataTable.__browser ) {\n\t\tvar browser = {};\n\t\tDataTable.__browser = browser;\n\n\t\t// Scrolling feature / quirks detection\n\t\tvar n = $('<div/>')\n\t\t\t.css( {\n\t\t\t\tposition: 'fixed',\n\t\t\t\ttop: 0,\n\t\t\t\tleft: $(window).scrollLeft()*-1, // allow for scrolling\n\t\t\t\theight: 1,\n\t\t\t\twidth: 1,\n\t\t\t\toverflow: 'hidden'\n\t\t\t} )\n\t\t\t.append(\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.appendTo( 'body' );\n\n\t\tvar outer = n.children();\n\t\tvar inner = outer.children();\n\n\t\t// Numbers below, in order, are:\n\t\t// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\n\t\t//\n\t\t// IE6 XP:                           100 100 100  83\n\t\t// IE7 Vista:                        100 100 100  83\n\t\t// IE 8+ Windows:                     83  83 100  83\n\t\t// Evergreen Windows:                 83  83 100  83\n\t\t// Evergreen Mac with scrollbars:     85  85 100  85\n\t\t// Evergreen Mac without scrollbars: 100 100 100 100\n\n\t\t// Get scrollbar width\n\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\n\t\t// IE6/7 will oversize a width 100% element inside a scrolling element, to\n\t\t// include the width of the scrollbar, while other browsers ensure the inner\n\t\t// element is contained without forcing scrolling\n\t\tbrowser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\n\n\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t// scrollbar on the left, rather than the right.\n\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\n\n\t\t// IE8- don't provide height and width for getBoundingClientRect\n\t\tbrowser.bBounding = n[0].getBoundingClientRect().width ? true : false;\n\n\t\tn.remove();\n\t}\n\n\t$.extend( settings.oBrowser, DataTable.__browser );\n\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n}\n\n\n/**\n * Array.prototype reduce[Right] method, used for browsers which don't support\n * JS 1.6. Done this way to reduce code size, since we iterate either way\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnReduce ( that, fn, init, start, end, inc )\n{\n\tvar\n\t\ti = start,\n\t\tvalue,\n\t\tisSet = false;\n\n\tif ( init !== undefined ) {\n\t\tvalue = init;\n\t\tisSet = true;\n\t}\n\n\twhile ( i !== end ) {\n\t\tif ( ! that.hasOwnProperty(i) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalue = isSet ?\n\t\t\tfn( value, that[i], i, that ) :\n\t\t\tthat[i];\n\n\t\tisSet = true;\n\t\ti += inc;\n\t}\n\n\treturn value;\n}\n\n/**\n * Add a column to the list used for the table with default values\n *  @param {object} oSettings dataTables settings object\n *  @param {node} nTh The th element for this column\n *  @memberof DataTable#oApi\n */\nfunction _fnAddColumn( oSettings, nTh )\n{\n\t// Add column to aoColumns array\n\tvar oDefaults = DataTable.defaults.column;\n\tvar iCol = oSettings.aoColumns.length;\n\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\"nTh\": nTh ? nTh : document.createElement('th'),\n\t\t\"sTitle\":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',\n\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\tidx: iCol\n\t} );\n\toSettings.aoColumns.push( oCol );\n\n\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t// passed into extend can be undefined. This allows the user to give a default\n\t// with only some of the parameters defined, and also not give a default\n\tvar searchCols = oSettings.aoPreSearchCols;\n\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\n\n\t// Use the default column options function to initialise classes etc\n\t_fnColumnOptions( oSettings, iCol, $(nTh).data() );\n}\n\n\n/**\n * Apply options for a column\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iCol column index to consider\n *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnOptions( oSettings, iCol, oOptions )\n{\n\tvar oCol = oSettings.aoColumns[ iCol ];\n\tvar oClasses = oSettings.oClasses;\n\tvar th = $(oCol.nTh);\n\n\t// Try to get width information from the DOM. We can't get it from CSS\n\t// as we'd need to parse the CSS stylesheet. `width` option can override\n\tif ( ! oCol.sWidthOrig ) {\n\t\t// Width attribute\n\t\toCol.sWidthOrig = th.attr('width') || null;\n\n\t\t// Style attribute\n\t\tvar t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n\t\tif ( t ) {\n\t\t\toCol.sWidthOrig = t[1];\n\t\t}\n\t}\n\n\t/* User specified column options */\n\tif ( oOptions !== undefined && oOptions !== null )\n\t{\n\t\t// Backwards compatibility\n\t\t_fnCompatCols( oOptions );\n\n\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions, true );\n\n\t\t/* Backwards compatibility for mDataProp */\n\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\n\t\t{\n\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t}\n\n\t\tif ( oOptions.sType )\n\t\t{\n\t\t\toCol._sManualType = oOptions.sType;\n\t\t}\n\n\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t// the ability to use a valid name for the camel case input\n\t\tif ( oOptions.className && ! oOptions.sClass )\n\t\t{\n\t\t\toOptions.sClass = oOptions.className;\n\t\t}\n\t\tif ( oOptions.sClass ) {\n\t\t\tth.addClass( oOptions.sClass );\n\t\t}\n\n\t\tvar origClass = oCol.sClass;\n\n\t\t$.extend( oCol, oOptions );\n\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\n\t\t// Merge class from previously defined classes with this one, rather than just\n\t\t// overwriting it in the extend above\n\t\tif (origClass !== oCol.sClass) {\n\t\t\toCol.sClass = origClass + ' ' + oCol.sClass;\n\t\t}\n\n\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t * priority if defined\n\t\t */\n\t\tif ( oOptions.iDataSort !== undefined )\n\t\t{\n\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t}\n\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\n\t\t// Fall back to the aria-label attribute on the table header if no ariaTitle is\n\t\t// provided.\n\t\tif (! oCol.ariaTitle) {\n\t\t\toCol.ariaTitle = th.attr(\"aria-label\");\n\t\t}\n\t}\n\n\t/* Cache the data get and set functions for speed */\n\tvar mDataSrc = oCol.mData;\n\tvar mData = _fnGetObjectDataFn( mDataSrc );\n\tvar mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\n\tvar attrTest = function( src ) {\n\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t};\n\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\n\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t);\n\toCol._setter = null;\n\n\toCol.fnGetData = function (rowData, type, meta) {\n\t\tvar innerData = mData( rowData, type, undefined, meta );\n\n\t\treturn mRender && type ?\n\t\t\tmRender( innerData, type, rowData, meta ) :\n\t\t\tinnerData;\n\t};\n\toCol.fnSetData = function ( rowData, val, meta ) {\n\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\n\t};\n\n\t// Indicate if DataTables should read DOM data as an object or array\n\t// Used in _fnGetRowElements\n\tif ( typeof mDataSrc !== 'number' && ! oCol._isArrayHost ) {\n\t\toSettings._rowReadObject = true;\n\t}\n\n\t/* Feature sorting overrides column specific when off */\n\tif ( !oSettings.oFeatures.bSort )\n\t{\n\t\toCol.bSortable = false;\n\t\tth.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called\n\t}\n\n\t/* Check that the class assignment is correct for sorting */\n\tvar bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n\tvar bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n\tif ( !oCol.bSortable || (!bAsc && !bDesc) )\n\t{\n\t\toCol.sSortingClass = oClasses.sSortableNone;\n\t\toCol.sSortingClassJUI = \"\";\n\t}\n\telse if ( bAsc && !bDesc )\n\t{\n\t\toCol.sSortingClass = oClasses.sSortableAsc;\n\t\toCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n\t}\n\telse if ( !bAsc && bDesc )\n\t{\n\t\toCol.sSortingClass = oClasses.sSortableDesc;\n\t\toCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n\t}\n\telse\n\t{\n\t\toCol.sSortingClass = oClasses.sSortable;\n\t\toCol.sSortingClassJUI = oClasses.sSortJUI;\n\t}\n}\n\n\n/**\n * Adjust the table column widths for new data. Note: you would probably want to\n * do a redraw after calling this function!\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAdjustColumnSizing ( settings )\n{\n\t/* Not interested in doing column width calculation if auto-width is disabled */\n\tif ( settings.oFeatures.bAutoWidth !== false )\n\t{\n\t\tvar columns = settings.aoColumns;\n\n\t\t_fnCalculateColumnWidths( settings );\n\t\tfor ( var i=0 , iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tcolumns[i].nTh.style.width = columns[i].sWidth;\n\t\t}\n\t}\n\n\tvar scroll = settings.oScroll;\n\tif ( scroll.sY !== '' || scroll.sX !== '')\n\t{\n\t\t_fnScrollDraw( settings );\n\t}\n\n\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\n}\n\n\n/**\n * Convert the index of a visible column to the index in the data array (take account\n * of hidden columns)\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iMatch Visible column index to lookup\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n{\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\n\treturn typeof aiVis[iMatch] === 'number' ?\n\t\taiVis[iMatch] :\n\t\tnull;\n}\n\n\n/**\n * Convert the index of an index in the data array and convert it to the visible\n *   column index (take account of hidden columns)\n *  @param {int} iMatch Column index to lookup\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnIndexToVisible( oSettings, iMatch )\n{\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\tvar iPos = $.inArray( iMatch, aiVis );\n\n\treturn iPos !== -1 ? iPos : null;\n}\n\n\n/**\n * Get the number of visible columns\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the number of visible columns\n *  @memberof DataTable#oApi\n */\nfunction _fnVisbleColumns( oSettings )\n{\n\tvar vis = 0;\n\n\t// No reduce in IE8, use a loop for now\n\t$.each( oSettings.aoColumns, function ( i, col ) {\n\t\tif ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {\n\t\t\tvis++;\n\t\t}\n\t} );\n\n\treturn vis;\n}\n\n\n/**\n * Get an array of column indexes that match a given property\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sParam Parameter in aoColumns to look for - typically\n *    bVisible or bSearchable\n *  @returns {array} Array of indexes with matched properties\n *  @memberof DataTable#oApi\n */\nfunction _fnGetColumns( oSettings, sParam )\n{\n\tvar a = [];\n\n\t$.map( oSettings.aoColumns, function(val, i) {\n\t\tif ( val[sParam] ) {\n\t\t\ta.push( i );\n\t\t}\n\t} );\n\n\treturn a;\n}\n\n\n/**\n * Calculate the 'type' of a column\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnTypes ( settings )\n{\n\tvar columns = settings.aoColumns;\n\tvar data = settings.aoData;\n\tvar types = DataTable.ext.type.detect;\n\tvar i, ien, j, jen, k, ken;\n\tvar col, cell, detectedType, cache;\n\n\t// For each column, spin over the \n\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\tcol = columns[i];\n\t\tcache = [];\n\n\t\tif ( ! col.sType && col._sManualType ) {\n\t\t\tcol.sType = col._sManualType;\n\t\t}\n\t\telse if ( ! col.sType ) {\n\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\n\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\n\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\tif ( cache[k] === undefined ) {\n\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\n\t\t\t\t\t}\n\n\t\t\t\t\tdetectedType = types[j]( cache[k], settings );\n\n\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t// types\n\t\t\t\t\tif ( ! detectedType && j !== types.length-1 ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t// bottom of the pile and very similar to string - but it\n\t\t\t\t\t// must not be empty\n\t\t\t\t\tif ( detectedType === 'html' && ! _empty(cache[k]) ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t// type\n\t\t\t\tif ( detectedType ) {\n\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fall back - if no type was detected, always use string\n\t\t\tif ( ! col.sType ) {\n\t\t\t\tcol.sType = 'string';\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Take the column definitions and static columns arrays and calculate how\n * they relate to column indexes. The callback function will then apply the\n * definition found for a column to a suitable configuration object.\n *  @param {object} oSettings dataTables settings object\n *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n *  @param {array} aoCols The aoColumns array that defines columns individually\n *  @param {function} fn Callback function - takes two parameters, the calculated\n *    column index and the definition for that column.\n *  @memberof DataTable#oApi\n */\nfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )\n{\n\tvar i, iLen, j, jLen, k, kLen, def;\n\tvar columns = oSettings.aoColumns;\n\n\t// Column definitions with aTargets\n\tif ( aoColDefs )\n\t{\n\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t{\n\t\t\tdef = aoColDefs[i];\n\n\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\tvar aTargets = def.target !== undefined\n\t\t\t\t? def.target\n\t\t\t\t: def.targets !== undefined\n\t\t\t\t\t? def.targets\n\t\t\t\t\t: def.aTargets;\n\n\t\t\tif ( ! Array.isArray( aTargets ) )\n\t\t\t{\n\t\t\t\taTargets = [ aTargets ];\n\t\t\t}\n\n\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tif ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\twhile( columns.length <= aTargets[j] )\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\tfn( aTargets[j], def );\n\t\t\t\t}\n\t\t\t\telse if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\tfn( columns.length+aTargets[j], def );\n\t\t\t\t}\n\t\t\t\telse if ( typeof aTargets[j] === 'string' )\n\t\t\t\t{\n\t\t\t\t\t/* Class name matching on TH element */\n\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( aTargets[j] == \"_all\" ||\n\t\t\t\t\t\t     $(columns[k].nTh).hasClass( aTargets[j] ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Statically defined columns array\n\tif ( aoCols )\n\t{\n\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tfn( i, aoCols[i] );\n\t\t}\n\t}\n}\n\n/**\n * Add a data array to the table, creating DOM node etc. This is the parallel to\n * _fnGatherData, but for adding rows from a Javascript source, rather than a\n * DOM source.\n *  @param {object} oSettings dataTables settings object\n *  @param {array} aData data array to be added\n *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n *  @memberof DataTable#oApi\n */\nfunction _fnAddData ( oSettings, aDataIn, nTr, anTds )\n{\n\t/* Create the object for storing information about this new row */\n\tvar iRow = oSettings.aoData.length;\n\tvar oData = $.extend( true, {}, DataTable.models.oRow, {\n\t\tsrc: nTr ? 'dom' : 'data',\n\t\tidx: iRow\n\t} );\n\n\toData._aData = aDataIn;\n\toSettings.aoData.push( oData );\n\n\t/* Create the cells */\n\tvar nTd, sThisType;\n\tvar columns = oSettings.aoColumns;\n\n\t// Invalidate the column types as the new data needs to be revalidated\n\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t{\n\t\tcolumns[i].sType = null;\n\t}\n\n\t/* Add to the display array */\n\toSettings.aiDisplayMaster.push( iRow );\n\n\tvar id = oSettings.rowIdFn( aDataIn );\n\tif ( id !== undefined ) {\n\t\toSettings.aIds[ id ] = oData;\n\t}\n\n\t/* Create the DOM information, or register it if already present */\n\tif ( nTr || ! oSettings.oFeatures.bDeferRender )\n\t{\n\t\t_fnCreateTr( oSettings, iRow, nTr, anTds );\n\t}\n\n\treturn iRow;\n}\n\n\n/**\n * Add one or more TR elements to the table. Generally we'd expect to\n * use this for reading data from a DOM sourced table, but it could be\n * used for an TR element. Note that if a TR is given, it is used (i.e.\n * it is not cloned).\n *  @param {object} settings dataTables settings object\n *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n *  @returns {array} Array of indexes for the added rows\n *  @memberof DataTable#oApi\n */\nfunction _fnAddTr( settings, trs )\n{\n\tvar row;\n\n\t// Allow an individual node to be passed in\n\tif ( ! (trs instanceof $) ) {\n\t\ttrs = $(trs);\n\t}\n\n\treturn trs.map( function (i, el) {\n\t\trow = _fnGetRowElements( settings, el );\n\t\treturn _fnAddData( settings, row.data, el, row.cells );\n\t} );\n}\n\n\n/**\n * Take a TR element and convert it to an index in aoData\n *  @param {object} oSettings dataTables settings object\n *  @param {node} n the TR element to find\n *  @returns {int} index if the node is found, null if not\n *  @memberof DataTable#oApi\n */\nfunction _fnNodeToDataIndex( oSettings, n )\n{\n\treturn (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;\n}\n\n\n/**\n * Take a TD element and convert it into a column data index (not the visible index)\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iRow The row number the TD/TH can be found in\n *  @param {node} n The TD/TH element to find\n *  @returns {int} index if the node is found, -1 if not\n *  @memberof DataTable#oApi\n */\nfunction _fnNodeToColumnIndex( oSettings, iRow, n )\n{\n\treturn $.inArray( n, oSettings.aoData[ iRow ].anCells );\n}\n\n\n/**\n * Get the data for a given cell from the internal cache, taking into account data mapping\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\n *  @returns {*} Cell data\n *  @memberof DataTable#oApi\n */\nfunction _fnGetCellData( settings, rowIdx, colIdx, type )\n{\n\tif (type === 'search') {\n\t\ttype = 'filter';\n\t}\n\telse if (type === 'order') {\n\t\ttype = 'sort';\n\t}\n\n\tvar draw           = settings.iDraw;\n\tvar col            = settings.aoColumns[colIdx];\n\tvar rowData        = settings.aoData[rowIdx]._aData;\n\tvar defaultContent = col.sDefaultContent;\n\tvar cellData       = col.fnGetData( rowData, type, {\n\t\tsettings: settings,\n\t\trow:      rowIdx,\n\t\tcol:      colIdx\n\t} );\n\n\tif ( cellData === undefined ) {\n\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\n\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\n\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\n\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\n\t\t\tsettings.iDrawError = draw;\n\t\t}\n\t\treturn defaultContent;\n\t}\n\n\t// When the data source is null and a specific data type is requested (i.e.\n\t// not the original data), we can use default column data\n\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\n\t\tcellData = defaultContent;\n\t}\n\telse if ( typeof cellData === 'function' ) {\n\t\t// If the data source is a function, then we run it and use the return,\n\t\t// executing in the scope of the data object (for instances)\n\t\treturn cellData.call( rowData );\n\t}\n\n\tif ( cellData === null && type === 'display' ) {\n\t\treturn '';\n\t}\n\n\tif ( type === 'filter' ) {\n\t\tvar fomatters = DataTable.ext.type.search;\n\n\t\tif ( fomatters[ col.sType ] ) {\n\t\t\tcellData = fomatters[ col.sType ]( cellData );\n\t\t}\n\t}\n\n\treturn cellData;\n}\n\n\n/**\n * Set the value for a specific cell, into the internal data cache\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {*} val Value to set\n *  @memberof DataTable#oApi\n */\nfunction _fnSetCellData( settings, rowIdx, colIdx, val )\n{\n\tvar col     = settings.aoColumns[colIdx];\n\tvar rowData = settings.aoData[rowIdx]._aData;\n\n\tcol.fnSetData( rowData, val, {\n\t\tsettings: settings,\n\t\trow:      rowIdx,\n\t\tcol:      colIdx\n\t}  );\n}\n\n\n// Private variable that is used to match action syntax in the data property object\nvar __reArray = /\\[.*?\\]$/;\nvar __reFn = /\\(\\)$/;\n\n/**\n * Split string on periods, taking into account escaped periods\n * @param  {string} str String to split\n * @return {array} Split string\n */\nfunction _fnSplitObjNotation( str )\n{\n\treturn $.map( str.match(/(\\\\.|[^\\.])+/g) || [''], function ( s ) {\n\t\treturn s.replace(/\\\\\\./g, '.');\n\t} );\n}\n\n\n/**\n * Return a function that can be used to get data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data get function\n *  @memberof DataTable#oApi\n */\nvar _fnGetObjectDataFn = DataTable.util.get;\n\n\n/**\n * Return a function that can be used to set data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data set function\n *  @memberof DataTable#oApi\n */\nvar _fnSetObjectDataFn = DataTable.util.set;\n\n\n/**\n * Return an array with the full table data\n *  @param {object} oSettings dataTables settings object\n *  @returns array {array} aData Master data array\n *  @memberof DataTable#oApi\n */\nfunction _fnGetDataMaster ( settings )\n{\n\treturn _pluck( settings.aoData, '_aData' );\n}\n\n\n/**\n * Nuke the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnClearTable( settings )\n{\n\tsettings.aoData.length = 0;\n\tsettings.aiDisplayMaster.length = 0;\n\tsettings.aiDisplay.length = 0;\n\tsettings.aIds = {};\n}\n\n\n /**\n * Take an array of integers (index array) and remove a target integer (value - not\n * the key!)\n *  @param {array} a Index array to target\n *  @param {int} iTarget value to find\n *  @memberof DataTable#oApi\n */\nfunction _fnDeleteIndex( a, iTarget, splice )\n{\n\tvar iTargetIndex = -1;\n\n\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t{\n\t\tif ( a[i] == iTarget )\n\t\t{\n\t\t\tiTargetIndex = i;\n\t\t}\n\t\telse if ( a[i] > iTarget )\n\t\t{\n\t\t\ta[i]--;\n\t\t}\n\t}\n\n\tif ( iTargetIndex != -1 && splice === undefined )\n\t{\n\t\ta.splice( iTargetIndex, 1 );\n\t}\n}\n\n\n/**\n * Mark cached data as invalid such that a re-read of the data will occur when\n * the cached data is next requested. Also update from the data source object.\n *\n * @param {object} settings DataTables settings object\n * @param {int}    rowIdx   Row index to invalidate\n * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n *     or 'data'\n * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n *     row will be invalidated\n * @memberof DataTable#oApi\n *\n * @todo For the modularisation of v1.11 this will need to become a callback, so\n *   the sort and filter methods can subscribe to it. That will required\n *   initialisation options for sorting, which is why it is not already baked in\n */\nfunction _fnInvalidate( settings, rowIdx, src, colIdx )\n{\n\tvar row = settings.aoData[ rowIdx ];\n\tvar i, ien;\n\tvar cellWrite = function ( cell, col ) {\n\t\t// This is very frustrating, but in IE if you just write directly\n\t\t// to innerHTML, and elements that are overwritten are GC'ed,\n\t\t// even if there is a reference to them elsewhere\n\t\twhile ( cell.childNodes.length ) {\n\t\t\tcell.removeChild( cell.firstChild );\n\t\t}\n\n\t\tcell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );\n\t};\n\n\t// Are we reading last data from DOM or the data object?\n\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\n\t\t// Read the data from the DOM\n\t\trow._aData = _fnGetRowElements(\n\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t)\n\t\t\t.data;\n\t}\n\telse {\n\t\t// Reading from data object, update the DOM\n\t\tvar cells = row.anCells;\n\n\t\tif ( cells ) {\n\t\t\tif ( colIdx !== undefined ) {\n\t\t\t\tcellWrite( cells[colIdx], colIdx );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\t\tcellWrite( cells[i], i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// For both row and cell invalidation, the cached data for sorting and\n\t// filtering is nulled out\n\trow._aSortData = null;\n\trow._aFilterData = null;\n\n\t// Invalidate the type for a specific column (if given) or all columns since\n\t// the data might have changed\n\tvar cols = settings.aoColumns;\n\tif ( colIdx !== undefined ) {\n\t\tcols[ colIdx ].sType = null;\n\t}\n\telse {\n\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\n\t\t\tcols[i].sType = null;\n\t\t}\n\n\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t_fnRowAttributes( settings, row );\n\t}\n}\n\n\n/**\n * Build a data source object from an HTML row, reading the contents of the\n * cells that are in the row.\n *\n * @param {object} settings DataTables settings object\n * @param {node|object} TR element from which to read data or existing row\n *   object from which to re-read the data from the cells\n * @param {int} [colIdx] Optional column index\n * @param {array|object} [d] Data source object. If `colIdx` is given then this\n *   parameter should also be given and will be used to write the data into.\n *   Only the column in question will be written\n * @returns {object} Object with two parameters: `data` the data read, in\n *   document order, and `cells` and array of nodes (they can be useful to the\n *   caller, so rather than needing a second traversal to get them, just return\n *   them from here).\n * @memberof DataTable#oApi\n */\nfunction _fnGetRowElements( settings, row, colIdx, d )\n{\n\tvar\n\t\ttds = [],\n\t\ttd = row.firstChild,\n\t\tname, col, o, i=0, contents,\n\t\tcolumns = settings.aoColumns,\n\t\tobjectRead = settings._rowReadObject;\n\n\t// Allow the data object to be passed in, or construct\n\td = d !== undefined ?\n\t\td :\n\t\tobjectRead ?\n\t\t\t{} :\n\t\t\t[];\n\n\tvar attr = function ( str, td  ) {\n\t\tif ( typeof str === 'string' ) {\n\t\t\tvar idx = str.indexOf('@');\n\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tvar attr = str.substring( idx+1 );\n\t\t\t\tvar setter = _fnSetObjectDataFn( str );\n\t\t\t\tsetter( d, td.getAttribute( attr ) );\n\t\t\t}\n\t\t}\n\t};\n\n\t// Read data from a cell and store into the data object\n\tvar cellProcess = function ( cell ) {\n\t\tif ( colIdx === undefined || colIdx === i ) {\n\t\t\tcol = columns[i];\n\t\t\tcontents = (cell.innerHTML).trim();\n\n\t\t\tif ( col && col._bAttrSrc ) {\n\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\n\t\t\t\tsetter( d, contents );\n\n\t\t\t\tattr( col.mData.sort, cell );\n\t\t\t\tattr( col.mData.type, cell );\n\t\t\t\tattr( col.mData.filter, cell );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t// be read to either an object or an array.\n\t\t\t\tif ( objectRead ) {\n\t\t\t\t\tif ( ! col._setter ) {\n\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\n\t\t\t\t\t}\n\t\t\t\t\tcol._setter( d, contents );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td[i] = contents;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ti++;\n\t};\n\n\tif ( td ) {\n\t\t// `tr` element was passed in\n\t\twhile ( td ) {\n\t\t\tname = td.nodeName.toUpperCase();\n\n\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\n\t\t\t\tcellProcess( td );\n\t\t\t\ttds.push( td );\n\t\t\t}\n\n\t\t\ttd = td.nextSibling;\n\t\t}\n\t}\n\telse {\n\t\t// Existing row object passed in\n\t\ttds = row.anCells;\n\n\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\n\t\t\tcellProcess( tds[j] );\n\t\t}\n\t}\n\n\t// Read the ID from the DOM if present\n\tvar rowNode = row.firstChild ? row : row.nTr;\n\n\tif ( rowNode ) {\n\t\tvar id = rowNode.getAttribute( 'id' );\n\n\t\tif ( id ) {\n\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\n\t\t}\n\t}\n\n\treturn {\n\t\tdata: d,\n\t\tcells: tds\n\t};\n}\n/**\n * Create a new TR element (and it's TD children) for a row\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iRow Row to consider\n *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @memberof DataTable#oApi\n */\nfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\n{\n\tvar\n\t\trow = oSettings.aoData[iRow],\n\t\trowData = row._aData,\n\t\tcells = [],\n\t\tnTr, nTd, oCol,\n\t\ti, iLen, create;\n\n\tif ( row.nTr === null )\n\t{\n\t\tnTr = nTrIn || document.createElement('tr');\n\n\t\trow.nTr = nTr;\n\t\trow.anCells = cells;\n\n\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t * to the aoData array for fast look up\n\t\t */\n\t\tnTr._DT_RowIndex = iRow;\n\n\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t_fnRowAttributes( oSettings, row );\n\n\t\t/* Process each column */\n\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\toCol = oSettings.aoColumns[i];\n\t\t\tcreate = nTrIn ? false : true;\n\n\t\t\tnTd = create ? document.createElement( oCol.sCellType ) : anTds[i];\n\n\t\t\tif (! nTd) {\n\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t}\n\n\t\t\tnTd._DT_CellIndex = {\n\t\t\t\trow: iRow,\n\t\t\t\tcolumn: i\n\t\t\t};\n\t\t\t\n\t\t\tcells.push( nTd );\n\n\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\tif ( create || ((oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\n\t\t\t)) {\n\t\t\t\tnTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );\n\t\t\t}\n\n\t\t\t/* Add user defined class */\n\t\t\tif ( oCol.sClass )\n\t\t\t{\n\t\t\t\tnTd.className += ' '+oCol.sClass;\n\t\t\t}\n\n\t\t\t// Visibility - add or remove as required\n\t\t\tif ( oCol.bVisible && ! nTrIn )\n\t\t\t{\n\t\t\t\tnTr.appendChild( nTd );\n\t\t\t}\n\t\t\telse if ( ! oCol.bVisible && nTrIn )\n\t\t\t{\n\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t}\n\n\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t{\n\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow, cells] );\n\t}\n}\n\n\n/**\n * Add attributes to a row based on the special `DT_*` parameters in a data\n * source object.\n *  @param {object} settings DataTables settings object\n *  @param {object} DataTables row object for the row to be modified\n *  @memberof DataTable#oApi\n */\nfunction _fnRowAttributes( settings, row )\n{\n\tvar tr = row.nTr;\n\tvar data = row._aData;\n\n\tif ( tr ) {\n\t\tvar id = settings.rowIdFn( data );\n\n\t\tif ( id ) {\n\t\t\ttr.id = id;\n\t\t}\n\n\t\tif ( data.DT_RowClass ) {\n\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t_unique( row.__rowc.concat( a ) ) :\n\t\t\t\ta;\n\n\t\t\t$(tr)\n\t\t\t\t.removeClass( row.__rowc.join(' ') )\n\t\t\t\t.addClass( data.DT_RowClass );\n\t\t}\n\n\t\tif ( data.DT_RowAttr ) {\n\t\t\t$(tr).attr( data.DT_RowAttr );\n\t\t}\n\n\t\tif ( data.DT_RowData ) {\n\t\t\t$(tr).data( data.DT_RowData );\n\t\t}\n\t}\n}\n\n\n/**\n * Create the HTML header for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBuildHead( oSettings )\n{\n\tvar i, ien, cell, row, column;\n\tvar thead = oSettings.nTHead;\n\tvar tfoot = oSettings.nTFoot;\n\tvar createHeader = $('th, td', thead).length === 0;\n\tvar classes = oSettings.oClasses;\n\tvar columns = oSettings.aoColumns;\n\n\tif ( createHeader ) {\n\t\trow = $('<tr/>').appendTo( thead );\n\t}\n\n\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\tcolumn = columns[i];\n\t\tcell = $( column.nTh ).addClass( column.sClass );\n\n\t\tif ( createHeader ) {\n\t\t\tcell.appendTo( row );\n\t\t}\n\n\t\t// 1.11 move into sorting\n\t\tif ( oSettings.oFeatures.bSort ) {\n\t\t\tcell.addClass( column.sSortingClass );\n\n\t\t\tif ( column.bSortable !== false ) {\n\t\t\t\tcell\n\t\t\t\t\t.attr( 'tabindex', oSettings.iTabIndex )\n\t\t\t\t\t.attr( 'aria-controls', oSettings.sTableId );\n\n\t\t\t\t_fnSortAttachListener( oSettings, column.nTh, i );\n\t\t\t}\n\t\t}\n\n\t\tif ( column.sTitle != cell[0].innerHTML ) {\n\t\t\tcell.html( column.sTitle );\n\t\t}\n\n\t\t_fnRenderer( oSettings, 'header' )(\n\t\t\toSettings, cell, column, classes\n\t\t);\n\t}\n\n\tif ( createHeader ) {\n\t\t_fnDetectHeader( oSettings.aoHeader, thead );\n\t}\n\n\t/* Deal with the footer - add classes if required */\n\t$(thead).children('tr').children('th, td').addClass( classes.sHeaderTH );\n\t$(tfoot).children('tr').children('th, td').addClass( classes.sFooterTH );\n\n\t// Cache the footer cells. Note that we only take the cells from the first\n\t// row in the footer. If there is more than one row the user wants to\n\t// interact with, they need to use the table().foot() method. Note also this\n\t// allows cells to be used for multiple columns using colspan\n\tif ( tfoot !== null ) {\n\t\tvar cells = oSettings.aoFooter[0];\n\n\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\tcolumn = columns[i];\n\n\t\t\tif (column) {\n\t\t\t\tcolumn.nTf = cells[i].cell;\n\t\n\t\t\t\tif ( column.sClass ) {\n\t\t\t\t\t$(column.nTf).addClass( column.sClass );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Draw the header (or footer) element based on the column visibility states. The\n * methodology here is to use the layout array from _fnDetectHeader, modified for\n * the instantaneous column visibility, to construct the new layout. The grid is\n * traversed over cell at a time in a rows x columns grid fashion, although each\n * cell insert can cover multiple elements in the grid - which is tracks using the\n * aApplied array. Cell inserts in the grid will only occur where there isn't\n * already a cell in that position.\n *  @param {object} oSettings dataTables settings object\n *  @param array {objects} aoSource Layout array from _fnDetectHeader\n *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n *  @memberof DataTable#oApi\n */\nfunction _fnDrawHead( oSettings, aoSource, bIncludeHidden )\n{\n\tvar i, iLen, j, jLen, k, kLen, n, nLocalTr;\n\tvar aoLocal = [];\n\tvar aApplied = [];\n\tvar iColumns = oSettings.aoColumns.length;\n\tvar iRowspan, iColspan;\n\n\tif ( ! aoSource )\n\t{\n\t\treturn;\n\t}\n\n\tif (  bIncludeHidden === undefined )\n\t{\n\t\tbIncludeHidden = false;\n\t}\n\n\t/* Make a copy of the master layout array, but without the visible columns in it */\n\tfor ( i=0, iLen=aoSource.length ; i<iLen ; i++ )\n\t{\n\t\taoLocal[i] = aoSource[i].slice();\n\t\taoLocal[i].nTr = aoSource[i].nTr;\n\n\t\t/* Remove any columns which are currently hidden */\n\t\tfor ( j=iColumns-1 ; j>=0 ; j-- )\n\t\t{\n\t\t\tif ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )\n\t\t\t{\n\t\t\t\taoLocal[i].splice( j, 1 );\n\t\t\t}\n\t\t}\n\n\t\t/* Prep the applied array - it needs an element for each row */\n\t\taApplied.push( [] );\n\t}\n\n\tfor ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )\n\t{\n\t\tnLocalTr = aoLocal[i].nTr;\n\n\t\t/* All cells are going to be replaced, so empty out the row */\n\t\tif ( nLocalTr )\n\t\t{\n\t\t\twhile( (n = nLocalTr.firstChild) )\n\t\t\t{\n\t\t\t\tnLocalTr.removeChild( n );\n\t\t\t}\n\t\t}\n\n\t\tfor ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )\n\t\t{\n\t\t\tiRowspan = 1;\n\t\t\tiColspan = 1;\n\n\t\t\t/* Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t * insert point. If there is, then there is nothing to do.\n\t\t\t */\n\t\t\tif ( aApplied[i][j] === undefined )\n\t\t\t{\n\t\t\t\tnLocalTr.appendChild( aoLocal[i][j].cell );\n\t\t\t\taApplied[i][j] = 1;\n\n\t\t\t\t/* Expand the cell to cover as many rows as needed */\n\t\t\t\twhile ( aoLocal[i+iRowspan] !== undefined &&\n\t\t\t\t        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )\n\t\t\t\t{\n\t\t\t\t\taApplied[i+iRowspan][j] = 1;\n\t\t\t\t\tiRowspan++;\n\t\t\t\t}\n\n\t\t\t\t/* Expand the cell to cover as many columns as needed */\n\t\t\t\twhile ( aoLocal[i][j+iColspan] !== undefined &&\n\t\t\t\t        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )\n\t\t\t\t{\n\t\t\t\t\t/* Must update the applied array over the rows for the columns */\n\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t{\n\t\t\t\t\t\taApplied[i+k][j+iColspan] = 1;\n\t\t\t\t\t}\n\t\t\t\t\tiColspan++;\n\t\t\t\t}\n\n\t\t\t\t/* Do the actual expansion in the DOM */\n\t\t\t\t$(aoLocal[i][j].cell)\n\t\t\t\t\t.attr('rowspan', iRowspan)\n\t\t\t\t\t.attr('colspan', iColspan);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Insert the required TR nodes into the table for display\n *  @param {object} oSettings dataTables settings object\n *  @param ajaxComplete true after ajax call to complete rendering\n *  @memberof DataTable#oApi\n */\nfunction _fnDraw( oSettings, ajaxComplete )\n{\n\t// Allow for state saving and a custom start position\n\t_fnStart( oSettings );\n\n\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\tif ( $.inArray( false, aPreDraw ) !== -1 )\n\t{\n\t\t_fnProcessingDisplay( oSettings, false );\n\t\treturn;\n\t}\n\n\tvar anRows = [];\n\tvar iRowCount = 0;\n\tvar asStripeClasses = oSettings.asStripeClasses;\n\tvar iStripes = asStripeClasses.length;\n\tvar oLang = oSettings.oLanguage;\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\tvar aiDisplay = oSettings.aiDisplay;\n\tvar iDisplayStart = oSettings._iDisplayStart;\n\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\n\toSettings.bDrawing = true;\n\n\t/* Server-side processing draw intercept */\n\tif ( oSettings.bDeferLoading )\n\t{\n\t\toSettings.bDeferLoading = false;\n\t\toSettings.iDraw++;\n\t\t_fnProcessingDisplay( oSettings, false );\n\t}\n\telse if ( !bServerSide )\n\t{\n\t\toSettings.iDraw++;\n\t}\n\telse if ( !oSettings.bDestroying && !ajaxComplete)\n\t{\n\t\t_fnAjaxUpdate( oSettings );\n\t\treturn;\n\t}\n\n\tif ( aiDisplay.length !== 0 )\n\t{\n\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\n\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t{\n\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\n\t\t\tif ( aoData.nTr === null )\n\t\t\t{\n\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\n\t\t\t}\n\n\t\t\tvar nRow = aoData.nTr;\n\n\t\t\t/* Remove the old striping classes and then add the new one */\n\t\t\tif ( iStripes !== 0 )\n\t\t\t{\n\t\t\t\tvar sStripe = asStripeClasses[ iRowCount % iStripes ];\n\t\t\t\tif ( aoData._sRowStripe != sStripe )\n\t\t\t\t{\n\t\t\t\t\t$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );\n\t\t\t\t\taoData._sRowStripe = sStripe;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t// useful?\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\n\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex] );\n\n\t\t\tanRows.push( nRow );\n\t\t\tiRowCount++;\n\t\t}\n\t}\n\telse\n\t{\n\t\t/* Table is empty - create a row with an empty message in it */\n\t\tvar sZero = oLang.sZeroRecords;\n\t\tif ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )\n\t\t{\n\t\t\tsZero = oLang.sLoadingRecords;\n\t\t}\n\t\telse if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )\n\t\t{\n\t\t\tsZero = oLang.sEmptyTable;\n\t\t}\n\n\t\tanRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )\n\t\t\t.append( $('<td />', {\n\t\t\t\t'valign':  'top',\n\t\t\t\t'colSpan': _fnVisbleColumns( oSettings ),\n\t\t\t\t'class':   oSettings.oClasses.sRowEmpty\n\t\t\t} ).html( sZero ) )[0];\n\t}\n\n\t/* Header and footer callbacks */\n\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\n\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\n\tvar body = $(oSettings.nTBody);\n\n\tbody.children().detach();\n\tbody.append( $(anRows) );\n\n\t/* Call all required callback functions for the end of a draw */\n\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );\n\n\t/* Draw is complete, sorting and filtering must be as well */\n\toSettings.bSorted = false;\n\toSettings.bFiltered = false;\n\toSettings.bDrawing = false;\n}\n\n\n/**\n * Redraw the table - taking account of the various features which are enabled\n *  @param {object} oSettings dataTables settings object\n *  @param {boolean} [holdPosition] Keep the current paging position. By default\n *    the paging is reset to the first page\n *  @memberof DataTable#oApi\n */\nfunction _fnReDraw( settings, holdPosition )\n{\n\tvar\n\t\tfeatures = settings.oFeatures,\n\t\tsort     = features.bSort,\n\t\tfilter   = features.bFilter;\n\n\tif ( sort ) {\n\t\t_fnSort( settings );\n\t}\n\n\tif ( filter ) {\n\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t}\n\telse {\n\t\t// No filtering, so we want to just use the display master\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t}\n\n\tif ( holdPosition !== true ) {\n\t\tsettings._iDisplayStart = 0;\n\t}\n\n\t// Let any modules know about the draw hold position state (used by\n\t// scrolling internally)\n\tsettings._drawHold = holdPosition;\n\n\t_fnDraw( settings );\n\n\tsettings._drawHold = false;\n}\n\n\n/**\n * Add the options to the page HTML for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAddOptionsHtml ( oSettings )\n{\n\tvar classes = oSettings.oClasses;\n\tvar table = $(oSettings.nTable);\n\tvar holding = $('<div/>').insertBefore( table ); // Holding element for speed\n\tvar features = oSettings.oFeatures;\n\n\t// All DataTables are wrapped in a div\n\tvar insert = $('<div/>', {\n\t\tid:      oSettings.sTableId+'_wrapper',\n\t\t'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)\n\t} );\n\n\toSettings.nHolding = holding[0];\n\toSettings.nTableWrapper = insert[0];\n\toSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n\n\t/* Loop over the user set positioning and place the elements as needed */\n\tvar aDom = oSettings.sDom.split('');\n\tvar featureNode, cOption, nNewNode, cNext, sAttr, j;\n\tfor ( var i=0 ; i<aDom.length ; i++ )\n\t{\n\t\tfeatureNode = null;\n\t\tcOption = aDom[i];\n\n\t\tif ( cOption == '<' )\n\t\t{\n\t\t\t/* New container div */\n\t\t\tnNewNode = $('<div/>')[0];\n\n\t\t\t/* Check to see if we should append an id and/or a class name to the container */\n\t\t\tcNext = aDom[i+1];\n\t\t\tif ( cNext == \"'\" || cNext == '\"' )\n\t\t\t{\n\t\t\t\tsAttr = \"\";\n\t\t\t\tj = 2;\n\t\t\t\twhile ( aDom[i+j] != cNext )\n\t\t\t\t{\n\t\t\t\t\tsAttr += aDom[i+j];\n\t\t\t\t\tj++;\n\t\t\t\t}\n\n\t\t\t\t/* Replace jQuery UI constants @todo depreciated */\n\t\t\t\tif ( sAttr == \"H\" )\n\t\t\t\t{\n\t\t\t\t\tsAttr = classes.sJUIHeader;\n\t\t\t\t}\n\t\t\t\telse if ( sAttr == \"F\" )\n\t\t\t\t{\n\t\t\t\t\tsAttr = classes.sJUIFooter;\n\t\t\t\t}\n\n\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t */\n\t\t\t\tif ( sAttr.indexOf('.') != -1 )\n\t\t\t\t{\n\t\t\t\t\tvar aSplit = sAttr.split('.');\n\t\t\t\t\tnNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);\n\t\t\t\t\tnNewNode.className = aSplit[1];\n\t\t\t\t}\n\t\t\t\telse if ( sAttr.charAt(0) == \"#\" )\n\t\t\t\t{\n\t\t\t\t\tnNewNode.id = sAttr.substr(1, sAttr.length-1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnNewNode.className = sAttr;\n\t\t\t\t}\n\n\t\t\t\ti += j; /* Move along the position array */\n\t\t\t}\n\n\t\t\tinsert.append( nNewNode );\n\t\t\tinsert = $(nNewNode);\n\t\t}\n\t\telse if ( cOption == '>' )\n\t\t{\n\t\t\t/* End container div */\n\t\t\tinsert = insert.parent();\n\t\t}\n\t\t// @todo Move options into their own plugins?\n\t\telse if ( cOption == 'l' && features.bPaginate && features.bLengthChange )\n\t\t{\n\t\t\t/* Length */\n\t\t\tfeatureNode = _fnFeatureHtmlLength( oSettings );\n\t\t}\n\t\telse if ( cOption == 'f' && features.bFilter )\n\t\t{\n\t\t\t/* Filter */\n\t\t\tfeatureNode = _fnFeatureHtmlFilter( oSettings );\n\t\t}\n\t\telse if ( cOption == 'r' && features.bProcessing )\n\t\t{\n\t\t\t/* pRocessing */\n\t\t\tfeatureNode = _fnFeatureHtmlProcessing( oSettings );\n\t\t}\n\t\telse if ( cOption == 't' )\n\t\t{\n\t\t\t/* Table */\n\t\t\tfeatureNode = _fnFeatureHtmlTable( oSettings );\n\t\t}\n\t\telse if ( cOption ==  'i' && features.bInfo )\n\t\t{\n\t\t\t/* Info */\n\t\t\tfeatureNode = _fnFeatureHtmlInfo( oSettings );\n\t\t}\n\t\telse if ( cOption == 'p' && features.bPaginate )\n\t\t{\n\t\t\t/* Pagination */\n\t\t\tfeatureNode = _fnFeatureHtmlPaginate( oSettings );\n\t\t}\n\t\telse if ( DataTable.ext.feature.length !== 0 )\n\t\t{\n\t\t\t/* Plug-in features */\n\t\t\tvar aoFeatures = DataTable.ext.feature;\n\t\t\tfor ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )\n\t\t\t{\n\t\t\t\tif ( cOption == aoFeatures[k].cFeature )\n\t\t\t\t{\n\t\t\t\t\tfeatureNode = aoFeatures[k].fnInit( oSettings );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* Add to the 2D features array */\n\t\tif ( featureNode )\n\t\t{\n\t\t\tvar aanFeatures = oSettings.aanFeatures;\n\n\t\t\tif ( ! aanFeatures[cOption] )\n\t\t\t{\n\t\t\t\taanFeatures[cOption] = [];\n\t\t\t}\n\n\t\t\taanFeatures[cOption].push( featureNode );\n\t\t\tinsert.append( featureNode );\n\t\t}\n\t}\n\n\t/* Built our DOM structure - replace the holding div with what we want */\n\tholding.replaceWith( insert );\n\toSettings.nHolding = null;\n}\n\n\n/**\n * Use the DOM source to create up an array of header cells. The idea here is to\n * create a layout grid (array) of rows x columns, which contains a reference\n * to the cell that that point in the grid (regardless of col/rowspan), such that\n * any column / row could be removed and the new grid constructed\n *  @param array {object} aLayout Array to store the calculated layout in\n *  @param {node} nThead The header/footer element for the table\n *  @memberof DataTable#oApi\n */\nfunction _fnDetectHeader ( aLayout, nThead )\n{\n\tvar nTrs = $(nThead).children('tr');\n\tvar nTr, nCell;\n\tvar i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n\tvar bUnique;\n\tvar fnShiftCol = function ( a, i, j ) {\n\t\tvar k = a[i];\n                while ( k[j] ) {\n\t\t\tj++;\n\t\t}\n\t\treturn j;\n\t};\n\n\taLayout.splice( 0, aLayout.length );\n\n\t/* We know how many rows there are in the layout - so prep it */\n\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t{\n\t\taLayout.push( [] );\n\t}\n\n\t/* Calculate a layout array */\n\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t{\n\t\tnTr = nTrs[i];\n\t\tiColumn = 0;\n\n\t\t/* For every cell in the row... */\n\t\tnCell = nTr.firstChild;\n\t\twhile ( nCell ) {\n\t\t\tif ( nCell.nodeName.toUpperCase() == \"TD\" ||\n\t\t\t     nCell.nodeName.toUpperCase() == \"TH\" )\n\t\t\t{\n\t\t\t\t/* Get the col and rowspan attributes from the DOM and sanitise them */\n\t\t\t\tiColspan = nCell.getAttribute('colspan') * 1;\n\t\t\t\tiRowspan = nCell.getAttribute('rowspan') * 1;\n\t\t\t\tiColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;\n\t\t\t\tiRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;\n\n\t\t\t\t/* There might be colspan cells already in this row, so shift our target\n\t\t\t\t * accordingly\n\t\t\t\t */\n\t\t\t\tiColShifted = fnShiftCol( aLayout, i, iColumn );\n\n\t\t\t\t/* Cache calculation for unique columns */\n\t\t\t\tbUnique = iColspan === 1 ? true : false;\n\n\t\t\t\t/* If there is col / rowspan, copy the information into the layout grid */\n\t\t\t\tfor ( l=0 ; l<iColspan ; l++ )\n\t\t\t\t{\n\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t{\n\t\t\t\t\t\taLayout[i+k][iColShifted+l] = {\n\t\t\t\t\t\t\t\"cell\": nCell,\n\t\t\t\t\t\t\t\"unique\": bUnique\n\t\t\t\t\t\t};\n\t\t\t\t\t\taLayout[i+k].nTr = nTr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tnCell = nCell.nextSibling;\n\t\t}\n\t}\n}\n\n\n/**\n * Get an array of unique th elements, one for each column\n *  @param {object} oSettings dataTables settings object\n *  @param {node} nHeader automatically detect the layout from this node - optional\n *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n *  @returns array {node} aReturn list of unique th's\n *  @memberof DataTable#oApi\n */\nfunction _fnGetUniqueThs ( oSettings, nHeader, aLayout )\n{\n\tvar aReturn = [];\n\tif ( !aLayout )\n\t{\n\t\taLayout = oSettings.aoHeader;\n\t\tif ( nHeader )\n\t\t{\n\t\t\taLayout = [];\n\t\t\t_fnDetectHeader( aLayout, nHeader );\n\t\t}\n\t}\n\n\tfor ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )\n\t{\n\t\tfor ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )\n\t\t{\n\t\t\tif ( aLayout[i][j].unique &&\n\t\t\t\t (!aReturn[j] || !oSettings.bSortCellsTop) )\n\t\t\t{\n\t\t\t\taReturn[j] = aLayout[i][j].cell;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn aReturn;\n}\n\n/**\n * Set the start position for draw\n *  @param {object} oSettings dataTables settings object\n */\nfunction _fnStart( oSettings )\n{\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\n\t// Check and see if we have an initial draw position from state saving\n\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\n\t{\n\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\tiInitDisplayStart :\n\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t0 :\n\t\t\t\tiInitDisplayStart;\n\n\t\toSettings.iInitDisplayStart = -1;\n\t}\n}\n\n/**\n * Create an Ajax call based on the table's settings, taking into account that\n * parameters can have multiple forms, and backwards compatibility.\n *\n * @param {object} oSettings dataTables settings object\n * @param {array} data Data to send to the server, required by\n *     DataTables - may be augmented by developer callbacks\n * @param {function} fn Callback function to run when data is obtained\n */\nfunction _fnBuildAjax( oSettings, data, fn )\n{\n\t// Compatibility with 1.9-, allow fnServerData and event to manipulate\n\t_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );\n\n\t// Convert to object based for 1.10+ if using the old array scheme which can\n\t// come from server-side processing or serverParams\n\tif ( data && Array.isArray(data) ) {\n\t\tvar tmp = {};\n\t\tvar rbracket = /(.*?)\\[\\]$/;\n\n\t\t$.each( data, function (key, val) {\n\t\t\tvar match = val.name.match(rbracket);\n\n\t\t\tif ( match ) {\n\t\t\t\t// Support for arrays\n\t\t\t\tvar name = match[0];\n\n\t\t\t\tif ( ! tmp[ name ] ) {\n\t\t\t\t\ttmp[ name ] = [];\n\t\t\t\t}\n\t\t\t\ttmp[ name ].push( val.value );\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttmp[val.name] = val.value;\n\t\t\t}\n\t\t} );\n\t\tdata = tmp;\n\t}\n\n\tvar ajaxData;\n\tvar ajax = oSettings.ajax;\n\tvar instance = oSettings.oInstance;\n\tvar callback = function ( json ) {\n\t\tvar status = oSettings.jqXHR\n\t\t\t? oSettings.jqXHR.status\n\t\t\t: null;\n\n\t\tif ( json === null || (typeof status === 'number' && status == 204 ) ) {\n\t\t\tjson = {};\n\t\t\t_fnAjaxDataSrc( oSettings, json, [] );\n\t\t}\n\n\t\tvar error = json.error || json.sError;\n\t\tif ( error ) {\n\t\t\t_fnLog( oSettings, 0, error );\n\t\t}\n\n\t\toSettings.json = json;\n\n\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );\n\t\tfn( json );\n\t};\n\n\tif ( $.isPlainObject( ajax ) && ajax.data )\n\t{\n\t\tajaxData = ajax.data;\n\n\t\tvar newData = typeof ajaxData === 'function' ?\n\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\n\t\t\tajaxData;                      // an object object or array to merge\n\n\t\t// If the function returned something, use that alone\n\t\tdata = typeof ajaxData === 'function' && newData ?\n\t\t\tnewData :\n\t\t\t$.extend( true, data, newData );\n\n\t\t// Remove the data property as we've resolved it already and don't want\n\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\tdelete ajax.data;\n\t}\n\n\tvar baseAjax = {\n\t\t\"data\": data,\n\t\t\"success\": callback,\n\t\t\"dataType\": \"json\",\n\t\t\"cache\": false,\n\t\t\"type\": oSettings.sServerMethod,\n\t\t\"error\": function (xhr, error, thrown) {\n\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );\n\n\t\t\tif ( $.inArray( true, ret ) === -1 ) {\n\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\n\t\t\t\t}\n\t\t\t\telse if ( xhr.readyState === 4 ) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t}\n\t};\n\n\t// Store the data submitted for the API\n\toSettings.oAjaxData = data;\n\n\t// Allow plug-ins and external processes to modify the data\n\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );\n\n\tif ( oSettings.fnServerData )\n\t{\n\t\t// DataTables 1.9- compatibility\n\t\toSettings.fnServerData.call( instance,\n\t\t\toSettings.sAjaxSource,\n\t\t\t$.map( data, function (val, key) { // Need to convert back to 1.9 trad format\n\t\t\t\treturn { name: key, value: val };\n\t\t\t} ),\n\t\t\tcallback,\n\t\t\toSettings\n\t\t);\n\t}\n\telse if ( oSettings.sAjaxSource || typeof ajax === 'string' )\n\t{\n\t\t// DataTables 1.9- compatibility\n\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, {\n\t\t\turl: ajax || oSettings.sAjaxSource\n\t\t} ) );\n\t}\n\telse if ( typeof ajax === 'function' )\n\t{\n\t\t// Is a function - let the caller define what needs to be done\n\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\n\t}\n\telse\n\t{\n\t\t// Object to extend the base settings\n\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );\n\n\t\t// Restore for next time around\n\t\tajax.data = ajaxData;\n\t}\n}\n\n\n/**\n * Update the table using an Ajax call\n *  @param {object} settings dataTables settings object\n *  @returns {boolean} Block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdate( settings )\n{\n\tsettings.iDraw++;\n\t_fnProcessingDisplay( settings, true );\n\n\t// Keep track of drawHold state to handle scrolling after the Ajax call\n\tvar drawHold = settings._drawHold;\n\n\t_fnBuildAjax(\n\t\tsettings,\n\t\t_fnAjaxParameters( settings ),\n\t\tfunction(json) {\n\t\t\tsettings._drawHold = drawHold;\n\t\t\t_fnAjaxUpdateDraw( settings, json );\n\t\t\tsettings._drawHold = false;\n\t\t}\n\t);\n}\n\n\n/**\n * Build up the parameters in an object needed for a server-side processing\n * request. Note that this is basically done twice, is different ways - a modern\n * method which is used by default in DataTables 1.10 which uses objects and\n * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n * the sAjaxSource option is used in the initialisation, or the legacyAjax\n * option is set.\n *  @param {object} oSettings dataTables settings object\n *  @returns {bool} block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxParameters( settings )\n{\n\tvar\n\t\tcolumns = settings.aoColumns,\n\t\tcolumnCount = columns.length,\n\t\tfeatures = settings.oFeatures,\n\t\tpreSearch = settings.oPreviousSearch,\n\t\tpreColSearch = settings.aoPreSearchCols,\n\t\ti, data = [], dataProp, column, columnSearch,\n\t\tsort = _fnSortFlatten( settings ),\n\t\tdisplayStart = settings._iDisplayStart,\n\t\tdisplayLength = features.bPaginate !== false ?\n\t\t\tsettings._iDisplayLength :\n\t\t\t-1;\n\n\tvar param = function ( name, value ) {\n\t\tdata.push( { 'name': name, 'value': value } );\n\t};\n\n\t// DataTables 1.9- compatible method\n\tparam( 'sEcho',          settings.iDraw );\n\tparam( 'iColumns',       columnCount );\n\tparam( 'sColumns',       _pluck( columns, 'sName' ).join(',') );\n\tparam( 'iDisplayStart',  displayStart );\n\tparam( 'iDisplayLength', displayLength );\n\n\t// DataTables 1.10+ method\n\tvar d = {\n\t\tdraw:    settings.iDraw,\n\t\tcolumns: [],\n\t\torder:   [],\n\t\tstart:   displayStart,\n\t\tlength:  displayLength,\n\t\tsearch:  {\n\t\t\tvalue: preSearch.sSearch,\n\t\t\tregex: preSearch.bRegex\n\t\t}\n\t};\n\n\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\tcolumn = columns[i];\n\t\tcolumnSearch = preColSearch[i];\n\t\tdataProp = typeof column.mData==\"function\" ? 'function' : column.mData ;\n\n\t\td.columns.push( {\n\t\t\tdata:       dataProp,\n\t\t\tname:       column.sName,\n\t\t\tsearchable: column.bSearchable,\n\t\t\torderable:  column.bSortable,\n\t\t\tsearch:     {\n\t\t\t\tvalue: columnSearch.sSearch,\n\t\t\t\tregex: columnSearch.bRegex\n\t\t\t}\n\t\t} );\n\n\t\tparam( \"mDataProp_\"+i, dataProp );\n\n\t\tif ( features.bFilter ) {\n\t\t\tparam( 'sSearch_'+i,     columnSearch.sSearch );\n\t\t\tparam( 'bRegex_'+i,      columnSearch.bRegex );\n\t\t\tparam( 'bSearchable_'+i, column.bSearchable );\n\t\t}\n\n\t\tif ( features.bSort ) {\n\t\t\tparam( 'bSortable_'+i, column.bSortable );\n\t\t}\n\t}\n\n\tif ( features.bFilter ) {\n\t\tparam( 'sSearch', preSearch.sSearch );\n\t\tparam( 'bRegex', preSearch.bRegex );\n\t}\n\n\tif ( features.bSort ) {\n\t\t$.each( sort, function ( i, val ) {\n\t\t\td.order.push( { column: val.col, dir: val.dir } );\n\n\t\t\tparam( 'iSortCol_'+i, val.col );\n\t\t\tparam( 'sSortDir_'+i, val.dir );\n\t\t} );\n\n\t\tparam( 'iSortingCols', sort.length );\n\t}\n\n\t// If the legacy.ajax parameter is null, then we automatically decide which\n\t// form to use, based on sAjaxSource\n\tvar legacy = DataTable.ext.legacy.ajax;\n\tif ( legacy === null ) {\n\t\treturn settings.sAjaxSource ? data : d;\n\t}\n\n\t// Otherwise, if legacy has been specified then we use that to decide on the\n\t// form\n\treturn legacy ? data : d;\n}\n\n\n/**\n * Data the data from the server (nuking the old) and redraw the table\n *  @param {object} oSettings dataTables settings object\n *  @param {object} json json data return from the server.\n *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n *  @param {array} json.aaData The data to display on this page\n *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdateDraw ( settings, json )\n{\n\t// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n\t// Support both\n\tvar compat = function ( old, modern ) {\n\t\treturn json[old] !== undefined ? json[old] : json[modern];\n\t};\n\n\tvar data = _fnAjaxDataSrc( settings, json );\n\tvar draw            = compat( 'sEcho',                'draw' );\n\tvar recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );\n\tvar recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );\n\n\tif ( draw !== undefined ) {\n\t\t// Protect against out of sequence returns\n\t\tif ( draw*1 < settings.iDraw ) {\n\t\t\treturn;\n\t\t}\n\t\tsettings.iDraw = draw * 1;\n\t}\n\n\t// No data in returned object, so rather than an array, we show an empty table\n\tif ( ! data ) {\n\t\tdata = [];\n\t}\n\n\t_fnClearTable( settings );\n\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\n\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\n\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t_fnAddData( settings, data[i] );\n\t}\n\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\n\t_fnDraw( settings, true );\n\n\tif ( ! settings._bInitComplete ) {\n\t\t_fnInitComplete( settings, json );\n\t}\n\n\t_fnProcessingDisplay( settings, false );\n}\n\n\n/**\n * Get the data from the JSON data source to use for drawing a table. Using\n * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n * source object, or from a processing function.\n *  @param {object} oSettings dataTables settings object\n *  @param  {object} json Data source object / array from the server\n *  @return {array} Array of data to use\n */\n function _fnAjaxDataSrc ( oSettings, json, write )\n {\n\tvar dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?\n\t\toSettings.ajax.dataSrc :\n\t\toSettings.sAjaxDataProp; // Compatibility with 1.9-.\n\n\tif ( ! write ) {\n\t\tif ( dataSrc === 'data' ) {\n\t\t\t// If the default, then we still want to support the old style, and safely ignore\n\t\t\t// it if possible\n\t\t\treturn json.aaData || json[dataSrc];\n\t\t}\n\n\t\treturn dataSrc !== \"\" ?\n\t\t\t_fnGetObjectDataFn( dataSrc )( json ) :\n\t\t\tjson;\n\t}\n\n\t// set\n\t_fnSetObjectDataFn( dataSrc )( json, write );\n}\n\n/**\n * Generate the node required for filtering text\n *  @returns {node} Filter control element\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlFilter ( settings )\n{\n\tvar classes = settings.oClasses;\n\tvar tableId = settings.sTableId;\n\tvar language = settings.oLanguage;\n\tvar previousSearch = settings.oPreviousSearch;\n\tvar features = settings.aanFeatures;\n\tvar input = '<input type=\"search\" class=\"'+classes.sFilterInput+'\"/>';\n\n\tvar str = language.sSearch;\n\tstr = str.match(/_INPUT_/) ?\n\t\tstr.replace('_INPUT_', input) :\n\t\tstr+input;\n\n\tvar filter = $('<div/>', {\n\t\t\t'id': ! features.f ? tableId+'_filter' : null,\n\t\t\t'class': classes.sFilter\n\t\t} )\n\t\t.append( $('<label/>' ).append( str ) );\n\n\tvar searchFn = function(event) {\n\t\t/* Update all other filter input elements for the new display */\n\t\tvar n = features.f;\n\t\tvar val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\n\t\tif(previousSearch['return'] && event.key !== \"Enter\") {\n\t\t\treturn;\n\t\t}\n\t\t/* Now do the filter */\n\t\tif ( val != previousSearch.sSearch ) {\n\t\t\t_fnFilterComplete( settings, {\n\t\t\t\t\"sSearch\": val,\n\t\t\t\t\"bRegex\": previousSearch.bRegex,\n\t\t\t\t\"bSmart\": previousSearch.bSmart ,\n\t\t\t\t\"bCaseInsensitive\": previousSearch.bCaseInsensitive,\n\t\t\t\t\"return\": previousSearch['return']\n\t\t\t} );\n\n\t\t\t// Need to redraw, without resorting\n\t\t\tsettings._iDisplayStart = 0;\n\t\t\t_fnDraw( settings );\n\t\t}\n\t};\n\n\tvar searchDelay = settings.searchDelay !== null ?\n\t\tsettings.searchDelay :\n\t\t_fnDataSource( settings ) === 'ssp' ?\n\t\t\t400 :\n\t\t\t0;\n\n\tvar jqFilter = $('input', filter)\n\t\t.val( previousSearch.sSearch )\n\t\t.attr( 'placeholder', language.sSearchPlaceholder )\n\t\t.on(\n\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\tsearchDelay ?\n\t\t\t\t_fnThrottle( searchFn, searchDelay ) :\n\t\t\t\tsearchFn\n\t\t)\n\t\t.on( 'mouseup.DT', function(e) {\n\t\t\t// Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n\t\t\t// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n\t\t\t// checks the value to see if it has changed. In other browsers it won't have.\n\t\t\tsetTimeout( function () {\n\t\t\t\tsearchFn.call(jqFilter[0], e);\n\t\t\t}, 10);\n\t\t} )\n\t\t.on( 'keypress.DT', function(e) {\n\t\t\t/* Prevent form submission */\n\t\t\tif ( e.keyCode == 13 ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} )\n\t\t.attr('aria-controls', tableId);\n\n\t// Update the input elements whenever the table is filtered\n\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\n\t\tif ( settings === s ) {\n\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t// inside an iframe or frame...\n\t\t\ttry {\n\t\t\t\tif ( jqFilter[0] !== document.activeElement ) {\n\t\t\t\t\tjqFilter.val( previousSearch.sSearch );\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch ( e ) {}\n\t\t}\n\t} );\n\n\treturn filter[0];\n}\n\n\n/**\n * Filter the table using both the global filter and column based filtering\n *  @param {object} oSettings dataTables settings object\n *  @param {object} oSearch search information\n *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterComplete ( oSettings, oInput, iForce )\n{\n\tvar oPrevSearch = oSettings.oPreviousSearch;\n\tvar aoPrevSearch = oSettings.aoPreSearchCols;\n\tvar fnSaveFilter = function ( oFilter ) {\n\t\t/* Save the filtering values */\n\t\toPrevSearch.sSearch = oFilter.sSearch;\n\t\toPrevSearch.bRegex = oFilter.bRegex;\n\t\toPrevSearch.bSmart = oFilter.bSmart;\n\t\toPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n\t\toPrevSearch['return'] = oFilter['return'];\n\t};\n\tvar fnRegex = function ( o ) {\n\t\t// Backwards compatibility with the bEscapeRegex option\n\t\treturn o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n\t};\n\n\t// Resolve any column types that are unknown due to addition or invalidation\n\t// @todo As per sort - can this be moved into an event handler?\n\t_fnColumnTypes( oSettings );\n\n\t/* In server-side processing all filtering is done by the server, so no point hanging around here */\n\tif ( _fnDataSource( oSettings ) != 'ssp' )\n\t{\n\t\t/* Global filter */\n\t\t_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive );\n\t\tfnSaveFilter( oInput );\n\n\t\t/* Now do the individual column filter */\n\t\tfor ( var i=0 ; i<aoPrevSearch.length ; i++ )\n\t\t{\n\t\t\t_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\n\t\t\t\taoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );\n\t\t}\n\n\t\t/* Custom filtering */\n\t\t_fnFilterCustom( oSettings );\n\t}\n\telse\n\t{\n\t\tfnSaveFilter( oInput );\n\t}\n\n\t/* Tell the draw function we have been filtering */\n\toSettings.bFiltered = true;\n\t_fnCallbackFire( oSettings, null, 'search', [oSettings] );\n}\n\n\n/**\n * Apply custom filtering functions\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCustom( settings )\n{\n\tvar filters = DataTable.ext.search;\n\tvar displayRows = settings.aiDisplay;\n\tvar row, rowIdx;\n\n\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\n\t\tvar rows = [];\n\n\t\t// Loop over each row and see if it should be included\n\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\n\t\t\trowIdx = displayRows[ j ];\n\t\t\trow = settings.aoData[ rowIdx ];\n\n\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\n\t\t\t\trows.push( rowIdx );\n\t\t\t}\n\t\t}\n\n\t\t// So the array reference doesn't break set the results into the\n\t\t// existing array\n\t\tdisplayRows.length = 0;\n\t\t$.merge( displayRows, rows );\n\t}\n}\n\n\n/**\n * Filter the table on a per-column basis\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sInput string to filter on\n *  @param {int} iColumn column to filter\n *  @param {bool} bRegex treat search string as a regular expression or not\n *  @param {bool} bSmart use smart filtering or not\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )\n{\n\tif ( searchStr === '' ) {\n\t\treturn;\n\t}\n\n\tvar data;\n\tvar out = [];\n\tvar display = settings.aiDisplay;\n\tvar rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );\n\n\tfor ( var i=0 ; i<display.length ; i++ ) {\n\t\tdata = settings.aoData[ display[i] ]._aFilterData[ colIdx ];\n\n\t\tif ( rpSearch.test( data ) ) {\n\t\t\tout.push( display[i] );\n\t\t}\n\t}\n\n\tsettings.aiDisplay = out;\n}\n\n\n/**\n * Filter the data table based on user input and draw the table\n *  @param {object} settings dataTables settings object\n *  @param {string} input string to filter on\n *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n *  @param {bool} regex treat as a regular expression or not\n *  @param {bool} smart perform smart filtering or not\n *  @param {bool} caseInsensitive Do case insensitive matching or not\n *  @memberof DataTable#oApi\n */\nfunction _fnFilter( settings, input, force, regex, smart, caseInsensitive )\n{\n\tvar rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );\n\tvar prevSearch = settings.oPreviousSearch.sSearch;\n\tvar displayMaster = settings.aiDisplayMaster;\n\tvar display, invalidated, i;\n\tvar filtered = [];\n\n\t// Need to take account of custom filtering functions - always filter\n\tif ( DataTable.ext.search.length !== 0 ) {\n\t\tforce = true;\n\t}\n\n\t// Check if any of the rows were invalidated\n\tinvalidated = _fnFilterData( settings );\n\n\t// If the input is blank - we just want the full data set\n\tif ( input.length <= 0 ) {\n\t\tsettings.aiDisplay = displayMaster.slice();\n\t}\n\telse {\n\t\t// New search - start from the master array\n\t\tif ( invalidated ||\n\t\t\t force ||\n\t\t\t regex ||\n\t\t\t prevSearch.length > input.length ||\n\t\t\t input.indexOf(prevSearch) !== 0 ||\n\t\t\t settings.bSorted // On resort, the display master needs to be\n\t\t\t                  // re-filtered since indexes will have changed\n\t\t) {\n\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t}\n\n\t\t// Search the display array\n\t\tdisplay = settings.aiDisplay;\n\n\t\tfor ( i=0 ; i<display.length ; i++ ) {\n\t\t\tif ( rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {\n\t\t\t\tfiltered.push( display[i] );\n\t\t\t}\n\t\t}\n\n\t\tsettings.aiDisplay = filtered;\n\t}\n}\n\n\n/**\n * Build a regular expression object suitable for searching a table\n *  @param {string} sSearch string to search for\n *  @param {bool} bRegex treat as a regular expression or not\n *  @param {bool} bSmart perform smart filtering or not\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n *  @returns {RegExp} constructed object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCreateSearch( search, regex, smart, caseInsensitive )\n{\n\tsearch = regex ?\n\t\tsearch :\n\t\t_fnEscapeRegex( search );\n\t\n\tif ( smart ) {\n\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t * order is important - a la google. So this is what we want to\n\t\t * generate:\n\t\t * \n\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t */\n\t\tvar a = $.map( search.match( /[\"\\u201C][^\"\\u201D]+[\"\\u201D]|[^ ]+/g ) || [''], function ( word ) {\n\t\t\tif ( word.charAt(0) === '\"' ) {\n\t\t\t\tvar m = word.match( /^\"(.*)\"$/ );\n\t\t\t\tword = m ? m[1] : word;\n\t\t\t}\n\t\t\telse if ( word.charAt(0) === '\\u201C' ) {\n\t\t\t\tvar m = word.match( /^\\u201C(.*)\\u201D$/ );\n\t\t\t\tword = m ? m[1] : word;\n\t\t\t}\n\n\t\t\treturn word.replace('\"', '');\n\t\t} );\n\n\t\tsearch = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';\n\t}\n\n\treturn new RegExp( search, caseInsensitive ? 'i' : '' );\n}\n\n\n/**\n * Escape a string such that it can be used in a regular expression\n *  @param {string} sVal string to escape\n *  @returns {string} escaped string\n *  @memberof DataTable#oApi\n */\nvar _fnEscapeRegex = DataTable.util.escapeRegex;\n\nvar __filter_div = $('<div>')[0];\nvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\n// Update the filtering data for each row if needed (by invalidation or first run)\nfunction _fnFilterData ( settings )\n{\n\tvar columns = settings.aoColumns;\n\tvar column;\n\tvar i, j, ien, jen, filterData, cellData, row;\n\tvar wasInvalidated = false;\n\n\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\trow = settings.aoData[i];\n\n\t\tif ( ! row._aFilterData ) {\n\t\t\tfilterData = [];\n\n\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\n\t\t\t\tcolumn = columns[j];\n\n\t\t\t\tif ( column.bSearchable ) {\n\t\t\t\t\tcellData = _fnGetCellData( settings, i, j, 'filter' );\n\n\t\t\t\t\t// Search in DataTables 1.10 is string based. In 1.11 this\n\t\t\t\t\t// should be altered to also allow strict type checking.\n\t\t\t\t\tif ( cellData === null ) {\n\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\n\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcellData = '';\n\t\t\t\t}\n\n\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t// method used here is much faster https://jsperf.com/html-decode\n\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\n\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t}\n\n\t\t\t\tif ( cellData.replace ) {\n\t\t\t\t\tcellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n\t\t\t\t}\n\n\t\t\t\tfilterData.push( cellData );\n\t\t\t}\n\n\t\t\trow._aFilterData = filterData;\n\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\twasInvalidated = true;\n\t\t}\n\t}\n\n\treturn wasInvalidated;\n}\n\n\n/**\n * Convert from the internal Hungarian notation to camelCase for external\n * interaction\n *  @param {object} obj Object to convert\n *  @returns {object} Inverted object\n *  @memberof DataTable#oApi\n */\nfunction _fnSearchToCamel ( obj )\n{\n\treturn {\n\t\tsearch:          obj.sSearch,\n\t\tsmart:           obj.bSmart,\n\t\tregex:           obj.bRegex,\n\t\tcaseInsensitive: obj.bCaseInsensitive\n\t};\n}\n\n\n\n/**\n * Convert from camelCase notation to the internal Hungarian. We could use the\n * Hungarian convert function here, but this is cleaner\n *  @param {object} obj Object to convert\n *  @returns {object} Inverted object\n *  @memberof DataTable#oApi\n */\nfunction _fnSearchToHung ( obj )\n{\n\treturn {\n\t\tsSearch:          obj.search,\n\t\tbSmart:           obj.smart,\n\t\tbRegex:           obj.regex,\n\t\tbCaseInsensitive: obj.caseInsensitive\n\t};\n}\n\n/**\n * Generate the node required for the info display\n *  @param {object} oSettings dataTables settings object\n *  @returns {node} Information element\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlInfo ( settings )\n{\n\tvar\n\t\ttid = settings.sTableId,\n\t\tnodes = settings.aanFeatures.i,\n\t\tn = $('<div/>', {\n\t\t\t'class': settings.oClasses.sInfo,\n\t\t\t'id': ! nodes ? tid+'_info' : null\n\t\t} );\n\n\tif ( ! nodes ) {\n\t\t// Update display on each draw\n\t\tsettings.aoDrawCallback.push( {\n\t\t\t\"fn\": _fnUpdateInfo,\n\t\t\t\"sName\": \"information\"\n\t\t} );\n\n\t\tn\n\t\t\t.attr( 'role', 'status' )\n\t\t\t.attr( 'aria-live', 'polite' );\n\n\t\t// Table is described by our info div\n\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\n\t}\n\n\treturn n[0];\n}\n\n\n/**\n * Update the information elements in the display\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnUpdateInfo ( settings )\n{\n\t/* Show information about the table */\n\tvar nodes = settings.aanFeatures.i;\n\tif ( nodes.length === 0 ) {\n\t\treturn;\n\t}\n\n\tvar\n\t\tlang  = settings.oLanguage,\n\t\tstart = settings._iDisplayStart+1,\n\t\tend   = settings.fnDisplayEnd(),\n\t\tmax   = settings.fnRecordsTotal(),\n\t\ttotal = settings.fnRecordsDisplay(),\n\t\tout   = total ?\n\t\t\tlang.sInfo :\n\t\t\tlang.sInfoEmpty;\n\n\tif ( total !== max ) {\n\t\t/* Record set after filtering */\n\t\tout += ' ' + lang.sInfoFiltered;\n\t}\n\n\t// Convert the macros\n\tout += lang.sInfoPostFix;\n\tout = _fnInfoMacros( settings, out );\n\n\tvar callback = lang.fnInfoCallback;\n\tif ( callback !== null ) {\n\t\tout = callback.call( settings.oInstance,\n\t\t\tsettings, start, end, max, total, out\n\t\t);\n\t}\n\n\t$(nodes).html( out );\n}\n\n\nfunction _fnInfoMacros ( settings, str )\n{\n\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n\t// internally\n\tvar\n\t\tformatter  = settings.fnFormatNumber,\n\t\tstart      = settings._iDisplayStart+1,\n\t\tlen        = settings._iDisplayLength,\n\t\tvis        = settings.fnRecordsDisplay(),\n\t\tall        = len === -1;\n\n\treturn str.\n\t\treplace(/_START_/g, formatter.call( settings, start ) ).\n\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\n\t\treplace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).\n\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\n\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\n\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );\n}\n\n\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnInitialise ( settings )\n{\n\tvar i, iLen, iAjaxStart=settings.iInitDisplayStart;\n\tvar columns = settings.aoColumns, column;\n\tvar features = settings.oFeatures;\n\tvar deferLoading = settings.bDeferLoading; // value modified by the draw\n\n\t/* Ensure that the table data is fully initialised */\n\tif ( ! settings.bInitialised ) {\n\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\n\t\treturn;\n\t}\n\n\t/* Show the display HTML options */\n\t_fnAddOptionsHtml( settings );\n\n\t/* Build and draw the header / footer for the table */\n\t_fnBuildHead( settings );\n\t_fnDrawHead( settings, settings.aoHeader );\n\t_fnDrawHead( settings, settings.aoFooter );\n\n\t/* Okay to show that something is going on now */\n\t_fnProcessingDisplay( settings, true );\n\n\t/* Calculate sizes for columns */\n\tif ( features.bAutoWidth ) {\n\t\t_fnCalculateColumnWidths( settings );\n\t}\n\n\tfor ( i=0, iLen=columns.length ; i<iLen ; i++ ) {\n\t\tcolumn = columns[i];\n\n\t\tif ( column.sWidth ) {\n\t\t\tcolumn.nTh.style.width = _fnStringToCss( column.sWidth );\n\t\t}\n\t}\n\n\t_fnCallbackFire( settings, null, 'preInit', [settings] );\n\n\t// If there is default sorting required - let's do it. The sort function\n\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t// data (show 'loading' message possibly)\n\t_fnReDraw( settings );\n\n\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\tvar dataSrc = _fnDataSource( settings );\n\tif ( dataSrc != 'ssp' || deferLoading ) {\n\t\t// if there is an ajax source load the data\n\t\tif ( dataSrc == 'ajax' ) {\n\t\t\t_fnBuildAjax( settings, [], function(json) {\n\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\n\n\t\t\t\t// Got the data - add it to the table\n\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\n\t\t\t\t\t_fnAddData( settings, aData[i] );\n\t\t\t\t}\n\n\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t// it appear 'fresh'\n\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\n\t\t\t\t_fnReDraw( settings );\n\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t_fnInitComplete( settings, json );\n\t\t\t}, settings );\n\t\t}\n\t\telse {\n\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t_fnInitComplete( settings );\n\t\t}\n\t}\n}\n\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} oSettings dataTables settings object\n *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n *    with client-side processing (optional)\n *  @memberof DataTable#oApi\n */\nfunction _fnInitComplete ( settings, json )\n{\n\tsettings._bInitComplete = true;\n\n\t// When data was added after the initialisation (data or Ajax) we need to\n\t// calculate the column sizing\n\tif ( json || settings.oInit.aaData ) {\n\t\t_fnAdjustColumnSizing( settings );\n\t}\n\n\t_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );\n\t_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );\n}\n\n\nfunction _fnLengthChange ( settings, val )\n{\n\tvar len = parseInt( val, 10 );\n\tsettings._iDisplayLength = len;\n\n\t_fnLengthOverflow( settings );\n\n\t// Fire length change event\n\t_fnCallbackFire( settings, null, 'length', [settings, len] );\n}\n\n\n/**\n * Generate the node required for user display length changing\n *  @param {object} settings dataTables settings object\n *  @returns {node} Display length feature node\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlLength ( settings )\n{\n\tvar\n\t\tclasses  = settings.oClasses,\n\t\ttableId  = settings.sTableId,\n\t\tmenu     = settings.aLengthMenu,\n\t\td2       = Array.isArray( menu[0] ),\n\t\tlengths  = d2 ? menu[0] : menu,\n\t\tlanguage = d2 ? menu[1] : menu;\n\n\tvar select = $('<select/>', {\n\t\t'name':          tableId+'_length',\n\t\t'aria-controls': tableId,\n\t\t'class':         classes.sLengthSelect\n\t} );\n\n\tfor ( var i=0, ien=lengths.length ; i<ien ; i++ ) {\n\t\tselect[0][ i ] = new Option(\n\t\t\ttypeof language[i] === 'number' ?\n\t\t\t\tsettings.fnFormatNumber( language[i] ) :\n\t\t\t\tlanguage[i],\n\t\t\tlengths[i]\n\t\t);\n\t}\n\n\tvar div = $('<div><label/></div>').addClass( classes.sLength );\n\tif ( ! settings.aanFeatures.l ) {\n\t\tdiv[0].id = tableId+'_length';\n\t}\n\n\tdiv.children().append(\n\t\tsettings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )\n\t);\n\n\t// Can't use `select` variable as user might provide their own and the\n\t// reference is broken by the use of outerHTML\n\t$('select', div)\n\t\t.val( settings._iDisplayLength )\n\t\t.on( 'change.DT', function(e) {\n\t\t\t_fnLengthChange( settings, $(this).val() );\n\t\t\t_fnDraw( settings );\n\t\t} );\n\n\t// Update node value whenever anything changes the table's length\n\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\n\t\tif ( settings === s ) {\n\t\t\t$('select', div).val( len );\n\t\t}\n\t} );\n\n\treturn div[0];\n}\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Note that most of the paging logic is done in\n * DataTable.ext.pager\n */\n\n/**\n * Generate the node required for default pagination\n *  @param {object} oSettings dataTables settings object\n *  @returns {node} Pagination feature node\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlPaginate ( settings )\n{\n\tvar\n\t\ttype   = settings.sPaginationType,\n\t\tplugin = DataTable.ext.pager[ type ],\n\t\tmodern = typeof plugin === 'function',\n\t\tredraw = function( settings ) {\n\t\t\t_fnDraw( settings );\n\t\t},\n\t\tnode = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],\n\t\tfeatures = settings.aanFeatures;\n\n\tif ( ! modern ) {\n\t\tplugin.fnInit( settings, node, redraw );\n\t}\n\n\t/* Add a draw callback for the pagination on first instance, to update the paging display */\n\tif ( ! features.p )\n\t{\n\t\tnode.id = settings.sTableId+'_paginate';\n\n\t\tsettings.aoDrawCallback.push( {\n\t\t\t\"fn\": function( settings ) {\n\t\t\t\tif ( modern ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tstart      = settings._iDisplayStart,\n\t\t\t\t\t\tlen        = settings._iDisplayLength,\n\t\t\t\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\t\t\t\tall        = len === -1,\n\t\t\t\t\t\tpage = all ? 0 : Math.ceil( start / len ),\n\t\t\t\t\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\t\t\tbuttons = plugin(page, pages),\n\t\t\t\t\t\ti, ien;\n\n\t\t\t\t\tfor ( i=0, ien=features.p.length ; i<ien ; i++ ) {\n\t\t\t\t\t\t_fnRenderer( settings, 'pageButton' )(\n\t\t\t\t\t\t\tsettings, features.p[i], i, buttons, page, pages\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tplugin.fnUpdate( settings, redraw );\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"sName\": \"pagination\"\n\t\t} );\n\t}\n\n\treturn node;\n}\n\n\n/**\n * Alter the display settings to change the page\n *  @param {object} settings DataTables settings object\n *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n *    \"next\" or \"last\" or page number to jump to (integer)\n *  @param [bool] redraw Automatically draw the update or not\n *  @returns {bool} true page has changed, false - no change\n *  @memberof DataTable#oApi\n */\nfunction _fnPageChange ( settings, action, redraw )\n{\n\tvar\n\t\tstart     = settings._iDisplayStart,\n\t\tlen       = settings._iDisplayLength,\n\t\trecords   = settings.fnRecordsDisplay();\n\n\tif ( records === 0 || len === -1 )\n\t{\n\t\tstart = 0;\n\t}\n\telse if ( typeof action === \"number\" )\n\t{\n\t\tstart = action * len;\n\n\t\tif ( start > records )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t}\n\telse if ( action == \"first\" )\n\t{\n\t\tstart = 0;\n\t}\n\telse if ( action == \"previous\" )\n\t{\n\t\tstart = len >= 0 ?\n\t\t\tstart - len :\n\t\t\t0;\n\n\t\tif ( start < 0 )\n\t\t{\n\t\t  start = 0;\n\t\t}\n\t}\n\telse if ( action == \"next\" )\n\t{\n\t\tif ( start + len < records )\n\t\t{\n\t\t\tstart += len;\n\t\t}\n\t}\n\telse if ( action == \"last\" )\n\t{\n\t\tstart = Math.floor( (records-1) / len) * len;\n\t}\n\telse\n\t{\n\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\n\t}\n\n\tvar changed = settings._iDisplayStart !== start;\n\tsettings._iDisplayStart = start;\n\n\tif ( changed ) {\n\t\t_fnCallbackFire( settings, null, 'page', [settings] );\n\n\t\tif ( redraw ) {\n\t\t\t_fnDraw( settings );\n\t\t}\n\t}\n\telse {\n\t\t// No change event - paging was called, but no change\n\t\t_fnCallbackFire( settings, null, 'page-nc', [settings] );\n\t}\n\n\treturn changed;\n}\n\n\n\n/**\n * Generate the node required for the processing node\n *  @param {object} settings dataTables settings object\n *  @returns {node} Processing element\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlProcessing ( settings )\n{\n\treturn $('<div/>', {\n\t\t\t'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,\n\t\t\t'class': settings.oClasses.sProcessing,\n\t\t\t'role': 'status'\n\t\t} )\n\t\t.html( settings.oLanguage.sProcessing )\n\t\t.append('<div><div></div><div></div><div></div><div></div></div>')\n\t\t.insertBefore( settings.nTable )[0];\n}\n\n\n/**\n * Display or hide the processing indicator\n *  @param {object} settings dataTables settings object\n *  @param {bool} show Show the processing indicator (true) or not (false)\n *  @memberof DataTable#oApi\n */\nfunction _fnProcessingDisplay ( settings, show )\n{\n\tif ( settings.oFeatures.bProcessing ) {\n\t\t$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );\n\t}\n\n\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\n}\n\n/**\n * Add any control elements for the table - specifically scrolling\n *  @param {object} settings dataTables settings object\n *  @returns {node} Node to add to the DOM\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlTable ( settings )\n{\n\tvar table = $(settings.nTable);\n\n\t// Scrolling from here on in\n\tvar scroll = settings.oScroll;\n\n\tif ( scroll.sX === '' && scroll.sY === '' ) {\n\t\treturn settings.nTable;\n\t}\n\n\tvar scrollX = scroll.sX;\n\tvar scrollY = scroll.sY;\n\tvar classes = settings.oClasses;\n\tvar caption = table.children('caption');\n\tvar captionSide = caption.length ? caption[0]._captionSide : null;\n\tvar headerClone = $( table[0].cloneNode(false) );\n\tvar footerClone = $( table[0].cloneNode(false) );\n\tvar footer = table.children('tfoot');\n\tvar _div = '<div/>';\n\tvar size = function ( s ) {\n\t\treturn !s ? null : _fnStringToCss( s );\n\t};\n\n\tif ( ! footer.length ) {\n\t\tfooter = null;\n\t}\n\n\t/*\n\t * The HTML structure that we want to generate in this function is:\n\t *  div - scroller\n\t *    div - scroll head\n\t *      div - scroll head inner\n\t *        table - scroll head table\n\t *          thead - thead\n\t *    div - scroll body\n\t *      table - table (master table)\n\t *        thead - thead clone for sizing\n\t *        tbody - tbody\n\t *    div - scroll foot\n\t *      div - scroll foot inner\n\t *        table - scroll foot table\n\t *          tfoot - tfoot\n\t */\n\tvar scroller = $( _div, { 'class': classes.sScrollWrapper } )\n\t\t.append(\n\t\t\t$(_div, { 'class': classes.sScrollHead } )\n\t\t\t\t.css( {\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\tborder: 0,\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$(_div, { 'class': classes.sScrollHeadInner } )\n\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\n\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t)\n\t\t.append(\n\t\t\t$(_div, { 'class': classes.sScrollBody } )\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\twidth: size( scrollX )\n\t\t\t\t} )\n\t\t\t\t.append( table )\n\t\t);\n\n\tif ( footer ) {\n\t\tscroller.append(\n\t\t\t$(_div, { 'class': classes.sScrollFoot } )\n\t\t\t\t.css( {\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\tborder: 0,\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$(_div, { 'class': classes.sScrollFootInner } )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\n\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t);\n\t}\n\n\tvar children = scroller.children();\n\tvar scrollHead = children[0];\n\tvar scrollBody = children[1];\n\tvar scrollFoot = footer ? children[2] : null;\n\n\t// When the body is scrolled, then we also want to scroll the headers\n\tif ( scrollX ) {\n\t\t$(scrollBody).on( 'scroll.DT', function (e) {\n\t\t\tvar scrollLeft = this.scrollLeft;\n\n\t\t\tscrollHead.scrollLeft = scrollLeft;\n\n\t\t\tif ( footer ) {\n\t\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t\t}\n\t\t} );\n\t}\n\n\t$(scrollBody).css('max-height', scrollY);\n\tif (! scroll.bCollapse) {\n\t\t$(scrollBody).css('height', scrollY);\n\t}\n\n\tsettings.nScrollHead = scrollHead;\n\tsettings.nScrollBody = scrollBody;\n\tsettings.nScrollFoot = scrollFoot;\n\n\t// On redraw - align columns\n\tsettings.aoDrawCallback.push( {\n\t\t\"fn\": _fnScrollDraw,\n\t\t\"sName\": \"scrolling\"\n\t} );\n\n\treturn scroller[0];\n}\n\n\n\n/**\n * Update the header, footer and body tables for resizing - i.e. column\n * alignment.\n *\n * Welcome to the most horrible function DataTables. The process that this\n * function follows is basically:\n *   1. Re-create the table inside the scrolling div\n *   2. Take live measurements from the DOM\n *   3. Apply the measurements to align the columns\n *   4. Clean up\n *\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnScrollDraw ( settings )\n{\n\t// Given that this is such a monster function, a lot of variables are use\n\t// to try and keep the minimised size as small as possible\n\tvar\n\t\tscroll         = settings.oScroll,\n\t\tscrollX        = scroll.sX,\n\t\tscrollXInner   = scroll.sXInner,\n\t\tscrollY        = scroll.sY,\n\t\tbarWidth       = scroll.iBarWidth,\n\t\tdivHeader      = $(settings.nScrollHead),\n\t\tdivHeaderStyle = divHeader[0].style,\n\t\tdivHeaderInner = divHeader.children('div'),\n\t\tdivHeaderInnerStyle = divHeaderInner[0].style,\n\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\tdivBodyEl      = settings.nScrollBody,\n\t\tdivBody        = $(divBodyEl),\n\t\tdivBodyStyle   = divBodyEl.style,\n\t\tdivFooter      = $(settings.nScrollFoot),\n\t\tdivFooterInner = divFooter.children('div'),\n\t\tdivFooterTable = divFooterInner.children('table'),\n\t\theader         = $(settings.nTHead),\n\t\ttable          = $(settings.nTable),\n\t\ttableEl        = table[0],\n\t\ttableStyle     = tableEl.style,\n\t\tfooter         = settings.nTFoot ? $(settings.nTFoot) : null,\n\t\tbrowser        = settings.oBrowser,\n\t\tie67           = browser.bScrollOversize,\n\t\tdtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),\n\t\theaderTrgEls, footerTrgEls,\n\t\theaderSrcEls, footerSrcEls,\n\t\theaderCopy, footerCopy,\n\t\theaderWidths=[], footerWidths=[],\n\t\theaderContent=[], footerContent=[],\n\t\tidx, correction, sanityWidth,\n\t\tzeroOut = function(nSizer) {\n\t\t\tvar style = nSizer.style;\n\t\t\tstyle.paddingTop = \"0\";\n\t\t\tstyle.paddingBottom = \"0\";\n\t\t\tstyle.borderTopWidth = \"0\";\n\t\t\tstyle.borderBottomWidth = \"0\";\n\t\t\tstyle.height = 0;\n\t\t};\n\n\t// If the scrollbar visibility has changed from the last draw, we need to\n\t// adjust the column sizes as the table width will have changed to account\n\t// for the scrollbar\n\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\t\n\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\n\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t_fnAdjustColumnSizing( settings );\n\t\treturn; // adjust column sizing will call this function again\n\t}\n\telse {\n\t\tsettings.scrollBarVis = scrollBarVis;\n\t}\n\n\t/*\n\t * 1. Re-create the table inside the scrolling div\n\t */\n\n\t// Remove the old minimised thead and tfoot elements in the inner table\n\ttable.children('thead, tfoot').remove();\n\n\tif ( footer ) {\n\t\tfooterCopy = footer.clone().prependTo( table );\n\t\tfooterTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\n\t\tfooterSrcEls = footerCopy.find('tr');\n\t\tfooterCopy.find('[id]').removeAttr('id');\n\t}\n\n\t// Clone the current header and footer elements and then place it into the inner table\n\theaderCopy = header.clone().prependTo( table );\n\theaderTrgEls = header.find('tr'); // original header is in its own table\n\theaderSrcEls = headerCopy.find('tr');\n\theaderCopy.find('th, td').removeAttr('tabindex');\n\theaderCopy.find('[id]').removeAttr('id');\n\n\n\t/*\n\t * 2. Take live measurements from the DOM - do not alter the DOM itself!\n\t */\n\n\t// Remove old sizing and apply the calculated column widths\n\t// Get the unique column headers in the newly created (cloned) header. We want to apply the\n\t// calculated sizes to this header\n\tif ( ! scrollX )\n\t{\n\t\tdivBodyStyle.width = '100%';\n\t\tdivHeader[0].style.width = '100%';\n\t}\n\n\t$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {\n\t\tidx = _fnVisibleToColumnIndex( settings, i );\n\t\tel.style.width = settings.aoColumns[idx].sWidth;\n\t} );\n\n\tif ( footer ) {\n\t\t_fnApplyToChildren( function(n) {\n\t\t\tn.style.width = \"\";\n\t\t}, footerSrcEls );\n\t}\n\n\t// Size the table as a whole\n\tsanityWidth = table.outerWidth();\n\tif ( scrollX === \"\" ) {\n\t\t// No x scrolling\n\t\ttableStyle.width = \"100%\";\n\n\t\t// IE7 will make the width of the table when 100% include the scrollbar\n\t\t// - which is shouldn't. When there is a scrollbar we need to take this\n\t\t// into account.\n\t\tif ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\n\t\t\tdivBody.css('overflow-y') == \"scroll\")\n\t\t) {\n\t\t\ttableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);\n\t\t}\n\n\t\t// Recalculate the sanity width\n\t\tsanityWidth = table.outerWidth();\n\t}\n\telse if ( scrollXInner !== \"\" ) {\n\t\t// legacy x scroll inner has been given - use it\n\t\ttableStyle.width = _fnStringToCss(scrollXInner);\n\n\t\t// Recalculate the sanity width\n\t\tsanityWidth = table.outerWidth();\n\t}\n\n\t// Hidden header should have zero height, so remove padding and borders. Then\n\t// set the width based on the real headers\n\n\t// Apply all styles in one pass\n\t_fnApplyToChildren( zeroOut, headerSrcEls );\n\n\t// Read all widths in next pass\n\t_fnApplyToChildren( function(nSizer) {\n\t\tvar style = window.getComputedStyle ?\n\t\t\twindow.getComputedStyle(nSizer).width :\n\t\t\t_fnStringToCss( $(nSizer).width() );\n\n\t\theaderContent.push( nSizer.innerHTML );\n\t\theaderWidths.push( style );\n\t}, headerSrcEls );\n\n\t// Apply all widths in final pass\n\t_fnApplyToChildren( function(nToSize, i) {\n\t\tnToSize.style.width = headerWidths[i];\n\t}, headerTrgEls );\n\n\t$(headerSrcEls).css('height', 0);\n\n\t/* Same again with the footer if we have one */\n\tif ( footer )\n\t{\n\t\t_fnApplyToChildren( zeroOut, footerSrcEls );\n\n\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\tfooterContent.push( nSizer.innerHTML );\n\t\t\tfooterWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t}, footerSrcEls );\n\n\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\tnToSize.style.width = footerWidths[i];\n\t\t}, footerTrgEls );\n\n\t\t$(footerSrcEls).height(0);\n\t}\n\n\n\t/*\n\t * 3. Apply the measurements\n\t */\n\n\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t// the content of the cell so that the width applied to the header and body\n\t// both match, but we want to hide it completely. We want to also fix their\n\t// width to what they currently are\n\t_fnApplyToChildren( function(nSizer, i) {\n\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+headerContent[i]+'</div>';\n\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\tnSizer.style.width = headerWidths[i];\n\t}, headerSrcEls );\n\n\tif ( footer )\n\t{\n\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+footerContent[i]+'</div>';\n\t\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\t\tnSizer.style.width = footerWidths[i];\n\t\t}, footerSrcEls );\n\t}\n\n\t// Sanity check that the table is of a sensible width. If not then we are going to get\n\t// misalignment - try to prevent this by not allowing the table to shrink below its min width\n\tif ( Math.round(table.outerWidth()) < Math.round(sanityWidth) )\n\t{\n\t\t// The min width depends upon if we have a vertical scrollbar visible or not */\n\t\tcorrection = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\n\t\t\tdivBody.css('overflow-y') == \"scroll\")) ?\n\t\t\t\tsanityWidth+barWidth :\n\t\t\t\tsanityWidth;\n\n\t\t// IE6/7 are a law unto themselves...\n\t\tif ( ie67 && (divBodyEl.scrollHeight >\n\t\t\tdivBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\n\t\t) {\n\t\t\ttableStyle.width = _fnStringToCss( correction-barWidth );\n\t\t}\n\n\t\t// And give the user a warning that we've stopped the table getting too small\n\t\tif ( scrollX === \"\" || scrollXInner !== \"\" ) {\n\t\t\t_fnLog( settings, 1, 'Possible column misalignment', 6 );\n\t\t}\n\t}\n\telse\n\t{\n\t\tcorrection = '100%';\n\t}\n\n\t// Apply to the container elements\n\tdivBodyStyle.width = _fnStringToCss( correction );\n\tdivHeaderStyle.width = _fnStringToCss( correction );\n\n\tif ( footer ) {\n\t\tsettings.nScrollFoot.style.width = _fnStringToCss( correction );\n\t}\n\n\n\t/*\n\t * 4. Clean up\n\t */\n\tif ( ! scrollY ) {\n\t\t/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n\t\t * the scrollbar height from the visible display, rather than adding it on. We need to\n\t\t * set the height in order to sort this. Don't want to do it in any other browsers.\n\t\t */\n\t\tif ( ie67 ) {\n\t\t\tdivBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );\n\t\t}\n\t}\n\n\t/* Finally set the width's of the header and footer tables */\n\tvar iOuterWidth = table.outerWidth();\n\tdivHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );\n\tdivHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );\n\n\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\tvar bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\tvar padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n\tdivHeaderInnerStyle[ padding ] = bScrolling ? barWidth+\"px\" : \"0px\";\n\n\tif ( footer ) {\n\t\tdivFooterTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\tdivFooterInner[0].style.width = _fnStringToCss( iOuterWidth );\n\t\tdivFooterInner[0].style[padding] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t}\n\n\t// Correct DOM ordering for colgroup - comes before the thead\n\ttable.children('colgroup').insertBefore( table.children('thead') );\n\n\t/* Adjust the position of the header in case we loose the y-scrollbar */\n\tdivBody.trigger('scroll');\n\n\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t// only if we aren't holding the position\n\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\n\t\tdivBodyEl.scrollTop = 0;\n\t}\n}\n\n\n\n/**\n * Apply a given function to the display child nodes of an element array (typically\n * TD children of TR rows\n *  @param {function} fn Method to apply to the objects\n *  @param array {nodes} an1 List of elements to look through for display children\n *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n *  @memberof DataTable#oApi\n */\nfunction _fnApplyToChildren( fn, an1, an2 )\n{\n\tvar index=0, i=0, iLen=an1.length;\n\tvar nNode1, nNode2;\n\n\twhile ( i < iLen ) {\n\t\tnNode1 = an1[i].firstChild;\n\t\tnNode2 = an2 ? an2[i].firstChild : null;\n\n\t\twhile ( nNode1 ) {\n\t\t\tif ( nNode1.nodeType === 1 ) {\n\t\t\t\tif ( an2 ) {\n\t\t\t\t\tfn( nNode1, nNode2, index );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfn( nNode1, index );\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tnNode1 = nNode1.nextSibling;\n\t\t\tnNode2 = an2 ? nNode2.nextSibling : null;\n\t\t}\n\n\t\ti++;\n\t}\n}\n\n\n\nvar __re_html_remove = /<.*?>/g;\n\n\n/**\n * Calculate the width of columns for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnCalculateColumnWidths ( oSettings )\n{\n\tvar\n\t\ttable = oSettings.nTable,\n\t\tcolumns = oSettings.aoColumns,\n\t\tscroll = oSettings.oScroll,\n\t\tscrollY = scroll.sY,\n\t\tscrollX = scroll.sX,\n\t\tscrollXInner = scroll.sXInner,\n\t\tcolumnCount = columns.length,\n\t\tvisibleColumns = _fnGetColumns( oSettings, 'bVisible' ),\n\t\theaderCells = $('th', oSettings.nTHead),\n\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\n\t\ttableContainer = table.parentNode,\n\t\tuserInputs = false,\n\t\ti, column, columnIdx, width, outerWidth,\n\t\tbrowser = oSettings.oBrowser,\n\t\tie67 = browser.bScrollOversize;\n\n\tvar styleWidth = table.style.width;\n\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\n\t\ttableWidthAttr = styleWidth;\n\t}\n\n\t/* Convert any user input sizes into pixel sizes */\n\tvar sizes = _fnConvertToWidth(_pluck(columns, 'sWidthOrig'), tableContainer);\n\n\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\tcolumn = columns[ visibleColumns[i] ];\n\n\t\tif ( column.sWidth !== null ) {\n\t\t\tcolumn.sWidth = sizes[i];\n\n\t\t\tuserInputs = true;\n\t\t}\n\t}\n\n\t/* If the number of columns in the DOM equals the number that we have to\n\t * process in DataTables, then we can use the offsets that are created by\n\t * the web- browser. No custom sizes can be set in order for this to happen,\n\t * nor scrolling used\n\t */\n\tif ( ie67 || ! userInputs && ! scrollX && ! scrollY &&\n\t     columnCount == _fnVisbleColumns( oSettings ) &&\n\t     columnCount == headerCells.length\n\t) {\n\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\tvar colIdx = _fnVisibleToColumnIndex( oSettings, i );\n\n\t\t\tif ( colIdx !== null ) {\n\t\t\t\tcolumns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Otherwise construct a single row, worst case, table with the widest\n\t\t// node in the data, assign any user defined widths, then insert it into\n\t\t// the DOM and allow the browser to do all the hard work of calculating\n\t\t// table widths\n\t\tvar tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\n\t\t\t.css( 'visibility', 'hidden' )\n\t\t\t.removeAttr( 'id' );\n\n\t\t// Clean up the table body\n\t\ttmpTable.find('tbody tr').remove();\n\t\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\n\n\t\t// Clone the table header and footer - we can't use the header / footer\n\t\t// from the cloned table, since if scrolling is active, the table's\n\t\t// real header and footer are contained in different table tags\n\t\ttmpTable.find('thead, tfoot').remove();\n\t\ttmpTable\n\t\t\t.append( $(oSettings.nTHead).clone() )\n\t\t\t.append( $(oSettings.nTFoot).clone() );\n\n\t\t// Remove any assigned widths from the footer (from scrolling)\n\t\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\n\t\t// Apply custom sizing to the cloned header\n\t\theaderCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );\n\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\tcolumn = columns[ visibleColumns[i] ];\n\n\t\t\theaderCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\n\t\t\t\t_fnStringToCss( column.sWidthOrig ) :\n\t\t\t\t'';\n\n\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t// width the column requires, then it will have no effect\n\t\t\tif ( column.sWidthOrig && scrollX ) {\n\t\t\t\t$( headerCells[i] ).append( $('<div/>').css( {\n\t\t\t\t\twidth: column.sWidthOrig,\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\tborder: 0,\n\t\t\t\t\theight: 1\n\t\t\t\t} ) );\n\t\t\t}\n\t\t}\n\n\t\t// Find the widest cell for each column and put it into the table\n\t\tif ( oSettings.aoData.length ) {\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tcolumnIdx = visibleColumns[i];\n\t\t\t\tcolumn = columns[ columnIdx ];\n\n\t\t\t\t$( _fnGetWidestNode( oSettings, columnIdx ) )\n\t\t\t\t\t.clone( false )\n\t\t\t\t\t.append( column.sContentPadding )\n\t\t\t\t\t.appendTo( tr );\n\t\t\t}\n\t\t}\n\n\t\t// Tidy the temporary table - remove name attributes so there aren't\n\t\t// duplicated in the dom (radio elements for example)\n\t\t$('[name]', tmpTable).removeAttr('name');\n\n\t\t// Table has been built, attach to the document so we can work with it.\n\t\t// A holding element is used, positioned at the top of the container\n\t\t// with minimal height, so it has no effect on if the container scrolls\n\t\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t\t// needed\n\t\tvar holder = $('<div/>').css( scrollX || scrollY ?\n\t\t\t\t{\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\theight: 1,\n\t\t\t\t\tright: 0,\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t} :\n\t\t\t\t{}\n\t\t\t)\n\t\t\t.append( tmpTable )\n\t\t\t.appendTo( tableContainer );\n\n\t\t// When scrolling (X or Y) we want to set the width of the table as \n\t\t// appropriate. However, when not scrolling leave the table width as it\n\t\t// is. This results in slightly different, but I think correct behaviour\n\t\tif ( scrollX && scrollXInner ) {\n\t\t\ttmpTable.width( scrollXInner );\n\t\t}\n\t\telse if ( scrollX ) {\n\t\t\ttmpTable.css( 'width', 'auto' );\n\t\t\ttmpTable.removeAttr('width');\n\n\t\t\t// If there is no width attribute or style, then allow the table to\n\t\t\t// collapse\n\t\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\n\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t}\n\t\t}\n\t\telse if ( scrollY ) {\n\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t}\n\t\telse if ( tableWidthAttr ) {\n\t\t\ttmpTable.width( tableWidthAttr );\n\t\t}\n\n\t\t// Get the width of each column in the constructed table - we need to\n\t\t// know the inner width (so it can be assigned to the other table's\n\t\t// cells) and the outer width so we can calculate the full width of the\n\t\t// table. This is safe since DataTables requires a unique cell for each\n\t\t// column, but if ever a header can span multiple columns, this will\n\t\t// need to be modified.\n\t\tvar total = 0;\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\tvar cell = $(headerCells[i]);\n\t\t\tvar border = cell.outerWidth() - cell.width();\n\n\t\t\t// Use getBounding... where possible (not IE8-) because it can give\n\t\t\t// sub-pixel accuracy, which we then want to round up!\n\t\t\tvar bounding = browser.bBounding ?\n\t\t\t\tMath.ceil( headerCells[i].getBoundingClientRect().width ) :\n\t\t\t\tcell.outerWidth();\n\n\t\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t\t// of the table might not equal the total given here (IE!).\n\t\t\ttotal += bounding;\n\n\t\t\t// Width for each column to use\n\t\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );\n\t\t}\n\n\t\ttable.style.width = _fnStringToCss( total );\n\n\t\t// Finished with the table - ditch it\n\t\tholder.remove();\n\t}\n\n\t// If there is a width attr, we want to attach an event listener which\n\t// allows the table sizing to automatically adjust when the window is\n\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t// CSS is a relative value or absolute - DOM read is always px.\n\tif ( tableWidthAttr ) {\n\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\n\t}\n\n\tif ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {\n\t\tvar bindResize = function () {\n\t\t\t$(window).on('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {\n\t\t\t\t_fnAdjustColumnSizing( oSettings );\n\t\t\t} ) );\n\t\t};\n\n\t\t// IE6/7 will crash if we bind a resize event handler on page load.\n\t\t// To be removed in 1.11 which drops IE6/7 support\n\t\tif ( ie67 ) {\n\t\t\tsetTimeout( bindResize, 1000 );\n\t\t}\n\t\telse {\n\t\t\tbindResize();\n\t\t}\n\n\t\toSettings._reszEvt = true;\n\t}\n}\n\n\n/**\n * Throttle the calls to a function. Arguments and context are maintained for\n * the throttled function\n *  @param {function} fn Function to be called\n *  @param {int} [freq=200] call frequency in mS\n *  @returns {function} wrapped function\n *  @memberof DataTable#oApi\n */\nvar _fnThrottle = DataTable.util.throttle;\n\n\n/**\n * Convert a set of CSS units width to pixels (e.g. 2em)\n *  @param {string[]} widths widths to be converted\n *  @param {node} parent parent to get the with for (required for relative widths) - optional\n *  @returns {int[]} widths in pixels\n *  @memberof DataTable#oApi\n */\nfunction _fnConvertToWidth ( widths, parent )\n{\n\tvar els = [];\n\tvar results = [];\n\n\t// Add the elements in a single loop so we only need to reflow once\n\tfor (var i=0 ; i<widths.length ; i++) {\n\t\tif (widths[i]) {\n\t\t\tels.push(\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.css( 'width', _fnStringToCss( widths[i] ) )\n\t\t\t\t\t.appendTo( parent || document.body )\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\tels.push(null);\n\t\t}\n\t}\n\n\t// Get the sizes (will reflow once)\n\tfor (var i=0 ; i<widths.length ; i++) {\n\t\tresults.push(els[i] ? els[i][0].offsetWidth : null);\n\t}\n\n\t// Tidy\n\t$(els).remove();\n\n\treturn results;\n}\n\n\n/**\n * Get the widest node\n *  @param {object} settings dataTables settings object\n *  @param {int} colIdx column of interest\n *  @returns {node} widest table node\n *  @memberof DataTable#oApi\n */\nfunction _fnGetWidestNode( settings, colIdx )\n{\n\tvar idx = _fnGetMaxLenString( settings, colIdx );\n\tif ( idx < 0 ) {\n\t\treturn null;\n\t}\n\n\tvar data = settings.aoData[ idx ];\n\treturn ! data.nTr ? // Might not have been created when deferred rendering\n\t\t$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :\n\t\tdata.anCells[ colIdx ];\n}\n\n\n/**\n * Get the maximum strlen for each data column\n *  @param {object} settings dataTables settings object\n *  @param {int} colIdx column of interest\n *  @returns {string} max string length for each column\n *  @memberof DataTable#oApi\n */\nfunction _fnGetMaxLenString( settings, colIdx )\n{\n\tvar s, max=-1, maxIdx = -1;\n\n\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\ts = _fnGetCellData( settings, i, colIdx, 'display' )+'';\n\t\ts = s.replace( __re_html_remove, '' );\n\t\ts = s.replace( /&nbsp;/g, ' ' );\n\n\t\tif ( s.length > max ) {\n\t\t\tmax = s.length;\n\t\t\tmaxIdx = i;\n\t\t}\n\t}\n\n\treturn maxIdx;\n}\n\n\n/**\n * Append a CSS unit (only if required) to a string\n *  @param {string} value to css-ify\n *  @returns {string} value with css unit\n *  @memberof DataTable#oApi\n */\nfunction _fnStringToCss( s )\n{\n\tif ( s === null ) {\n\t\treturn '0px';\n\t}\n\n\tif ( typeof s == 'number' ) {\n\t\treturn s < 0 ?\n\t\t\t'0px' :\n\t\t\ts+'px';\n\t}\n\n\t// Check it has a unit character already\n\treturn s.match(/\\d$/) ?\n\t\ts+'px' :\n\t\ts;\n}\n\n\n\nfunction _fnSortFlatten ( settings )\n{\n\tvar\n\t\ti, iLen, k, kLen,\n\t\taSort = [],\n\t\taiOrig = [],\n\t\taoColumns = settings.aoColumns,\n\t\taDataSort, iCol, sType, srcCol,\n\t\tfixed = settings.aaSortingFixed,\n\t\tfixedObj = $.isPlainObject( fixed ),\n\t\tnestedSort = [],\n\t\tadd = function ( a ) {\n\t\t\tif ( a.length && ! Array.isArray( a[0] ) ) {\n\t\t\t\t// 1D array\n\t\t\t\tnestedSort.push( a );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// 2D array\n\t\t\t\t$.merge( nestedSort, a );\n\t\t\t}\n\t\t};\n\n\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t// specified\n\tif ( Array.isArray( fixed ) ) {\n\t\tadd( fixed );\n\t}\n\n\tif ( fixedObj && fixed.pre ) {\n\t\tadd( fixed.pre );\n\t}\n\n\tadd( settings.aaSorting );\n\n\tif (fixedObj && fixed.post ) {\n\t\tadd( fixed.post );\n\t}\n\n\tfor ( i=0 ; i<nestedSort.length ; i++ )\n\t{\n\t\tsrcCol = nestedSort[i][0];\n\t\taDataSort = aoColumns[ srcCol ].aDataSort;\n\n\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t{\n\t\t\tiCol = aDataSort[k];\n\t\t\tsType = aoColumns[ iCol ].sType || 'string';\n\n\t\t\tif ( nestedSort[i]._idx === undefined ) {\n\t\t\t\tnestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );\n\t\t\t}\n\n\t\t\taSort.push( {\n\t\t\t\tsrc:       srcCol,\n\t\t\t\tcol:       iCol,\n\t\t\t\tdir:       nestedSort[i][1],\n\t\t\t\tindex:     nestedSort[i]._idx,\n\t\t\t\ttype:      sType,\n\t\t\t\tformatter: DataTable.ext.type.order[ sType+\"-pre\" ]\n\t\t\t} );\n\t\t}\n\t}\n\n\treturn aSort;\n}\n\n/**\n * Change the order of the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n *  @todo This really needs split up!\n */\nfunction _fnSort ( oSettings )\n{\n\tvar\n\t\ti, ien, iLen, j, jLen, k, kLen,\n\t\tsDataType, nTh,\n\t\taiOrig = [],\n\t\toExtSort = DataTable.ext.type.order,\n\t\taoData = oSettings.aoData,\n\t\taoColumns = oSettings.aoColumns,\n\t\taDataSort, data, iCol, sType, oSort,\n\t\tformatters = 0,\n\t\tsortCol,\n\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\taSort;\n\n\t// Resolve any column types that are unknown due to addition or invalidation\n\t// @todo Can this be moved into a 'data-ready' handler which is called when\n\t//   data is going to be used in the table?\n\t_fnColumnTypes( oSettings );\n\n\taSort = _fnSortFlatten( oSettings );\n\n\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\n\t\tsortCol = aSort[i];\n\n\t\t// Track if we can use the fast sort algorithm\n\t\tif ( sortCol.formatter ) {\n\t\t\tformatters++;\n\t\t}\n\n\t\t// Load the data needed for the sort, for each cell\n\t\t_fnSortData( oSettings, sortCol.col );\n\t}\n\n\t/* No sorting required if server-side or no sorting array */\n\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\n\t{\n\t\t// Create a value - key array of the current row positions such that we can use their\n\t\t// current position during the sort, if values match, in order to perform stable sorting\n\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\n\t\t\taiOrig[ displayMaster[i] ] = i;\n\t\t}\n\n\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t *  fnLocalSorting = function(a,b){\n\t\t *    var iTest;\n\t\t *    iTest = oSort['string-asc']('data11', 'data12');\n\t\t *      if (iTest !== 0)\n\t\t *        return iTest;\n\t\t *    iTest = oSort['numeric-desc']('data21', 'data22');\n\t\t *    if (iTest !== 0)\n\t\t *      return iTest;\n\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t *  }\n\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t * positions in the original data array to provide a stable sort.\n\t\t *\n\t\t * Note - I know it seems excessive to have two sorting methods, but the first is around\n\t\t * 15% faster, so the second is only maintained for backwards compatibility with sorting\n\t\t * methods which do not have a pre-sort formatting function.\n\t\t */\n\t\tif ( formatters === aSort.length ) {\n\t\t\t// All sort types have formatting functions\n\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\tvar\n\t\t\t\t\tx, y, k, test, sort,\n\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\tdataB = aoData[b]._aSortData;\n\n\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\tsort = aSort[k];\n\n\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\ty = dataB[ sort.col ];\n\n\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tx = aiOrig[a];\n\t\t\t\ty = aiOrig[b];\n\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t} );\n\t\t}\n\t\telse {\n\t\t\t// Depreciated - remove in 1.11 (providing a plug-in option)\n\t\t\t// Not all sort types have formatting methods, so we have to call their sorting\n\t\t\t// methods.\n\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\tvar\n\t\t\t\t\tx, y, k, l, test, sort, fn,\n\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\tdataB = aoData[b]._aSortData;\n\n\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\tsort = aSort[k];\n\n\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\ty = dataB[ sort.col ];\n\n\t\t\t\t\tfn = oExtSort[ sort.type+\"-\"+sort.dir ] || oExtSort[ \"string-\"+sort.dir ];\n\t\t\t\t\ttest = fn( x, y );\n\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\treturn test;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tx = aiOrig[a];\n\t\t\t\ty = aiOrig[b];\n\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t} );\n\t\t}\n\t}\n\n\t/* Tell the draw function that we have sorted the data */\n\toSettings.bSorted = true;\n}\n\n\nfunction _fnSortAria ( settings )\n{\n\tvar label;\n\tvar nextSort;\n\tvar columns = settings.aoColumns;\n\tvar aSort = _fnSortFlatten( settings );\n\tvar oAria = settings.oLanguage.oAria;\n\n\t// ARIA attributes - need to loop all columns, to update all (removing old\n\t// attributes as needed)\n\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t{\n\t\tvar col = columns[i];\n\t\tvar asSorting = col.asSorting;\n\t\tvar sTitle = col.ariaTitle || col.sTitle.replace( /<.*?>/g, \"\" );\n\t\tvar th = col.nTh;\n\n\t\t// IE7 is throwing an error when setting these properties with jQuery's\n\t\t// attr() and removeAttr() methods...\n\t\tth.removeAttribute('aria-sort');\n\n\t\t/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n\t\tif ( col.bSortable ) {\n\t\t\tif ( aSort.length > 0 && aSort[0].col == i ) {\n\t\t\t\tth.setAttribute('aria-sort', aSort[0].dir==\"asc\" ? \"ascending\" : \"descending\" );\n\t\t\t\tnextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnextSort = asSorting[0];\n\t\t\t}\n\n\t\t\tlabel = sTitle + ( nextSort === \"asc\" ?\n\t\t\t\toAria.sSortAscending :\n\t\t\t\toAria.sSortDescending\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\tlabel = sTitle;\n\t\t}\n\n\t\tth.setAttribute('aria-label', label);\n\t}\n}\n\n\n/**\n * Function to run on user sort request\n *  @param {object} settings dataTables settings object\n *  @param {node} attachTo node to attach the handler to\n *  @param {int} colIdx column sorting index\n *  @param {boolean} [append=false] Append the requested sort to the existing\n *    sort if true (i.e. multi-column sort)\n *  @param {function} [callback] callback function\n *  @memberof DataTable#oApi\n */\nfunction _fnSortListener ( settings, colIdx, append, callback )\n{\n\tvar col = settings.aoColumns[ colIdx ];\n\tvar sorting = settings.aaSorting;\n\tvar asSorting = col.asSorting;\n\tvar nextSortIdx;\n\tvar next = function ( a, overflow ) {\n\t\tvar idx = a._idx;\n\t\tif ( idx === undefined ) {\n\t\t\tidx = $.inArray( a[1], asSorting );\n\t\t}\n\n\t\treturn idx+1 < asSorting.length ?\n\t\t\tidx+1 :\n\t\t\toverflow ?\n\t\t\t\tnull :\n\t\t\t\t0;\n\t};\n\n\t// Convert to 2D array if needed\n\tif ( typeof sorting[0] === 'number' ) {\n\t\tsorting = settings.aaSorting = [ sorting ];\n\t}\n\n\t// If appending the sort then we are multi-column sorting\n\tif ( append && settings.oFeatures.bSortMulti ) {\n\t\t// Are we already doing some kind of sort on this column?\n\t\tvar sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );\n\n\t\tif ( sortIdx !== -1 ) {\n\t\t\t// Yes, modify the sort\n\t\t\tnextSortIdx = next( sorting[sortIdx], true );\n\n\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\n\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\n\t\t\t}\n\n\t\t\tif ( nextSortIdx === null ) {\n\t\t\t\tsorting.splice( sortIdx, 1 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\n\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// No sort on this column yet\n\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\n\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t}\n\t}\n\telse if ( sorting.length && sorting[0][0] == colIdx ) {\n\t\t// Single column - already sorting on this column, modify the sort\n\t\tnextSortIdx = next( sorting[0] );\n\n\t\tsorting.length = 1;\n\t\tsorting[0][1] = asSorting[ nextSortIdx ];\n\t\tsorting[0]._idx = nextSortIdx;\n\t}\n\telse {\n\t\t// Single column - sort only on this column\n\t\tsorting.length = 0;\n\t\tsorting.push( [ colIdx, asSorting[0] ] );\n\t\tsorting[0]._idx = 0;\n\t}\n\n\t// Run the sort by calling a full redraw\n\t_fnReDraw( settings );\n\n\t// callback used for async user interaction\n\tif ( typeof callback == 'function' ) {\n\t\tcallback( settings );\n\t}\n}\n\n\n/**\n * Attach a sort handler (click) to a node\n *  @param {object} settings dataTables settings object\n *  @param {node} attachTo node to attach the handler to\n *  @param {int} colIdx column sorting index\n *  @param {function} [callback] callback function\n *  @memberof DataTable#oApi\n */\nfunction _fnSortAttachListener ( settings, attachTo, colIdx, callback )\n{\n\tvar col = settings.aoColumns[ colIdx ];\n\n\t_fnBindAction( attachTo, {}, function (e) {\n\t\t/* If the column is not sortable - don't to anything */\n\t\tif ( col.bSortable === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If processing is enabled use a timeout to allow the processing\n\t\t// display to be shown - otherwise to it synchronously\n\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t_fnProcessingDisplay( settings, true );\n\n\t\t\tsetTimeout( function() {\n\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\n\t\t\t\t// In server-side processing, the draw callback will remove the\n\t\t\t\t// processing display\n\t\t\t\tif ( _fnDataSource( settings ) !== 'ssp' ) {\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t}\n\t\t\t}, 0 );\n\t\t}\n\t\telse {\n\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\t}\n\t} );\n}\n\n\n/**\n * Set the sorting classes on table's body, Note: it is safe to call this function\n * when bSort and bSortClasses are false\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSortingClasses( settings )\n{\n\tvar oldSort = settings.aLastSort;\n\tvar sortClass = settings.oClasses.sSortColumn;\n\tvar sort = _fnSortFlatten( settings );\n\tvar features = settings.oFeatures;\n\tvar i, ien, colIdx;\n\n\tif ( features.bSort && features.bSortClasses ) {\n\t\t// Remove old sorting classes\n\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\n\t\t\tcolIdx = oldSort[i].src;\n\n\t\t\t// Remove column sorting\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t}\n\n\t\t// Add new column sorting\n\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\tcolIdx = sort[i].src;\n\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t}\n\t}\n\n\tsettings.aLastSort = sort;\n}\n\n\n// Get the data to sort a column, be it from cache, fresh (populating the\n// cache), or from a sort formatter\nfunction _fnSortData( settings, idx )\n{\n\t// Custom sorting function - provided by the sort data type\n\tvar column = settings.aoColumns[ idx ];\n\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\n\tvar customData;\n\n\tif ( customSort ) {\n\t\tcustomData = customSort.call( settings.oInstance, settings, idx,\n\t\t\t_fnColumnIndexToVisible( settings, idx )\n\t\t);\n\t}\n\n\t// Use / populate cache\n\tvar row, cellData;\n\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\n\n\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\trow = settings.aoData[i];\n\n\t\tif ( ! row._aSortData ) {\n\t\t\trow._aSortData = [];\n\t\t}\n\n\t\tif ( ! row._aSortData[idx] || customSort ) {\n\t\t\tcellData = customSort ?\n\t\t\t\tcustomData[i] : // If there was a custom sort function, use data from there\n\t\t\t\t_fnGetCellData( settings, i, idx, 'sort' );\n\n\t\t\trow._aSortData[ idx ] = formatter ?\n\t\t\t\tformatter( cellData ) :\n\t\t\t\tcellData;\n\t\t}\n\t}\n}\n\n\n\n/**\n * Save the state of a table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSaveState ( settings )\n{\n\tif (settings._bLoadingState) {\n\t\treturn;\n\t}\n\n\t/* Store the interesting variables */\n\tvar state = {\n\t\ttime:    +new Date(),\n\t\tstart:   settings._iDisplayStart,\n\t\tlength:  settings._iDisplayLength,\n\t\torder:   $.extend( true, [], settings.aaSorting ),\n\t\tsearch:  _fnSearchToCamel( settings.oPreviousSearch ),\n\t\tcolumns: $.map( settings.aoColumns, function ( col, i ) {\n\t\t\treturn {\n\t\t\t\tvisible: col.bVisible,\n\t\t\t\tsearch: _fnSearchToCamel( settings.aoPreSearchCols[i] )\n\t\t\t};\n\t\t} )\n\t};\n\n\tsettings.oSavedState = state;\n\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\n\t\n\tif ( settings.oFeatures.bStateSave && !settings.bDestroying )\n\t{\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\n\t}\t\n}\n\n\n/**\n * Attempt to load a saved table state\n *  @param {object} oSettings dataTables settings object\n *  @param {object} oInit DataTables init object so we can override settings\n *  @param {function} callback Callback to execute when the state has been loaded\n *  @memberof DataTable#oApi\n */\nfunction _fnLoadState ( settings, oInit, callback )\n{\n\tif ( ! settings.oFeatures.bStateSave ) {\n\t\tcallback();\n\t\treturn;\n\t}\n\n\tvar loaded = function(state) {\n\t\t_fnImplementState(settings, state, callback);\n\t}\n\n\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\n\n\tif ( state !== undefined ) {\n\t\t_fnImplementState( settings, state, callback );\n\t}\n\t// otherwise, wait for the loaded callback to be executed\n\n\treturn true;\n}\n\nfunction _fnImplementState ( settings, s, callback) {\n\tvar i, ien;\n\tvar columns = settings.aoColumns;\n\tsettings._bLoadingState = true;\n\n\t// When StateRestore was introduced the state could now be implemented at any time\n\t// Not just initialisation. To do this an api instance is required in some places\n\tvar api = settings._bInitComplete ? new DataTable.Api(settings) : null;\n\n\tif ( ! s || ! s.time ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Allow custom and plug-in manipulation functions to alter the saved data set and\n\t// cancelling of loading by returning false\n\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\n\tif ( $.inArray( false, abStateLoad ) !== -1 ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Reject old data\n\tvar duration = settings.iStateDuration;\n\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Number of columns have changed - all bets are off, no restore of settings\n\tif ( s.columns && columns.length !== s.columns.length ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Store the saved state so it might be accessed at any time\n\tsettings.oLoadedState = $.extend( true, {}, s );\n\n\t// Page Length\n\tif ( s.length !== undefined ) {\n\t\t// If already initialised just set the value directly so that the select element is also updated\n\t\tif (api) {\n\t\t\tapi.page.len(s.length)\n\t\t}\n\t\telse {\n\t\t\tsettings._iDisplayLength   = s.length;\n\t\t}\n\t}\n\n\t// Restore key features - todo - for 1.11 this needs to be done by\n\t// subscribed events\n\tif ( s.start !== undefined ) {\n\t\tif(api === null) {\n\t\t\tsettings._iDisplayStart    = s.start;\n\t\t\tsettings.iInitDisplayStart = s.start;\n\t\t}\n\t\telse {\n\t\t\t_fnPageChange(settings, s.start/settings._iDisplayLength);\n\t\t}\n\t}\n\n\t// Order\n\tif ( s.order !== undefined ) {\n\t\tsettings.aaSorting = [];\n\t\t$.each( s.order, function ( i, col ) {\n\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\n\t\t\t\t[ 0, col[1] ] :\n\t\t\t\tcol\n\t\t\t);\n\t\t} );\n\t}\n\n\t// Search\n\tif ( s.search !== undefined ) {\n\t\t$.extend( settings.oPreviousSearch, _fnSearchToHung( s.search ) );\n\t}\n\n\t// Columns\n\tif ( s.columns ) {\n\t\tfor ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\n\t\t\tvar col = s.columns[i];\n\n\t\t\t// Visibility\n\t\t\tif ( col.visible !== undefined ) {\n\t\t\t\t// If the api is defined, the table has been initialised so we need to use it rather than internal settings\n\t\t\t\tif (api) {\n\t\t\t\t\t// Don't redraw the columns on every iteration of this loop, we will do this at the end instead\n\t\t\t\t\tapi.column(i).visible(col.visible, false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Search\n\t\t\tif ( col.search !== undefined ) {\n\t\t\t\t$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );\n\t\t\t}\n\t\t}\n\t\t\n\t\t// If the api is defined then we need to adjust the columns once the visibility has been changed\n\t\tif (api) {\n\t\t\tapi.columns.adjust();\n\t\t}\n\t}\n\n\tsettings._bLoadingState = false;\n\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\n\tcallback();\n};\n\n\n/**\n * Return the settings object for a particular table\n *  @param {node} table table we are using as a dataTable\n *  @returns {object} Settings object - or null if not found\n *  @memberof DataTable#oApi\n */\nfunction _fnSettingsFromNode ( table )\n{\n\tvar settings = DataTable.settings;\n\tvar idx = $.inArray( table, _pluck( settings, 'nTable' ) );\n\n\treturn idx !== -1 ?\n\t\tsettings[ idx ] :\n\t\tnull;\n}\n\n\n/**\n * Log an error message\n *  @param {object} settings dataTables settings object\n *  @param {int} level log error messages, or display them to the user\n *  @param {string} msg error message\n *  @param {int} tn Technical note id to get more information about the error.\n *  @memberof DataTable#oApi\n */\nfunction _fnLog( settings, level, msg, tn )\n{\n\tmsg = 'DataTables warning: '+\n\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\n\n\tif ( tn ) {\n\t\tmsg += '. For more information about this error, please see '+\n\t\t'https://datatables.net/tn/'+tn;\n\t}\n\n\tif ( ! level  ) {\n\t\t// Backwards compatibility pre 1.10\n\t\tvar ext = DataTable.ext;\n\t\tvar type = ext.sErrMode || ext.errMode;\n\n\t\tif ( settings ) {\n\t\t\t_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );\n\t\t}\n\n\t\tif ( type == 'alert' ) {\n\t\t\talert( msg );\n\t\t}\n\t\telse if ( type == 'throw' ) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\t\telse if ( typeof type == 'function' ) {\n\t\t\ttype( settings, tn, msg );\n\t\t}\n\t}\n\telse if ( window.console && console.log ) {\n\t\tconsole.log( msg );\n\t}\n}\n\n\n/**\n * See if a property is defined on one object, if so assign it to the other object\n *  @param {object} ret target object\n *  @param {object} src source object\n *  @param {string} name property\n *  @param {string} [mappedName] name to map too - optional, name used if not given\n *  @memberof DataTable#oApi\n */\nfunction _fnMap( ret, src, name, mappedName )\n{\n\tif ( Array.isArray( name ) ) {\n\t\t$.each( name, function (i, val) {\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t_fnMap( ret, src, val[0], val[1] );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnMap( ret, src, val );\n\t\t\t}\n\t\t} );\n\n\t\treturn;\n\t}\n\n\tif ( mappedName === undefined ) {\n\t\tmappedName = name;\n\t}\n\n\tif ( src[name] !== undefined ) {\n\t\tret[mappedName] = src[name];\n\t}\n}\n\n\n/**\n * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n * shallow copy arrays. The reason we need to do this, is that we don't want to\n * deep copy array init values (such as aaSorting) since the dev wouldn't be\n * able to override them, but we do want to deep copy arrays.\n *  @param {object} out Object to extend\n *  @param {object} extender Object from which the properties will be applied to\n *      out\n *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n *      independent copy with the exception of the `data` or `aaData` parameters\n *      if they are present. This is so you can pass in a collection to\n *      DataTables and have that used as your data source without breaking the\n *      references\n *  @returns {object} out Reference, just for convenience - out === the return.\n *  @memberof DataTable#oApi\n *  @todo This doesn't take account of arrays inside the deep copied objects.\n */\nfunction _fnExtend( out, extender, breakRefs )\n{\n\tvar val;\n\n\tfor ( var prop in extender ) {\n\t\tif ( extender.hasOwnProperty(prop) ) {\n\t\t\tval = extender[prop];\n\n\t\t\tif ( $.isPlainObject( val ) ) {\n\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\n\t\t\t\t\tout[prop] = {};\n\t\t\t\t}\n\t\t\t\t$.extend( true, out[prop], val );\n\t\t\t}\n\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val) ) {\n\t\t\t\tout[prop] = val.slice();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tout[prop] = val;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n}\n\n\n/**\n * Bind an event handers to allow a click or return key to activate the callback.\n * This is good for accessibility since a return on the keyboard will have the\n * same effect as a click, if the element has focus.\n *  @param {element} n Element to bind the action to\n *  @param {object} oData Data object to pass to the triggered function\n *  @param {function} fn Callback function for when the event is triggered\n *  @memberof DataTable#oApi\n */\nfunction _fnBindAction( n, oData, fn )\n{\n\t$(n)\n\t\t.on( 'click.DT', oData, function (e) {\n\t\t\t\t$(n).trigger('blur'); // Remove focus outline for mouse users\n\t\t\t\tfn(e);\n\t\t\t} )\n\t\t.on( 'keypress.DT', oData, function (e){\n\t\t\t\tif ( e.which === 13 ) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tfn(e);\n\t\t\t\t}\n\t\t\t} )\n\t\t.on( 'selectstart.DT', function () {\n\t\t\t\t/* Take the brutal approach to cancelling text selection */\n\t\t\t\treturn false;\n\t\t\t} );\n}\n\n\n/**\n * Register a callback function. Easily allows a callback function to be added to\n * an array store of callback functions that can then all be called together.\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n *  @param {function} fn Function to be called back\n *  @param {string} sName Identifying name for the callback (i.e. a label)\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackReg( oSettings, sStore, fn, sName )\n{\n\tif ( fn )\n\t{\n\t\toSettings[sStore].push( {\n\t\t\t\"fn\": fn,\n\t\t\t\"sName\": sName\n\t\t} );\n\t}\n}\n\n\n/**\n * Fire callback functions and trigger events. Note that the loop over the\n * callback array store is done backwards! Further note that you do not want to\n * fire off triggers in time sensitive applications (for example cell creation)\n * as its slow.\n *  @param {object} settings dataTables settings object\n *  @param {string} callbackArr Name of the array storage for the callbacks in\n *      oSettings\n *  @param {string} eventName Name of the jQuery custom event to trigger. If\n *      null no trigger is fired\n *  @param {array} args Array of arguments to pass to the callback function /\n *      trigger\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackFire( settings, callbackArr, eventName, args )\n{\n\tvar ret = [];\n\n\tif ( callbackArr ) {\n\t\tret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {\n\t\t\treturn val.fn.apply( settings.oInstance, args );\n\t\t} );\n\t}\n\n\tif ( eventName !== null ) {\n\t\tvar e = $.Event( eventName+'.dt' );\n\t\tvar table = $(settings.nTable);\n\n\t\ttable.trigger( e, args );\n\n\t\t// If not yet attached to the document, trigger the event\n\t\t// on the body directly to sort of simulate the bubble\n\t\tif (table.parents('body').length === 0) {\n\t\t\t$('body').trigger( e, args );\n\t\t}\n\n\t\tret.push( e.result );\n\t}\n\n\treturn ret;\n}\n\n\nfunction _fnLengthOverflow ( settings )\n{\n\tvar\n\t\tstart = settings._iDisplayStart,\n\t\tend = settings.fnDisplayEnd(),\n\t\tlen = settings._iDisplayLength;\n\n\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\tif ( start >= end )\n\t{\n\t\tstart = end - len;\n\t}\n\n\t// Keep the start record on the current page\n\tstart -= (start % len);\n\n\tif ( len === -1 || start < 0 )\n\t{\n\t\tstart = 0;\n\t}\n\n\tsettings._iDisplayStart = start;\n}\n\n\nfunction _fnRenderer( settings, type )\n{\n\tvar renderer = settings.renderer;\n\tvar host = DataTable.ext.renderer[type];\n\n\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\n\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t// the default.\n\t\treturn host[renderer[type]] || host._;\n\t}\n\telse if ( typeof renderer === 'string' ) {\n\t\t// Common renderer - if there is one available for this type use it,\n\t\t// otherwise use the default\n\t\treturn host[renderer] || host._;\n\t}\n\n\t// Use the default\n\treturn host._;\n}\n\n\n/**\n * Detect the data source being used for the table. Used to simplify the code\n * a little (ajax) and to make it compress a little smaller.\n *\n *  @param {object} settings dataTables settings object\n *  @returns {string} Data source\n *  @memberof DataTable#oApi\n */\nfunction _fnDataSource ( settings )\n{\n\tif ( settings.oFeatures.bServerSide ) {\n\t\treturn 'ssp';\n\t}\n\telse if ( settings.ajax || settings.sAjaxSource ) {\n\t\treturn 'ajax';\n\t}\n\treturn 'dom';\n}\n\n\n\n\n/**\n * Computed structure of the DataTables API, defined by the options passed to\n * `DataTable.Api.register()` when building the API.\n *\n * The structure is built in order to speed creation and extension of the Api\n * objects since the extensions are effectively pre-parsed.\n *\n * The array is an array of objects with the following structure, where this\n * base array represents the Api prototype base:\n *\n *     [\n *       {\n *         name:      'data'                -- string   - Property name\n *         val:       function () {},       -- function - Api method (or undefined if just an object\n *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n *       },\n *       {\n *         name:     'row'\n *         val:       {},\n *         methodExt: [ ... ],\n *         propExt:   [\n *           {\n *             name:      'data'\n *             val:       function () {},\n *             methodExt: [ ... ],\n *             propExt:   [ ... ]\n *           },\n *           ...\n *         ]\n *       }\n *     ]\n *\n * @type {Array}\n * @ignore\n */\nvar __apiStruct = [];\n\n\n/**\n * `Array.prototype` reference.\n *\n * @type object\n * @ignore\n */\nvar __arrayProto = Array.prototype;\n\n\n/**\n * Abstraction for `context` parameter of the `Api` constructor to allow it to\n * take several different forms for ease of use.\n *\n * Each of the input parameter types will be converted to a DataTables settings\n * object where possible.\n *\n * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n *   of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n *   * `DataTables.Api` - API instance\n * @return {array|null} Matching DataTables settings objects. `null` or\n *   `undefined` is returned if no matching DataTable is found.\n * @ignore\n */\nvar _toSettings = function ( mixed )\n{\n\tvar idx, jq;\n\tvar settings = DataTable.settings;\n\tvar tables = $.map( settings, function (el, i) {\n\t\treturn el.nTable;\n\t} );\n\n\tif ( ! mixed ) {\n\t\treturn [];\n\t}\n\telse if ( mixed.nTable && mixed.oApi ) {\n\t\t// DataTables settings object\n\t\treturn [ mixed ];\n\t}\n\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\n\t\t// Table node\n\t\tidx = $.inArray( mixed, tables );\n\t\treturn idx !== -1 ? [ settings[idx] ] : null;\n\t}\n\telse if ( mixed && typeof mixed.settings === 'function' ) {\n\t\treturn mixed.settings().toArray();\n\t}\n\telse if ( typeof mixed === 'string' ) {\n\t\t// jQuery selector\n\t\tjq = $(mixed);\n\t}\n\telse if ( mixed instanceof $ ) {\n\t\t// jQuery object (also DataTables instance)\n\t\tjq = mixed;\n\t}\n\n\tif ( jq ) {\n\t\treturn jq.map( function(i) {\n\t\t\tidx = $.inArray( this, tables );\n\t\t\treturn idx !== -1 ? settings[idx] : null;\n\t\t} ).toArray();\n\t}\n};\n\n\n/**\n * DataTables API class - used to control and interface with  one or more\n * DataTables enhanced tables.\n *\n * The API class is heavily based on jQuery, presenting a chainable interface\n * that you can use to interact with tables. Each instance of the API class has\n * a \"context\" - i.e. the tables that it will operate on. This could be a single\n * table, all tables on a page or a sub-set thereof.\n *\n * Additionally the API is designed to allow you to easily work with the data in\n * the tables, retrieving and manipulating it as required. This is done by\n * presenting the API class as an array like interface. The contents of the\n * array depend upon the actions requested by each method (for example\n * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n * return an array of objects or arrays depending upon your table's\n * configuration). The API object has a number of array like methods (`push`,\n * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n * `unique` etc) to assist your working with the data held in a table.\n *\n * Most methods (those which return an Api instance) are chainable, which means\n * the return from a method call also has all of the methods available that the\n * top level object had. For example, these two calls are equivalent:\n *\n *     // Not chained\n *     api.row.add( {...} );\n *     api.draw();\n *\n *     // Chained\n *     api.row.add( {...} ).draw();\n *\n * @class DataTable.Api\n * @param {array|object|string|jQuery} context DataTable identifier. This is\n *   used to define which DataTables enhanced tables this API will operate on.\n *   Can be one of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n * @param {array} [data] Data to initialise the Api instance with.\n *\n * @example\n *   // Direct initialisation during DataTables construction\n *   var api = $('#example').DataTable();\n *\n * @example\n *   // Initialisation using a DataTables jQuery object\n *   var api = $('#example').dataTable().api();\n *\n * @example\n *   // Initialisation as a constructor\n *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n */\n_Api = function ( context, data )\n{\n\tif ( ! (this instanceof _Api) ) {\n\t\treturn new _Api( context, data );\n\t}\n\n\tvar settings = [];\n\tvar ctxSettings = function ( o ) {\n\t\tvar a = _toSettings( o );\n\t\tif ( a ) {\n\t\t\tsettings.push.apply( settings, a );\n\t\t}\n\t};\n\n\tif ( Array.isArray( context ) ) {\n\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tctxSettings( context[i] );\n\t\t}\n\t}\n\telse {\n\t\tctxSettings( context );\n\t}\n\n\t// Remove duplicates\n\tthis.context = _unique( settings );\n\n\t// Initial data\n\tif ( data ) {\n\t\t$.merge( this, data );\n\t}\n\n\t// selector\n\tthis.selector = {\n\t\trows: null,\n\t\tcols: null,\n\t\topts: null\n\t};\n\n\t_Api.extend( this, this, __apiStruct );\n};\n\nDataTable.Api = _Api;\n\n// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n// isPlainObject.\n$.extend( _Api.prototype, {\n\tany: function ()\n\t{\n\t\treturn this.count() !== 0;\n\t},\n\n\n\tconcat:  __arrayProto.concat,\n\n\n\tcontext: [], // array of table settings objects\n\n\n\tcount: function ()\n\t{\n\t\treturn this.flatten().length;\n\t},\n\n\n\teach: function ( fn )\n\t{\n\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\n\t\t\tfn.call( this, this[i], i, this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\n\teq: function ( idx )\n\t{\n\t\tvar ctx = this.context;\n\n\t\treturn ctx.length > idx ?\n\t\t\tnew _Api( ctx[idx], this[idx] ) :\n\t\t\tnull;\n\t},\n\n\n\tfilter: function ( fn )\n\t{\n\t\tvar a = [];\n\n\t\tif ( __arrayProto.filter ) {\n\t\t\ta = __arrayProto.filter.call( this, fn, this );\n\t\t}\n\t\telse {\n\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\tif ( fn.call( this, this[i], i, this ) ) {\n\t\t\t\t\ta.push( this[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn new _Api( this.context, a );\n\t},\n\n\n\tflatten: function ()\n\t{\n\t\tvar a = [];\n\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\n\t},\n\n\n\tjoin:    __arrayProto.join,\n\n\n\tindexOf: __arrayProto.indexOf || function (obj, start)\n\t{\n\t\tfor ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {\n\t\t\tif ( this[i] === obj ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\titerator: function ( flatten, type, fn, alwaysNew ) {\n\t\tvar\n\t\t\ta = [], ret,\n\t\t\ti, ien, j, jen,\n\t\t\tcontext = this.context,\n\t\t\trows, items, item,\n\t\t\tselector = this.selector;\n\n\t\t// Argument shifting\n\t\tif ( typeof flatten === 'string' ) {\n\t\t\talwaysNew = fn;\n\t\t\tfn = type;\n\t\t\ttype = flatten;\n\t\t\tflatten = false;\n\t\t}\n\n\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tvar apiInst = new _Api( context[i] );\n\n\t\t\tif ( type === 'table' ) {\n\t\t\t\tret = fn.call( apiInst, context[i], i );\n\n\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\ta.push( ret );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( type === 'columns' || type === 'rows' ) {\n\t\t\t\t// this has same length as context - one entry for each table\n\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\n\n\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\ta.push( ret );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\n\t\t\t\t// columns and rows share the same structure.\n\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\titems = this[i];\n\n\t\t\t\tif ( type === 'column-rows' ) {\n\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\n\t\t\t\t}\n\n\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\n\t\t\t\t\titem = items[j];\n\n\t\t\t\t\tif ( type === 'cell' ) {\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( a.length || alwaysNew ) {\n\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\n\t\t\tvar apiSelector = api.selector;\n\t\t\tapiSelector.rows = selector.rows;\n\t\t\tapiSelector.cols = selector.cols;\n\t\t\tapiSelector.opts = selector.opts;\n\t\t\treturn api;\n\t\t}\n\t\treturn this;\n\t},\n\n\n\tlastIndexOf: __arrayProto.lastIndexOf || function (obj, start)\n\t{\n\t\t// Bit cheeky...\n\t\treturn this.indexOf.apply( this.toArray.reverse(), arguments );\n\t},\n\n\n\tlength:  0,\n\n\n\tmap: function ( fn )\n\t{\n\t\tvar a = [];\n\n\t\tif ( __arrayProto.map ) {\n\t\t\ta = __arrayProto.map.call( this, fn, this );\n\t\t}\n\t\telse {\n\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\ta.push( fn.call( this, this[i], i ) );\n\t\t\t}\n\t\t}\n\n\t\treturn new _Api( this.context, a );\n\t},\n\n\n\tpluck: function ( prop )\n\t{\n\t\tvar fn = DataTable.util.get(prop);\n\n\t\treturn this.map( function ( el ) {\n\t\t\treturn fn(el);\n\t\t} );\n\t},\n\n\tpop:     __arrayProto.pop,\n\n\n\tpush:    __arrayProto.push,\n\n\n\t// Does not return an API instance\n\treduce: __arrayProto.reduce || function ( fn, init )\n\t{\n\t\treturn _fnReduce( this, fn, init, 0, this.length, 1 );\n\t},\n\n\n\treduceRight: __arrayProto.reduceRight || function ( fn, init )\n\t{\n\t\treturn _fnReduce( this, fn, init, this.length-1, -1, -1 );\n\t},\n\n\n\treverse: __arrayProto.reverse,\n\n\n\t// Object with rows, columns and opts\n\tselector: null,\n\n\n\tshift:   __arrayProto.shift,\n\n\n\tslice: function () {\n\t\treturn new _Api( this.context, this );\n\t},\n\n\n\tsort:    __arrayProto.sort, // ? name - order?\n\n\n\tsplice:  __arrayProto.splice,\n\n\n\ttoArray: function ()\n\t{\n\t\treturn __arrayProto.slice.call( this );\n\t},\n\n\n\tto$: function ()\n\t{\n\t\treturn $( this );\n\t},\n\n\n\ttoJQuery: function ()\n\t{\n\t\treturn $( this );\n\t},\n\n\n\tunique: function ()\n\t{\n\t\treturn new _Api( this.context, _unique(this) );\n\t},\n\n\n\tunshift: __arrayProto.unshift\n} );\n\n\n_Api.extend = function ( scope, obj, ext )\n{\n\t// Only extend API instances and static properties of the API\n\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\n\t\treturn;\n\t}\n\n\tvar\n\t\ti, ien,\n\t\tstruct,\n\t\tmethodScoping = function ( scope, fn, struc ) {\n\t\t\treturn function () {\n\t\t\t\tvar ret = fn.apply( scope, arguments );\n\n\t\t\t\t// Method extension\n\t\t\t\t_Api.extend( ret, ret, struc.methodExt );\n\t\t\t\treturn ret;\n\t\t\t};\n\t\t};\n\n\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\tstruct = ext[i];\n\n\t\t// Value\n\t\tobj[ struct.name ] = struct.type === 'function' ?\n\t\t\tmethodScoping( scope, struct.val, struct ) :\n\t\t\tstruct.type === 'object' ?\n\t\t\t\t{} :\n\t\t\t\tstruct.val;\n\n\t\tobj[ struct.name ].__dt_wrapper = true;\n\n\t\t// Property extension\n\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\n\t}\n};\n\n\n// @todo - Is there need for an augment function?\n// _Api.augment = function ( inst, name )\n// {\n// \t// Find src object in the structure from the name\n// \tvar parts = name.split('.');\n\n// \t_Api.extend( inst, obj );\n// };\n\n\n//     [\n//       {\n//         name:      'data'                -- string   - Property name\n//         val:       function () {},       -- function - Api method (or undefined if just an object\n//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n//       },\n//       {\n//         name:     'row'\n//         val:       {},\n//         methodExt: [ ... ],\n//         propExt:   [\n//           {\n//             name:      'data'\n//             val:       function () {},\n//             methodExt: [ ... ],\n//             propExt:   [ ... ]\n//           },\n//           ...\n//         ]\n//       }\n//     ]\n\n_Api.register = _api_register = function ( name, val )\n{\n\tif ( Array.isArray( name ) ) {\n\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\n\t\t\t_Api.register( name[j], val );\n\t\t}\n\t\treturn;\n\t}\n\n\tvar\n\t\ti, ien,\n\t\their = name.split('.'),\n\t\tstruct = __apiStruct,\n\t\tkey, method;\n\n\tvar find = function ( src, name ) {\n\t\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\n\t\t\tif ( src[i].name === name ) {\n\t\t\t\treturn src[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\n\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\tkey = method ?\n\t\t\their[i].replace('()', '') :\n\t\t\their[i];\n\n\t\tvar src = find( struct, key );\n\t\tif ( ! src ) {\n\t\t\tsrc = {\n\t\t\t\tname:      key,\n\t\t\t\tval:       {},\n\t\t\t\tmethodExt: [],\n\t\t\t\tpropExt:   [],\n\t\t\t\ttype:      'object'\n\t\t\t};\n\t\t\tstruct.push( src );\n\t\t}\n\n\t\tif ( i === ien-1 ) {\n\t\t\tsrc.val = val;\n\t\t\tsrc.type = typeof val === 'function' ?\n\t\t\t\t'function' :\n\t\t\t\t$.isPlainObject( val ) ?\n\t\t\t\t\t'object' :\n\t\t\t\t\t'other';\n\t\t}\n\t\telse {\n\t\t\tstruct = method ?\n\t\t\t\tsrc.methodExt :\n\t\t\t\tsrc.propExt;\n\t\t}\n\t}\n};\n\n_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\n\t_Api.register( pluralName, val );\n\n\t_Api.register( singularName, function () {\n\t\tvar ret = val.apply( this, arguments );\n\n\t\tif ( ret === this ) {\n\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\treturn this;\n\t\t}\n\t\telse if ( ret instanceof _Api ) {\n\t\t\t// New API instance returned, want the value from the first item\n\t\t\t// in the returned array for the singular result.\n\t\t\treturn ret.length ?\n\t\t\t\tArray.isArray( ret[0] ) ?\n\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\n\t\t\t\t\tret[0] :\n\t\t\t\tundefined;\n\t\t}\n\n\t\t// Non-API return - just fire it back\n\t\treturn ret;\n\t} );\n};\n\n\n/**\n * Selector for HTML tables. Apply the given selector to the give array of\n * DataTables settings objects.\n *\n * @param {string|integer} [selector] jQuery selector string or integer\n * @param  {array} Array of DataTables settings objects to be filtered\n * @return {array}\n * @ignore\n */\nvar __table_selector = function ( selector, a )\n{\n\tif ( Array.isArray(selector) ) {\n\t\treturn $.map( selector, function (item) {\n\t\t\treturn __table_selector(item, a);\n\t\t} );\n\t}\n\n\t// Integer is used to pick out a table by index\n\tif ( typeof selector === 'number' ) {\n\t\treturn [ a[ selector ] ];\n\t}\n\n\t// Perform a jQuery selector on the table nodes\n\tvar nodes = $.map( a, function (el, i) {\n\t\treturn el.nTable;\n\t} );\n\n\treturn $(nodes)\n\t\t.filter( selector )\n\t\t.map( function (i) {\n\t\t\t// Need to translate back from the table node to the settings\n\t\t\tvar idx = $.inArray( this, nodes );\n\t\t\treturn a[ idx ];\n\t\t} )\n\t\t.toArray();\n};\n\n\n\n/**\n * Context selector for the API's context (i.e. the tables the API instance\n * refers to.\n *\n * @name    DataTable.Api#tables\n * @param {string|integer} [selector] Selector to pick which tables the iterator\n *   should operate on. If not given, all tables in the current context are\n *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n *   select multiple tables or as an integer to select a single table.\n * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n */\n_api_register( 'tables()', function ( selector ) {\n\t// A new instance is created if there was a selector specified\n\treturn selector !== undefined && selector !== null ?\n\t\tnew _Api( __table_selector( selector, this.context ) ) :\n\t\tthis;\n} );\n\n\n_api_register( 'table()', function ( selector ) {\n\tvar tables = this.tables( selector );\n\tvar ctx = tables.context;\n\n\t// Truncate to the first matched table\n\treturn ctx.length ?\n\t\tnew _Api( ctx[0] ) :\n\t\ttables;\n} );\n\n\n_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTable;\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'tables().body()', 'table().body()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTBody;\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'tables().header()', 'table().header()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTHead;\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTFoot;\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTableWrapper;\n\t}, 1 );\n} );\n\n\n\n/**\n * Redraw the tables in the current context.\n */\n_api_register( 'draw()', function ( paging ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( paging === 'page' ) {\n\t\t\t_fnDraw( settings );\n\t\t}\n\t\telse {\n\t\t\tif ( typeof paging === 'string' ) {\n\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\tfalse :\n\t\t\t\t\ttrue;\n\t\t\t}\n\n\t\t\t_fnReDraw( settings, paging===false );\n\t\t}\n\t} );\n} );\n\n\n\n/**\n * Get the current page index.\n *\n * @return {integer} Current page index (zero based)\n *//**\n * Set the current page.\n *\n * Note that if you attempt to show a page which does not exist, DataTables will\n * not throw an error, but rather reset the paging.\n *\n * @param {integer|string} action The paging action to take. This can be one of:\n *  * `integer` - The page index to jump to\n *  * `string` - An action to take:\n *    * `first` - Jump to first page.\n *    * `next` - Jump to the next page\n *    * `previous` - Jump to previous page\n *    * `last` - Jump to the last page.\n * @returns {DataTables.Api} this\n */\n_api_register( 'page()', function ( action ) {\n\tif ( action === undefined ) {\n\t\treturn this.page.info().page; // not an expensive call\n\t}\n\n\t// else, have an action to take on all tables\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnPageChange( settings, action );\n\t} );\n} );\n\n\n/**\n * Paging information for the first table in the current context.\n *\n * If you require paging information for another table, use the `table()` method\n * with a suitable selector.\n *\n * @return {object} Object with the following properties set:\n *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n *  * `pages` - Total number of pages\n *  * `start` - Display index for the first record shown on the current page\n *  * `end` - Display index for the last record shown on the current page\n *  * `length` - Display length (number of records). Note that generally `start\n *    + length = end`, but this is not always true, for example if there are\n *    only 2 records to show on the final page, with a length of 10.\n *  * `recordsTotal` - Full data set length\n *  * `recordsDisplay` - Data set length once the current filtering criterion\n *    are applied.\n */\n_api_register( 'page.info()', function ( action ) {\n\tif ( this.context.length === 0 ) {\n\t\treturn undefined;\n\t}\n\n\tvar\n\t\tsettings   = this.context[0],\n\t\tstart      = settings._iDisplayStart,\n\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\tall        = len === -1;\n\n\treturn {\n\t\t\"page\":           all ? 0 : Math.floor( start / len ),\n\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\n\t\t\"start\":          start,\n\t\t\"end\":            settings.fnDisplayEnd(),\n\t\t\"length\":         len,\n\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\n\t\t\"recordsDisplay\": visRecords,\n\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\n\t};\n} );\n\n\n/**\n * Get the current page length.\n *\n * @return {integer} Current page length. Note `-1` indicates that all records\n *   are to be shown.\n *//**\n * Set the current page length.\n *\n * @param {integer} Page length to set. Use `-1` to show all records.\n * @returns {DataTables.Api} this\n */\n_api_register( 'page.len()', function ( len ) {\n\t// Note that we can't call this function 'length()' because `length`\n\t// is a Javascript property of functions which defines how many arguments\n\t// the function expects.\n\tif ( len === undefined ) {\n\t\treturn this.context.length !== 0 ?\n\t\t\tthis.context[0]._iDisplayLength :\n\t\t\tundefined;\n\t}\n\n\t// else, set the page length\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnLengthChange( settings, len );\n\t} );\n} );\n\n\n\nvar __reload = function ( settings, holdPosition, callback ) {\n\t// Use the draw event to trigger a callback\n\tif ( callback ) {\n\t\tvar api = new _Api( settings );\n\n\t\tapi.one( 'draw', function () {\n\t\t\tcallback( api.ajax.json() );\n\t\t} );\n\t}\n\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t_fnReDraw( settings, holdPosition );\n\t}\n\telse {\n\t\t_fnProcessingDisplay( settings, true );\n\n\t\t// Cancel an existing request\n\t\tvar xhr = settings.jqXHR;\n\t\tif ( xhr && xhr.readyState !== 4 ) {\n\t\t\txhr.abort();\n\t\t}\n\n\t\t// Trigger xhr\n\t\t_fnBuildAjax( settings, [], function( json ) {\n\t\t\t_fnClearTable( settings );\n\n\t\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t_fnAddData( settings, data[i] );\n\t\t\t}\n\n\t\t\t_fnReDraw( settings, holdPosition );\n\t\t\t_fnProcessingDisplay( settings, false );\n\t\t} );\n\t}\n};\n\n\n/**\n * Get the JSON response from the last Ajax request that DataTables made to the\n * server. Note that this returns the JSON from the first table in the current\n * context.\n *\n * @return {object} JSON received from the server.\n */\n_api_register( 'ajax.json()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length > 0 ) {\n\t\treturn ctx[0].json;\n\t}\n\n\t// else return undefined;\n} );\n\n\n/**\n * Get the data submitted in the last Ajax request\n */\n_api_register( 'ajax.params()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length > 0 ) {\n\t\treturn ctx[0].oAjaxData;\n\t}\n\n\t// else return undefined;\n} );\n\n\n/**\n * Reload tables from the Ajax data source. Note that this function will\n * automatically re-draw the table when the remote data has been loaded.\n *\n * @param {boolean} [reset=true] Reset (default) or hold the current paging\n *   position. A full re-sort and re-filter is performed when this method is\n *   called, which is why the pagination reset is the default action.\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\n\treturn this.iterator( 'table', function (settings) {\n\t\t__reload( settings, resetPaging===false, callback );\n\t} );\n} );\n\n\n/**\n * Get the current Ajax URL. Note that this returns the URL from the first\n * table in the current context.\n *\n * @return {string} Current Ajax source URL\n *//**\n * Set the Ajax URL. Note that this will set the URL for all tables in the\n * current context.\n *\n * @param {string} url URL to set.\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.url()', function ( url ) {\n\tvar ctx = this.context;\n\n\tif ( url === undefined ) {\n\t\t// get\n\t\tif ( ctx.length === 0 ) {\n\t\t\treturn undefined;\n\t\t}\n\t\tctx = ctx[0];\n\n\t\treturn ctx.ajax ?\n\t\t\t$.isPlainObject( ctx.ajax ) ?\n\t\t\t\tctx.ajax.url :\n\t\t\t\tctx.ajax :\n\t\t\tctx.sAjaxSource;\n\t}\n\n\t// set\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( $.isPlainObject( settings.ajax ) ) {\n\t\t\tsettings.ajax.url = url;\n\t\t}\n\t\telse {\n\t\t\tsettings.ajax = url;\n\t\t}\n\t\t// No need to consider sAjaxSource here since DataTables gives priority\n\t\t// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n\t\t// value of `sAjaxSource` redundant.\n\t} );\n} );\n\n\n/**\n * Load data from the newly set Ajax URL. Note that this method is only\n * available when `ajax.url()` is used to set a URL. Additionally, this method\n * has the same effect as calling `ajax.reload()` but is provided for\n * convenience when setting a new URL. Like `ajax.reload()` it will\n * automatically redraw the table once the remote data has been loaded.\n *\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\n\t// Same as a reload, but makes sense to present it for easy access after a\n\t// url change\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\t__reload( ctx, resetPaging===false, callback );\n\t} );\n} );\n\n\n\n\nvar _selector_run = function ( type, selector, selectFn, settings, opts )\n{\n\tvar\n\t\tout = [], res,\n\t\ta, i, ien, j, jen,\n\t\tselectorType = typeof selector;\n\n\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t// given with their array like look\n\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\n\t\tselector = [ selector ];\n\t}\n\n\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t// Only split on simple strings - complex expressions will be jQuery selectors\n\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[\\[\\(:]/) ?\n\t\t\tselector[i].split(',') :\n\t\t\t[ selector[i] ];\n\n\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\n\t\t\tres = selectFn( typeof a[j] === 'string' ? (a[j]).trim() : a[j] );\n\n\t\t\tif ( res && res.length ) {\n\t\t\t\tout = out.concat( res );\n\t\t\t}\n\t\t}\n\t}\n\n\t// selector extensions\n\tvar ext = _ext.selector[ type ];\n\tif ( ext.length ) {\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\tout = ext[i]( settings, opts, out );\n\t\t}\n\t}\n\n\treturn _unique( out );\n};\n\n\nvar _selector_opts = function ( opts )\n{\n\tif ( ! opts ) {\n\t\topts = {};\n\t}\n\n\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t// than search\n\tif ( opts.filter && opts.search === undefined ) {\n\t\topts.search = opts.filter;\n\t}\n\n\treturn $.extend( {\n\t\tsearch: 'none',\n\t\torder: 'current',\n\t\tpage: 'all'\n\t}, opts );\n};\n\n\nvar _selector_first = function ( inst )\n{\n\t// Reduce the API instance to the first item found\n\tfor ( var i=0, ien=inst.length ; i<ien ; i++ ) {\n\t\tif ( inst[i].length > 0 ) {\n\t\t\t// Assign the first element to the first item in the instance\n\t\t\t// and truncate the instance and context\n\t\t\tinst[0] = inst[i];\n\t\t\tinst[0].length = 1;\n\t\t\tinst.length = 1;\n\t\t\tinst.context = [ inst.context[i] ];\n\n\t\t\treturn inst;\n\t\t}\n\t}\n\n\t// Not found - return an empty instance\n\tinst.length = 0;\n\treturn inst;\n};\n\n\nvar _selector_row_indexes = function ( settings, opts )\n{\n\tvar\n\t\ti, ien, tmp, a=[],\n\t\tdisplayFiltered = settings.aiDisplay,\n\t\tdisplayMaster = settings.aiDisplayMaster;\n\n\tvar\n\t\tsearch = opts.search,  // none, applied, removed\n\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\n\t\tpage   = opts.page;    // all, current\n\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t// In server-side processing mode, most options are irrelevant since\n\t\t// rows not shown don't exist and the index order is the applied order\n\t\t// Removed is a special case - for consistency just return an empty\n\t\t// array\n\t\treturn search === 'removed' ?\n\t\t\t[] :\n\t\t\t_range( 0, displayMaster.length );\n\t}\n\telse if ( page == 'current' ) {\n\t\t// Current page implies that order=current and filter=applied, since it is\n\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t// are\n\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\n\t\t\ta.push( displayFiltered[i] );\n\t\t}\n\t}\n\telse if ( order == 'current' || order == 'applied' ) {\n\t\tif ( search == 'none') {\n\t\t\ta = displayMaster.slice();\n\t\t}\n\t\telse if ( search == 'applied' ) {\n\t\t\ta = displayFiltered.slice();\n\t\t}\n\t\telse if ( search == 'removed' ) {\n\t\t\t// O(n+m) solution by creating a hash map\n\t\t\tvar displayFilteredMap = {};\n\n\t\t\tfor ( var i=0, ien=displayFiltered.length ; i<ien ; i++ ) {\n\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\n\t\t\t}\n\n\t\t\ta = $.map( displayMaster, function (el) {\n\t\t\t\treturn ! displayFilteredMap.hasOwnProperty(el) ?\n\t\t\t\t\tel :\n\t\t\t\t\tnull;\n\t\t\t} );\n\t\t}\n\t}\n\telse if ( order == 'index' || order == 'original' ) {\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\tif ( search == 'none' ) {\n\t\t\t\ta.push( i );\n\t\t\t}\n\t\t\telse { // applied | removed\n\t\t\t\ttmp = $.inArray( i, displayFiltered );\n\n\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t{\n\t\t\t\t\ta.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a;\n};\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Rows\n *\n * {}          - no selector - use all available rows\n * {integer}   - row aoData index\n * {node}      - TR node\n * {string}    - jQuery selector to apply to the TR elements\n * {array}     - jQuery array of nodes, or simply an array of TR nodes\n *\n */\nvar __row_selector = function ( settings, selector, opts )\n{\n\tvar rows;\n\tvar run = function ( sel ) {\n\t\tvar selInt = _intVal( sel );\n\t\tvar i, ien;\n\t\tvar aoData = settings.aoData;\n\n\t\t// Short cut - selector is a number and no options provided (default is\n\t\t// all records, so no need to check if the index is in there, since it\n\t\t// must be - dev error if the index doesn't exist).\n\t\tif ( selInt !== null && ! opts ) {\n\t\t\treturn [ selInt ];\n\t\t}\n\n\t\tif ( ! rows ) {\n\t\t\trows = _selector_row_indexes( settings, opts );\n\t\t}\n\n\t\tif ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {\n\t\t\t// Selector - integer\n\t\t\treturn [ selInt ];\n\t\t}\n\t\telse if ( sel === null || sel === undefined || sel === '' ) {\n\t\t\t// Selector - none\n\t\t\treturn rows;\n\t\t}\n\n\t\t// Selector - function\n\t\tif ( typeof sel === 'function' ) {\n\t\t\treturn $.map( rows, function (idx) {\n\t\t\t\tvar row = aoData[ idx ];\n\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\n\t\t\t} );\n\t\t}\n\n\t\t// Selector - node\n\t\tif ( sel.nodeName ) {\n\t\t\tvar rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup\n\t\t\tvar cellIdx = sel._DT_CellIndex;\n\n\t\t\tif ( rowIdx !== undefined ) {\n\t\t\t\t// Make sure that the row is actually still present in the table\n\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\n\t\t\t\t\t[ rowIdx ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t\telse if ( cellIdx ) {\n\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?\n\t\t\t\t\t[ cellIdx.row ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\treturn host.length ?\n\t\t\t\t\t[ host.data('dt-row') ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t}\n\n\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t// DataTables simplifies this for row selectors since you can select\n\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t// unescaped.\n\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\n\t\t\t// get row index from id\n\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\n\t\t\tif ( rowObj !== undefined ) {\n\t\t\t\treturn [ rowObj.idx ];\n\t\t\t}\n\n\t\t\t// need to fall through to jQuery in case there is DOM id that\n\t\t\t// matches\n\t\t}\n\t\t\n\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\tvar nodes = _removeEmpty(\n\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\n\t\t);\n\n\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t// it also allows arrays, so this will cope with all three options\n\t\treturn $(nodes)\n\t\t\t.filter( sel )\n\t\t\t.map( function () {\n\t\t\t\treturn this._DT_RowIndex;\n\t\t\t} )\n\t\t\t.toArray();\n\t};\n\n\treturn _selector_run( 'row', selector, run, settings, opts );\n};\n\n\n_api_register( 'rows()', function ( selector, opts ) {\n\t// argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = '';\n\t}\n\telse if ( $.isPlainObject( selector ) ) {\n\t\topts = selector;\n\t\tselector = '';\n\t}\n\n\topts = _selector_opts( opts );\n\n\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\treturn __row_selector( settings, selector, opts );\n\t}, 1 );\n\n\t// Want argument shifting here and in __row_selector?\n\tinst.selector.rows = selector;\n\tinst.selector.opts = opts;\n\n\treturn inst;\n} );\n\n_api_register( 'rows().nodes()', function () {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\treturn settings.aoData[ row ].nTr || undefined;\n\t}, 1 );\n} );\n\n_api_register( 'rows().data()', function () {\n\treturn this.iterator( true, 'rows', function ( settings, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\tvar r = settings.aoData[ row ];\n\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t_fnInvalidate( settings, row, src );\n\t} );\n} );\n\n_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\treturn row;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\n\tvar a = [];\n\tvar context = this.context;\n\n\t// `iterator` will drop undefined values, but in this case we want them\n\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\n\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\n\t\t\ta.push( (hash === true ? '#' : '' )+ id );\n\t\t}\n\t}\n\n\treturn new _Api( context, a );\n} );\n\n_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\n\tvar that = this;\n\n\tthis.iterator( 'row', function ( settings, row, thatIdx ) {\n\t\tvar data = settings.aoData;\n\t\tvar rowData = data[ row ];\n\t\tvar i, ien, j, jen;\n\t\tvar loopRow, loopCells;\n\n\t\tdata.splice( row, 1 );\n\n\t\t// Update the cached indexes\n\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\tloopRow = data[i];\n\t\t\tloopCells = loopRow.anCells;\n\n\t\t\t// Rows\n\t\t\tif ( loopRow.nTr !== null ) {\n\t\t\t\tloopRow.nTr._DT_RowIndex = i;\n\t\t\t}\n\n\t\t\t// Cells\n\t\t\tif ( loopCells !== null ) {\n\t\t\t\tfor ( j=0, jen=loopCells.length ; j<jen ; j++ ) {\n\t\t\t\t\tloopCells[j]._DT_CellIndex.row = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Delete from the display arrays\n\t\t_fnDeleteIndex( settings.aiDisplayMaster, row );\n\t\t_fnDeleteIndex( settings.aiDisplay, row );\n\t\t_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes\n\n\t\t// For server-side processing tables - subtract the deleted row from the count\n\t\tif ( settings._iRecordsDisplay > 0 ) {\n\t\t\tsettings._iRecordsDisplay--;\n\t\t}\n\n\t\t// Check for an 'overflow' they case for displaying the table\n\t\t_fnLengthOverflow( settings );\n\n\t\t// Remove the row's ID reference if there is one\n\t\tvar id = settings.rowIdFn( rowData._aData );\n\t\tif ( id !== undefined ) {\n\t\t\tdelete settings.aIds[ id ];\n\t\t}\n\t} );\n\n\tthis.iterator( 'table', function ( settings ) {\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\tsettings.aoData[i].idx = i;\n\t\t}\n\t} );\n\n\treturn this;\n} );\n\n\n_api_register( 'rows.add()', function ( rows ) {\n\tvar newRows = this.iterator( 'table', function ( settings ) {\n\t\t\tvar row, i, ien;\n\t\t\tvar out = [];\n\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\trow = rows[i];\n\n\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout.push( _fnAddData( settings, row ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn out;\n\t\t}, 1 );\n\n\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\tvar modRows = this.rows( -1 );\n\tmodRows.pop();\n\t$.merge( modRows, newRows );\n\n\treturn modRows;\n} );\n\n\n\n\n\n/**\n *\n */\n_api_register( 'row()', function ( selector, opts ) {\n\treturn _selector_first( this.rows( selector, opts ) );\n} );\n\n\n_api_register( 'row().data()', function ( data ) {\n\tvar ctx = this.context;\n\n\tif ( data === undefined ) {\n\t\t// Get\n\t\treturn ctx.length && this.length ?\n\t\t\tctx[0].aoData[ this[0] ]._aData :\n\t\t\tundefined;\n\t}\n\n\t// Set\n\tvar row = ctx[0].aoData[ this[0] ];\n\trow._aData = data;\n\n\t// If the DOM has an id, and the data source is an array\n\tif ( Array.isArray( data ) && row.nTr && row.nTr.id ) {\n\t\t_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );\n\t}\n\n\t// Automatically invalidate\n\t_fnInvalidate( ctx[0], this[0], 'data' );\n\n\treturn this;\n} );\n\n\n_api_register( 'row().node()', function () {\n\tvar ctx = this.context;\n\n\treturn ctx.length && this.length ?\n\t\tctx[0].aoData[ this[0] ].nTr || null :\n\t\tnull;\n} );\n\n\n_api_register( 'row.add()', function ( row ) {\n\t// Allow a jQuery object to be passed in - only a single row is added from\n\t// it though - the first element in the set\n\tif ( row instanceof $ && row.length ) {\n\t\trow = row[0];\n\t}\n\n\tvar rows = this.iterator( 'table', function ( settings ) {\n\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\treturn _fnAddTr( settings, row )[0];\n\t\t}\n\t\treturn _fnAddData( settings, row );\n\t} );\n\n\t// Return an Api.rows() extended instance, with the newly added row selected\n\treturn this.row( rows[0] );\n} );\n\n\n$(document).on('plugin-init.dt', function (e, context) {\n\tvar api = new _Api( context );\n\tvar namespace = 'on-plugin-init';\n\tvar stateSaveParamsEvent = 'stateSaveParams.' + namespace;\n\tvar destroyEvent = 'destroy. ' + namespace;\n\n\tapi.on( stateSaveParamsEvent, function ( e, settings, d ) {\n\t\t// This could be more compact with the API, but it is a lot faster as a simple\n\t\t// internal loop\n\t\tvar idFn = settings.rowIdFn;\n\t\tvar data = settings.aoData;\n\t\tvar ids = [];\n\n\t\tfor (var i=0 ; i<data.length ; i++) {\n\t\t\tif (data[i]._detailsShow) {\n\t\t\t\tids.push( '#' + idFn(data[i]._aData) );\n\t\t\t}\n\t\t}\n\n\t\td.childRows = ids;\n\t});\n\n\tapi.on( destroyEvent, function () {\n\t\tapi.off(stateSaveParamsEvent + ' ' + destroyEvent);\n\t});\n\n\tvar loaded = api.state.loaded();\n\n\tif ( loaded && loaded.childRows ) {\n\t\tapi\n\t\t\t.rows( $.map(loaded.childRows, function (id){\n\t\t\t\treturn id.replace(/:/g, '\\\\:')\n\t\t\t}) )\n\t\t\t.every( function () {\n\t\t\t\t_fnCallbackFire( context, null, 'requestChild', [ this ] )\n\t\t\t});\n\t}\n});\n\nvar __details_add = function ( ctx, row, data, klass )\n{\n\t// Convert to array of TR elements\n\tvar rows = [];\n\tvar addRow = function ( r, k ) {\n\t\t// Recursion to allow for arrays of jQuery objects\n\t\tif ( Array.isArray( r ) || r instanceof $ ) {\n\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\n\t\t\t\taddRow( r[i], k );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t// to add the correct number of columns etc\n\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\n\t\t\trows.push( r );\n\t\t}\n\t\telse {\n\t\t\t// Otherwise create a row with a wrapper\n\t\t\tvar created = $('<tr><td></td></tr>').addClass( k );\n\t\t\t$('td', created)\n\t\t\t\t.addClass( k )\n\t\t\t\t.html( r )\n\t\t\t\t[0].colSpan = _fnVisbleColumns( ctx );\n\n\t\t\trows.push( created[0] );\n\t\t}\n\t};\n\n\taddRow( data, klass );\n\n\tif ( row._details ) {\n\t\trow._details.detach();\n\t}\n\n\trow._details = $(rows);\n\n\t// If the children were already shown, that state should be retained\n\tif ( row._detailsShow ) {\n\t\trow._details.insertAfter( row.nTr );\n\t}\n};\n\n\n// Make state saving of child row details async to allow them to be batch processed\nvar __details_state = DataTable.util.throttle(\n\tfunction (ctx) {\n\t\t_fnSaveState( ctx[0] )\n\t},\n\t500\n);\n\n\nvar __details_remove = function ( api, idx )\n{\n\tvar ctx = api.context;\n\n\tif ( ctx.length ) {\n\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\n\t\tif ( row && row._details ) {\n\t\t\trow._details.remove();\n\n\t\t\trow._detailsShow = undefined;\n\t\t\trow._details = undefined;\n\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t__details_state( ctx );\n\t\t}\n\t}\n};\n\n\nvar __details_display = function ( api, show ) {\n\tvar ctx = api.context;\n\n\tif ( ctx.length && api.length ) {\n\t\tvar row = ctx[0].aoData[ api[0] ];\n\n\t\tif ( row._details ) {\n\t\t\trow._detailsShow = show;\n\n\t\t\tif ( show ) {\n\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t$( row.nTr ).addClass( 'dt-hasChild' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\trow._details.detach();\n\t\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t}\n\n\t\t\t_fnCallbackFire( ctx[0], null, 'childRow', [ show, api.row( api[0] ) ] )\n\n\t\t\t__details_events( ctx[0] );\n\t\t\t__details_state( ctx );\n\t\t}\n\t}\n};\n\n\nvar __details_events = function ( settings )\n{\n\tvar api = new _Api( settings );\n\tvar namespace = '.dt.DT_details';\n\tvar drawEvent = 'draw'+namespace;\n\tvar colvisEvent = 'column-sizing'+namespace;\n\tvar destroyEvent = 'destroy'+namespace;\n\tvar data = settings.aoData;\n\n\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\n\n\tif ( _pluck( data, '_details' ).length > 0 ) {\n\t\t// On each draw, insert the required elements into the document\n\t\tapi.on( drawEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\n\t\t\t\t// Internal data grab\n\t\t\t\tvar row = data[ idx ];\n\n\t\t\t\tif ( row._detailsShow ) {\n\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t// Column visibility change - update the colspan\n\t\tapi.on( colvisEvent, function ( e, ctx, idx, vis ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t// a colspan)\n\t\t\tvar row, visible = _fnVisbleColumns( ctx );\n\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\trow = data[i];\n\n\t\t\t\tif ( row._details ) {\n\t\t\t\t\trow._details.each(function () {\n\t\t\t\t\t\tvar el = $(this).children('td');\n\n\t\t\t\t\t\tif (el.length == 1) {\n\t\t\t\t\t\t\tel.attr('colspan', visible);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Table destroyed - nuke any child rows\n\t\tapi.on( destroyEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\tif ( data[i]._details ) {\n\t\t\t\t\t__details_remove( api, i );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n};\n\n// Strings for the method names to help minification\nvar _emp = '';\nvar _child_obj = _emp+'row().child';\nvar _child_mth = _child_obj+'()';\n\n// data can be:\n//  tr\n//  string\n//  jQuery or array of any of the above\n_api_register( _child_mth, function ( data, klass ) {\n\tvar ctx = this.context;\n\n\tif ( data === undefined ) {\n\t\t// get\n\t\treturn ctx.length && this.length ?\n\t\t\tctx[0].aoData[ this[0] ]._details :\n\t\t\tundefined;\n\t}\n\telse if ( data === true ) {\n\t\t// show\n\t\tthis.child.show();\n\t}\n\telse if ( data === false ) {\n\t\t// remove\n\t\t__details_remove( this );\n\t}\n\telse if ( ctx.length && this.length ) {\n\t\t// set\n\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\n\t}\n\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.show()',\n\t_child_mth+'.show()' // only when `child()` was called with parameters (without\n], function ( show ) {   // it returns an object and this method is not executed)\n\t__details_display( this, true );\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.hide()',\n\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\n], function () {         // it returns an object and this method is not executed)\n\t__details_display( this, false );\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.remove()',\n\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\n], function () {           // it returns an object and this method is not executed)\n\t__details_remove( this );\n\treturn this;\n} );\n\n\n_api_register( _child_obj+'.isShown()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length && this.length ) {\n\t\t// _detailsShown as false or undefined will fall through to return false\n\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\n\t}\n\treturn false;\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Columns\n *\n * {integer}           - column index (>=0 count from left, <0 count from right)\n * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n * \"{string}:name\"     - column name\n * \"{string}\"          - jQuery selector on column header nodes\n *\n */\n\n// can be an array of these items, comma separated list, or an array of comma\n// separated lists\n\nvar __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;\n\n\n// r1 and r2 are redundant - but it means that the parameters match for the\n// iterator callback in columns().data()\nvar __columnData = function ( settings, column, r1, r2, rows ) {\n\tvar a = [];\n\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\n\t\ta.push( _fnGetCellData( settings, rows[row], column ) );\n\t}\n\treturn a;\n};\n\n\nvar __column_selector = function ( settings, selector, opts )\n{\n\tvar\n\t\tcolumns = settings.aoColumns,\n\t\tnames = _pluck( columns, 'sName' ),\n\t\tnodes = _pluck( columns, 'nTh' );\n\n\tvar run = function ( s ) {\n\t\tvar selInt = _intVal( s );\n\n\t\t// Selector - all\n\t\tif ( s === '' ) {\n\t\t\treturn _range( columns.length );\n\t\t}\n\n\t\t// Selector - index\n\t\tif ( selInt !== null ) {\n\t\t\treturn [ selInt >= 0 ?\n\t\t\t\tselInt : // Count from left\n\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t];\n\t\t}\n\n\t\t// Selector = function\n\t\tif ( typeof s === 'function' ) {\n\t\t\tvar rows = _selector_row_indexes( settings, opts );\n\n\t\t\treturn $.map( columns, function (col, idx) {\n\t\t\t\treturn s(\n\t\t\t\t\t\tidx,\n\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\n\t\t\t\t\t\tnodes[ idx ]\n\t\t\t\t\t) ? idx : null;\n\t\t\t} );\n\t\t}\n\n\t\t// jQuery or string selector\n\t\tvar match = typeof s === 'string' ?\n\t\t\ts.match( __re_column_selector ) :\n\t\t\t'';\n\n\t\tif ( match ) {\n\t\t\tswitch( match[2] ) {\n\t\t\t\tcase 'visIdx':\n\t\t\t\tcase 'visible':\n\t\t\t\t\tvar idx = parseInt( match[1], 10 );\n\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\tif ( idx < 0 ) {\n\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\tvar visColumns = $.map( columns, function (col,i) {\n\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\n\t\t\t\t\t}\n\t\t\t\t\t// Counting from the left\n\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\n\n\t\t\t\tcase 'name':\n\t\t\t\t\t// match by name. `names` is column index complete and in order\n\t\t\t\t\treturn $.map( names, function (name, i) {\n\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t} );\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\t// Cell in the table body\n\t\tif ( s.nodeName && s._DT_CellIndex ) {\n\t\t\treturn [ s._DT_CellIndex.column ];\n\t\t}\n\n\t\t// jQuery selector on the TH elements for the columns\n\t\tvar jqResult = $( nodes )\n\t\t\t.filter( s )\n\t\t\t.map( function () {\n\t\t\t\treturn $.inArray( this, nodes ); // `nodes` is column index complete and in order\n\t\t\t} )\n\t\t\t.toArray();\n\n\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\treturn jqResult;\n\t\t}\n\n\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t// a child or such an element\n\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\treturn host.length ?\n\t\t\t[ host.data('dt-column') ] :\n\t\t\t[];\n\t};\n\n\treturn _selector_run( 'column', selector, run, settings, opts );\n};\n\n\nvar __setColumnVis = function ( settings, column, vis ) {\n\tvar\n\t\tcols = settings.aoColumns,\n\t\tcol  = cols[ column ],\n\t\tdata = settings.aoData,\n\t\trow, cells, i, ien, tr;\n\n\t// Get\n\tif ( vis === undefined ) {\n\t\treturn col.bVisible;\n\t}\n\n\t// Set\n\t// No change\n\tif ( col.bVisible === vis ) {\n\t\treturn;\n\t}\n\n\tif ( vis ) {\n\t\t// Insert column\n\t\t// Need to decide if we should use appendChild or insertBefore\n\t\tvar insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );\n\n\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\ttr = data[i].nTr;\n\t\t\tcells = data[i].anCells;\n\n\t\t\tif ( tr ) {\n\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\n\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// Remove column\n\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\n\t}\n\n\t// Common actions\n\tcol.bVisible = vis;\n};\n\n\n_api_register( 'columns()', function ( selector, opts ) {\n\t// argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = '';\n\t}\n\telse if ( $.isPlainObject( selector ) ) {\n\t\topts = selector;\n\t\tselector = '';\n\t}\n\n\topts = _selector_opts( opts );\n\n\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\treturn __column_selector( settings, selector, opts );\n\t}, 1 );\n\n\t// Want argument shifting here and in _row_selector?\n\tinst.selector.cols = selector;\n\tinst.selector.opts = opts;\n\n\treturn inst;\n} );\n\n_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column].nTh;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column].nTf;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().data()', 'column().data()', function () {\n\treturn this.iterator( 'column-rows', __columnData, 1 );\n} );\n\n_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column].mData;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows,\n\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t);\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\n\tvar that = this;\n\tvar ret = this.iterator( 'column', function ( settings, column ) {\n\t\tif ( vis === undefined ) {\n\t\t\treturn settings.aoColumns[ column ].bVisible;\n\t\t} // else\n\t\t__setColumnVis( settings, column, vis );\n\t} );\n\n\t// Group the column visibility changes\n\tif ( vis !== undefined ) {\n\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\t// Redraw the header after changes\n\t\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t\t// Update colspan for no records display. Child rows and extensions will use their own\n\t\t\t// listeners to do this - only need to update the empty table item here\n\t\t\tif ( ! settings.aiDisplay.length ) {\n\t\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n\t\t\t}\n\t\n\t\t\t_fnSaveState( settings );\n\n\t\t\t// Second loop once the first is done for events\n\t\t\tthat.iterator( 'column', function ( settings, column ) {\n\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\n\t\t\t} );\n\n\t\t\tif ( calc === undefined || calc ) {\n\t\t\t\tthat.columns.adjust();\n\t\t\t}\n\t\t});\n\t}\n\n\treturn ret;\n} );\n\n_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn type === 'visible' ?\n\t\t\t_fnColumnIndexToVisible( settings, column ) :\n\t\t\tcolumn;\n\t}, 1 );\n} );\n\n_api_register( 'columns.adjust()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnAdjustColumnSizing( settings );\n\t}, 1 );\n} );\n\n_api_register( 'column.index()', function ( type, idx ) {\n\tif ( this.context.length !== 0 ) {\n\t\tvar ctx = this.context[0];\n\n\t\tif ( type === 'fromVisible' || type === 'toData' ) {\n\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\n\t\t}\n\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\n\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\n\t\t}\n\t}\n} );\n\n_api_register( 'column()', function ( selector, opts ) {\n\treturn _selector_first( this.columns( selector, opts ) );\n} );\n\nvar __cell_selector = function ( settings, selector, opts )\n{\n\tvar data = settings.aoData;\n\tvar rows = _selector_row_indexes( settings, opts );\n\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\n\tvar allCells = $(_flatten( [], cells ));\n\tvar row;\n\tvar columns = settings.aoColumns.length;\n\tvar a, i, ien, j, o, host;\n\n\tvar run = function ( s ) {\n\t\tvar fnSelector = typeof s === 'function';\n\n\t\tif ( s === null || s === undefined || fnSelector ) {\n\t\t\t// All cells and function selectors\n\t\t\ta = [];\n\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\trow = rows[i];\n\n\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\n\t\t\t\t\to = {\n\t\t\t\t\t\trow: row,\n\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( fnSelector ) {\n\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\thost = data[ row ];\n\n\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\n\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\t// Selector - index\n\t\tif ( $.isPlainObject( s ) ) {\n\t\t\t// Valid cell index and its in the array of selectable rows\n\t\t\treturn s.column !== undefined && s.row !== undefined && $.inArray( s.row, rows ) !== -1 ?\n\t\t\t\t[s] :\n\t\t\t\t[];\n\t\t}\n\n\t\t// Selector - jQuery filtered cells\n\t\tvar jqResult = allCells\n\t\t\t.filter( s )\n\t\t\t.map( function (i, el) {\n\t\t\t\treturn { // use a new object, in case someone changes the values\n\t\t\t\t\trow:    el._DT_CellIndex.row,\n\t\t\t\t\tcolumn: el._DT_CellIndex.column\n \t\t\t\t};\n\t\t\t} )\n\t\t\t.toArray();\n\n\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\treturn jqResult;\n\t\t}\n\n\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t// data attributes\n\t\thost = $(s).closest('*[data-dt-row]');\n\t\treturn host.length ?\n\t\t\t[ {\n\t\t\t\trow: host.data('dt-row'),\n\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t} ] :\n\t\t\t[];\n\t};\n\n\treturn _selector_run( 'cell', selector, run, settings, opts );\n};\n\n\n\n\n_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\n\t// Argument shifting\n\tif ( $.isPlainObject( rowSelector ) ) {\n\t\t// Indexes\n\t\tif ( rowSelector.row === undefined ) {\n\t\t\t// Selector options in first parameter\n\t\t\topts = rowSelector;\n\t\t\trowSelector = null;\n\t\t}\n\t\telse {\n\t\t\t// Cell index objects in first parameter\n\t\t\topts = columnSelector;\n\t\t\tcolumnSelector = null;\n\t\t}\n\t}\n\tif ( $.isPlainObject( columnSelector ) ) {\n\t\topts = columnSelector;\n\t\tcolumnSelector = null;\n\t}\n\n\t// Cell selector\n\tif ( columnSelector === null || columnSelector === undefined ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\n\t\t} );\n\t}\n\n\t// The default built in options need to apply to row and columns\n\tvar internalOpts = opts ? {\n\t\tpage: opts.page,\n\t\torder: opts.order,\n\t\tsearch: opts.search\n\t} : {};\n\n\t// Row + column selector\n\tvar columns = this.columns( columnSelector, internalOpts );\n\tvar rows = this.rows( rowSelector, internalOpts );\n\tvar i, ien, j, jen;\n\n\tvar cellsNoOpts = this.iterator( 'table', function ( settings, idx ) {\n\t\tvar a = [];\n\n\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\n\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\n\t\t\t\ta.push( {\n\t\t\t\t\trow:    rows[idx][i],\n\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\treturn a;\n\t}, 1 );\n\n\t// There is currently only one extension which uses a cell selector extension\n\t// It is a _major_ performance drag to run this if it isn't needed, so this is\n\t// an extension specific check at the moment\n\tvar cells = opts && opts.selected ?\n\t\tthis.cells( cellsNoOpts, opts ) :\n\t\tcellsNoOpts;\n\n\t$.extend( cells.selector, {\n\t\tcols: columnSelector,\n\t\trows: rowSelector,\n\t\topts: opts\n\t} );\n\n\treturn cells;\n} );\n\n\n_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\tvar data = settings.aoData[ row ];\n\n\t\treturn data && data.anCells ?\n\t\t\tdata.anCells[ column ] :\n\t\t\tundefined;\n\t}, 1 );\n} );\n\n\n_api_register( 'cells().data()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn _fnGetCellData( settings, row, column );\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\n\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn settings.aoData[ row ][ type ][ column ];\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn _fnGetCellData( settings, row, column, type );\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn {\n\t\t\trow: row,\n\t\t\tcolumn: column,\n\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\n\t\t};\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t_fnInvalidate( settings, row, src, column );\n\t} );\n} );\n\n\n\n_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\n\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\n} );\n\n\n_api_register( 'cell().data()', function ( data ) {\n\tvar ctx = this.context;\n\tvar cell = this[0];\n\n\tif ( data === undefined ) {\n\t\t// Get\n\t\treturn ctx.length && cell.length ?\n\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\n\t\t\tundefined;\n\t}\n\n\t// Set\n\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\n\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\n\n\treturn this;\n} );\n\n\n\n/**\n * Get current ordering (sorting) that has been applied to the table.\n *\n * @returns {array} 2D array containing the sorting information for the first\n *   table in the current context. Each element in the parent array represents\n *   a column being sorted upon (i.e. multi-sorting with two columns would have\n *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n *   the column index that the sorting condition applies to, the second is the\n *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n *   index of the sorting order from the `column.sorting` initialisation array.\n *//**\n * Set the ordering for the table.\n *\n * @param {integer} order Column index to sort upon.\n * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n * @returns {DataTables.Api} this\n *//**\n * Set the ordering for the table.\n *\n * @param {array} order 1D array of sorting information to be applied.\n * @param {array} [...] Optional additional sorting conditions\n * @returns {DataTables.Api} this\n *//**\n * Set the ordering for the table.\n *\n * @param {array} order 2D array of sorting information to be applied.\n * @returns {DataTables.Api} this\n */\n_api_register( 'order()', function ( order, dir ) {\n\tvar ctx = this.context;\n\n\tif ( order === undefined ) {\n\t\t// get\n\t\treturn ctx.length !== 0 ?\n\t\t\tctx[0].aaSorting :\n\t\t\tundefined;\n\t}\n\n\t// set\n\tif ( typeof order === 'number' ) {\n\t\t// Simple column / direction passed in\n\t\torder = [ [ order, dir ] ];\n\t}\n\telse if ( order.length && ! Array.isArray( order[0] ) ) {\n\t\t// Arguments passed in (list of 1D arrays)\n\t\torder = Array.prototype.slice.call( arguments );\n\t}\n\t// otherwise a 2D array was passed in\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tsettings.aaSorting = order.slice();\n\t} );\n} );\n\n\n/**\n * Attach a sort listener to an element for a given column\n *\n * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n *   listener to. This can take the form of a single DOM node, a jQuery\n *   collection of nodes or a jQuery selector which will identify the node(s).\n * @param {integer} column the column that a click on this node will sort on\n * @param {function} [callback] callback function when sort is run\n * @returns {DataTables.Api} this\n */\n_api_register( 'order.listener()', function ( node, column, callback ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnSortAttachListener( settings, node, column, callback );\n\t} );\n} );\n\n\n_api_register( 'order.fixed()', function ( set ) {\n\tif ( ! set ) {\n\t\tvar ctx = this.context;\n\t\tvar fixed = ctx.length ?\n\t\t\tctx[0].aaSortingFixed :\n\t\t\tundefined;\n\n\t\treturn Array.isArray( fixed ) ?\n\t\t\t{ pre: fixed } :\n\t\t\tfixed;\n\t}\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\n\t} );\n} );\n\n\n// Order by the selected column(s)\n_api_register( [\n\t'columns().order()',\n\t'column().order()'\n], function ( dir ) {\n\tvar that = this;\n\n\treturn this.iterator( 'table', function ( settings, i ) {\n\t\tvar sort = [];\n\n\t\t$.each( that[i], function (j, col) {\n\t\t\tsort.push( [ col, dir ] );\n\t\t} );\n\n\t\tsettings.aaSorting = sort;\n\t} );\n} );\n\n\n\n_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\n\tvar ctx = this.context;\n\n\tif ( input === undefined ) {\n\t\t// get\n\t\treturn ctx.length !== 0 ?\n\t\t\tctx[0].oPreviousSearch.sSearch :\n\t\t\tundefined;\n\t}\n\n\t// set\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\treturn;\n\t\t}\n\n\t\t_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {\n\t\t\t\"sSearch\": input+\"\",\n\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t} ), 1 );\n\t} );\n} );\n\n\n_api_registerPlural(\n\t'columns().search()',\n\t'column().search()',\n\tfunction ( input, regex, smart, caseInsen ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\tvar preSearch = settings.aoPreSearchCols;\n\n\t\t\tif ( input === undefined ) {\n\t\t\t\t// get\n\t\t\t\treturn preSearch[ column ].sSearch;\n\t\t\t}\n\n\t\t\t// set\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$.extend( preSearch[ column ], {\n\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t} );\n\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch, 1 );\n\t\t} );\n\t}\n);\n\n/*\n * State API methods\n */\n\n_api_register( 'state()', function () {\n\treturn this.context.length ?\n\t\tthis.context[0].oSavedState :\n\t\tnull;\n} );\n\n\n_api_register( 'state.clear()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t// Save an empty object\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\n\t} );\n} );\n\n\n_api_register( 'state.loaded()', function () {\n\treturn this.context.length ?\n\t\tthis.context[0].oLoadedState :\n\t\tnull;\n} );\n\n\n_api_register( 'state.save()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnSaveState( settings );\n\t} );\n} );\n\n\n\n/**\n * Set the jQuery or window object to be used by DataTables\n *\n * @param {*} module Library / container object\n * @param {string} [type] Library or container type `lib`, `win` or `datetime`.\n *   If not provided, automatic detection is attempted.\n */\nDataTable.use = function (module, type) {\n\tif (type === 'lib' || module.fn) {\n\t\t$ = module;\n\t}\n\telse if (type == 'win' || module.document) {\n\t\twindow = module;\n\t\tdocument = module.document;\n\t}\n\telse if (type === 'datetime' || module.type === 'DateTime') {\n\t\tDataTable.DateTime = module;\n\t}\n}\n\n/**\n * CommonJS factory function pass through. This will check if the arguments\n * given are a window object or a jQuery object. If so they are set\n * accordingly.\n * @param {*} root Window\n * @param {*} jq jQUery\n * @returns {boolean} Indicator\n */\nDataTable.factory = function (root, jq) {\n\tvar is = false;\n\n\t// Test if the first parameter is a window object\n\tif (root && root.document) {\n\t\twindow = root;\n\t\tdocument = root.document;\n\t}\n\n\t// Test if the second parameter is a jQuery object\n\tif (jq && jq.fn && jq.fn.jquery) {\n\t\t$ = jq;\n\t\tis = true;\n\t}\n\n\treturn is;\n}\n\n/**\n * Provide a common method for plug-ins to check the version of DataTables being\n * used, in order to ensure compatibility.\n *\n *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n *  @returns {boolean} true if this version of DataTables is greater or equal to\n *    the required version, or false if this version of DataTales is not\n *    suitable\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n */\nDataTable.versionCheck = DataTable.fnVersionCheck = function( version )\n{\n\tvar aThis = DataTable.version.split('.');\n\tvar aThat = version.split('.');\n\tvar iThis, iThat;\n\n\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\n\t\tiThis = parseInt( aThis[i], 10 ) || 0;\n\t\tiThat = parseInt( aThat[i], 10 ) || 0;\n\n\t\t// Parts are the same, keep comparing\n\t\tif (iThis === iThat) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Parts are different, return immediately\n\t\treturn iThis > iThat;\n\t}\n\n\treturn true;\n};\n\n\n/**\n * Check if a `<table>` node is a DataTable table already or not.\n *\n *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n *      selector for the table to test. Note that if more than more than one\n *      table is passed on, only the first will be checked\n *  @returns {boolean} true the table given is a DataTable, or false otherwise\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n *      $('#example').dataTable();\n *    }\n */\nDataTable.isDataTable = DataTable.fnIsDataTable = function ( table )\n{\n\tvar t = $(table).get(0);\n\tvar is = false;\n\n\tif ( table instanceof DataTable.Api ) {\n\t\treturn true;\n\t}\n\n\t$.each( DataTable.settings, function (i, o) {\n\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\n\t\tif ( o.nTable === t || head === t || foot === t ) {\n\t\t\tis = true;\n\t\t}\n\t} );\n\n\treturn is;\n};\n\n\n/**\n * Get all DataTable tables that have been initialised - optionally you can\n * select to get only currently visible tables.\n *\n *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n *    or visible tables only.\n *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n *    DataTables\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    $.each( $.fn.dataTable.tables(true), function () {\n *      $(table).DataTable().columns.adjust();\n *    } );\n */\nDataTable.tables = DataTable.fnTables = function ( visible )\n{\n\tvar api = false;\n\n\tif ( $.isPlainObject( visible ) ) {\n\t\tapi = visible.api;\n\t\tvisible = visible.visible;\n\t}\n\n\tvar a = $.map( DataTable.settings, function (o) {\n\t\tif ( !visible || (visible && $(o.nTable).is(':visible')) ) {\n\t\t\treturn o.nTable;\n\t\t}\n\t} );\n\n\treturn api ?\n\t\tnew _Api( a ) :\n\t\ta;\n};\n\n\n/**\n * Convert from camel case parameters to Hungarian notation. This is made public\n * for the extensions to provide the same ability as DataTables core to accept\n * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n * parameters.\n *\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n */\nDataTable.camelToHungarian = _fnCamelToHungarian;\n\n\n\n/**\n *\n */\n_api_register( '$()', function ( selector, opts ) {\n\tvar\n\t\trows   = this.rows( opts ).nodes(), // Get all rows\n\t\tjqRows = $(rows);\n\n\treturn $( [].concat(\n\t\tjqRows.filter( selector ).toArray(),\n\t\tjqRows.find( selector ).toArray()\n\t) );\n} );\n\n\n// jQuery functions to operate on the tables\n$.each( [ 'on', 'one', 'off' ], function (i, key) {\n\t_api_register( key+'()', function ( /* event, handler */ ) {\n\t\tvar args = Array.prototype.slice.call(arguments);\n\n\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\targs[0] = $.map( args[0].split( /\\s/ ), function ( e ) {\n\t\t\treturn ! e.match(/\\.dt\\b/) ?\n\t\t\t\te+'.dt' :\n\t\t\t\te;\n\t\t\t} ).join( ' ' );\n\n\t\tvar inst = $( this.tables().nodes() );\n\t\tinst[key].apply( inst, args );\n\t\treturn this;\n\t} );\n} );\n\n\n_api_register( 'clear()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnClearTable( settings );\n\t} );\n} );\n\n\n_api_register( 'settings()', function () {\n\treturn new _Api( this.context, this.context );\n} );\n\n\n_api_register( 'init()', function () {\n\tvar ctx = this.context;\n\treturn ctx.length ? ctx[0].oInit : null;\n} );\n\n\n_api_register( 'data()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\treturn _pluck( settings.aoData, '_aData' );\n\t} ).flatten();\n} );\n\n\n_api_register( 'destroy()', function ( remove ) {\n\tremove = remove || false;\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tvar classes   = settings.oClasses;\n\t\tvar table     = settings.nTable;\n\t\tvar tbody     = settings.nTBody;\n\t\tvar thead     = settings.nTHead;\n\t\tvar tfoot     = settings.nTFoot;\n\t\tvar jqTable   = $(table);\n\t\tvar jqTbody   = $(tbody);\n\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\tvar rows      = $.map( settings.aoData, function (r) { return r.nTr; } );\n\t\tvar i, ien;\n\n\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t// should be taken\n\t\tsettings.bDestroying = true;\n\n\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings] );\n\n\t\t// If not being removed from the document, make all columns visible\n\t\tif ( ! remove ) {\n\t\t\tnew _Api( settings ).columns().visible( true );\n\t\t}\n\n\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t// for removing them\n\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n\t\t$(window).off('.DT-'+settings.sInstance);\n\n\t\t// When scrolling we had to break the table up - restore it\n\t\tif ( table != thead.parentNode ) {\n\t\t\tjqTable.children('thead').detach();\n\t\t\tjqTable.append( thead );\n\t\t}\n\n\t\tif ( tfoot && table != tfoot.parentNode ) {\n\t\t\tjqTable.children('tfoot').detach();\n\t\t\tjqTable.append( tfoot );\n\t\t}\n\n\t\tsettings.aaSorting = [];\n\t\tsettings.aaSortingFixed = [];\n\t\t_fnSortingClasses( settings );\n\n\t\t$( rows ).removeClass( settings.asStripeClasses.join(' ') );\n\n\t\t$('th, td', thead).removeClass( classes.sSortable+' '+\n\t\t\tclasses.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone\n\t\t);\n\n\t\t// Add the TR elements back into the table in their original order\n\t\tjqTbody.children().detach();\n\t\tjqTbody.append( rows );\n\n\t\tvar orig = settings.nTableWrapper.parentNode;\n\n\t\t// Remove the DataTables generated nodes, events and classes\n\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\tjqTable[ removedMethod ]();\n\t\tjqWrapper[ removedMethod ]();\n\n\t\t// If we need to reattach the table to the document\n\t\tif ( ! remove && orig ) {\n\t\t\t// insertBefore acts like appendChild if !arg[1]\n\t\t\torig.insertBefore( table, settings.nTableReinsertBefore );\n\n\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t// so we can restore directly to that\n\t\t\tjqTable\n\t\t\t\t.css( 'width', settings.sDestroyWidth )\n\t\t\t\t.removeClass( classes.sTable );\n\n\t\t\t// If the were originally stripe classes - then we add them back here.\n\t\t\t// Note this is not fool proof (for example if not all rows had stripe\n\t\t\t// classes - but it's a good effort without getting carried away\n\t\t\tien = settings.asDestroyStripes.length;\n\n\t\t\tif ( ien ) {\n\t\t\t\tjqTbody.children().each( function (i) {\n\t\t\t\t\t$(this).addClass( settings.asDestroyStripes[i % ien] );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\t/* Remove the settings object from the settings array */\n\t\tvar idx = $.inArray( settings, DataTable.settings );\n\t\tif ( idx !== -1 ) {\n\t\t\tDataTable.settings.splice( idx, 1 );\n\t\t}\n\t} );\n} );\n\n\n// Add the `every()` method for rows, columns and cells in a compact form\n$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\n\t_api_register( type+'s().every()', function ( fn ) {\n\t\tvar opts = this.selector.opts;\n\t\tvar api = this;\n\n\t\treturn this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {\n\t\t\t// Rows and columns:\n\t\t\t//  arg1 - index\n\t\t\t//  arg2 - table counter\n\t\t\t//  arg3 - loop counter\n\t\t\t//  arg4 - undefined\n\t\t\t// Cells:\n\t\t\t//  arg1 - row index\n\t\t\t//  arg2 - column index\n\t\t\t//  arg3 - table counter\n\t\t\t//  arg4 - loop counter\n\t\t\tfn.call(\n\t\t\t\tapi[ type ](\n\t\t\t\t\targ1,\n\t\t\t\t\ttype==='cell' ? arg2 : opts,\n\t\t\t\t\ttype==='cell' ? opts : undefined\n\t\t\t\t),\n\t\t\t\targ1, arg2, arg3, arg4\n\t\t\t);\n\t\t} );\n\t} );\n} );\n\n\n// i18n method for extensions to be able to use the language object from the\n// DataTable\n_api_register( 'i18n()', function ( token, def, plural ) {\n\tvar ctx = this.context[0];\n\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\n\n\tif ( resolved === undefined ) {\n\t\tresolved = def;\n\t}\n\n\tif ( plural !== undefined && $.isPlainObject( resolved ) ) {\n\t\tresolved = resolved[ plural ] !== undefined ?\n\t\t\tresolved[ plural ] :\n\t\t\tresolved._;\n\t}\n\n\treturn typeof resolved === 'string'\n\t\t? resolved.replace( '%d', plural ) // nb: plural might be undefined,\n\t\t: resolved;\n} );\n/**\n * Version string for plug-ins to check compatibility. Allowed format is\n * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n * only for non-release builds. See https://semver.org/ for more information.\n *  @member\n *  @type string\n *  @default Version number\n */\nDataTable.version = \"1.13.11\";\n\n/**\n * Private data store, containing all of the settings objects that are\n * created for the tables on a given page.\n *\n * Note that the `DataTable.settings` object is aliased to\n * `jQuery.fn.dataTableExt` through which it may be accessed and\n * manipulated, or `jQuery.fn.dataTable.settings`.\n *  @member\n *  @type array\n *  @default []\n *  @private\n */\nDataTable.settings = [];\n\n/**\n * Object models container, for the various models that DataTables has\n * available to it. These models define the objects that are used to hold\n * the active state and configuration of the table.\n *  @namespace\n */\nDataTable.models = {};\n\n\n\n/**\n * Template object for the way in which DataTables holds information about\n * search information for the global filter and individual column filters.\n *  @namespace\n */\nDataTable.models.oSearch = {\n\t/**\n\t * Flag to indicate if the filtering should be case insensitive or not\n\t *  @type boolean\n\t *  @default true\n\t */\n\t\"bCaseInsensitive\": true,\n\n\t/**\n\t * Applied search term\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t */\n\t\"sSearch\": \"\",\n\n\t/**\n\t * Flag to indicate if the search term should be interpreted as a\n\t * regular expression (true) or not (false) and therefore and special\n\t * regex characters escaped.\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"bRegex\": false,\n\n\t/**\n\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t *  @type boolean\n\t *  @default true\n\t */\n\t\"bSmart\": true,\n\n\t/**\n\t * Flag to indicate if DataTables should only trigger a search when\n\t * the return key is pressed.\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"return\": false\n};\n\n\n\n\n/**\n * Template object for the way in which DataTables holds information about\n * each individual row. This is the object format used for the settings\n * aoData array.\n *  @namespace\n */\nDataTable.models.oRow = {\n\t/**\n\t * TR element for the row\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTr\": null,\n\n\t/**\n\t * Array of TD elements for each row. This is null until the row has been\n\t * created.\n\t *  @type array nodes\n\t *  @default []\n\t */\n\t\"anCells\": null,\n\n\t/**\n\t * Data object from the original data source for the row. This is either\n\t * an array if using the traditional form of DataTables, or an object if\n\t * using mData options. The exact type will depend on the passed in\n\t * data from the data source, or will be an array if using DOM a data\n\t * source.\n\t *  @type array|object\n\t *  @default []\n\t */\n\t\"_aData\": [],\n\n\t/**\n\t * Sorting data cache - this array is ostensibly the same length as the\n\t * number of columns (although each index is generated only as it is\n\t * needed), and holds the data that is used for sorting each column in the\n\t * row. We do this cache generation at the start of the sort in order that\n\t * the formatting of the sort data need be done only once for each cell\n\t * per sort. This array should not be read from or written to by anything\n\t * other than the master sorting methods.\n\t *  @type array\n\t *  @default null\n\t *  @private\n\t */\n\t\"_aSortData\": null,\n\n\t/**\n\t * Per cell filtering data cache. As per the sort data cache, used to\n\t * increase the performance of the filtering in DataTables\n\t *  @type array\n\t *  @default null\n\t *  @private\n\t */\n\t\"_aFilterData\": null,\n\n\t/**\n\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t * in this case a string rather than an array. This is easily computed with\n\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t * needed on every search (memory traded for performance)\n\t *  @type array\n\t *  @default null\n\t *  @private\n\t */\n\t\"_sFilterRow\": null,\n\n\t/**\n\t * Cache of the class name that DataTables has applied to the row, so we\n\t * can quickly look at this variable rather than needing to do a DOM check\n\t * on className for the nTr property.\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t *  @private\n\t */\n\t\"_sRowStripe\": \"\",\n\n\t/**\n\t * Denote if the original data source was from the DOM, or the data source\n\t * object. This is used for invalidating data, so DataTables can\n\t * automatically read data from the original source, unless uninstructed\n\t * otherwise.\n\t *  @type string\n\t *  @default null\n\t *  @private\n\t */\n\t\"src\": null,\n\n\t/**\n\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t * object, but want to know the index\n\t *  @type integer\n\t *  @default -1\n\t *  @private\n\t */\n\t\"idx\": -1\n};\n\n\n/**\n * Template object for the column information object in DataTables. This object\n * is held in the settings aoColumns array and contains all the information that\n * DataTables needs about each individual column.\n *\n * Note that this object is related to {@link DataTable.defaults.column}\n * but this one is the internal data store for DataTables's cache of columns.\n * It should NOT be manipulated outside of DataTables. Any configuration should\n * be done through the initialisation options.\n *  @namespace\n */\nDataTable.models.oColumn = {\n\t/**\n\t * Column index. This could be worked out on-the-fly with $.inArray, but it\n\t * is faster to just hold it as a variable\n\t *  @type integer\n\t *  @default null\n\t */\n\t\"idx\": null,\n\n\t/**\n\t * A list of the columns that sorting should occur on when this column\n\t * is sorted. That this property is an array allows multi-column sorting\n\t * to be defined for a column (for example first name / last name columns\n\t * would benefit from this). The values are integers pointing to the\n\t * columns to be sorted on (typically it will be a single integer pointing\n\t * at itself, but that doesn't need to be the case).\n\t *  @type array\n\t */\n\t\"aDataSort\": null,\n\n\t/**\n\t * Define the sorting directions that are applied to the column, in sequence\n\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t * as the sorting direction when the column if first sorted (clicked on).\n\t * Sort it again (click again) and it will move on to the next index.\n\t * Repeat until loop.\n\t *  @type array\n\t */\n\t\"asSorting\": null,\n\n\t/**\n\t * Flag to indicate if the column is searchable, and thus should be included\n\t * in the filtering or not.\n\t *  @type boolean\n\t */\n\t\"bSearchable\": null,\n\n\t/**\n\t * Flag to indicate if the column is sortable or not.\n\t *  @type boolean\n\t */\n\t\"bSortable\": null,\n\n\t/**\n\t * Flag to indicate if the column is currently visible in the table or not\n\t *  @type boolean\n\t */\n\t\"bVisible\": null,\n\n\t/**\n\t * Store for manual type assignment using the `column.type` option. This\n\t * is held in store so we can manipulate the column's `sType` property.\n\t *  @type string\n\t *  @default null\n\t *  @private\n\t */\n\t\"_sManualType\": null,\n\n\t/**\n\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t * source for filtering or sorting. True is either are.\n\t *  @type boolean\n\t *  @default false\n\t *  @private\n\t */\n\t\"_bAttrSrc\": false,\n\n\t/**\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t * allowing you to modify the DOM element (add background colour for example) when the\n\t * element is available.\n\t *  @type function\n\t *  @param {element} nTd The TD node that has been created\n\t *  @param {*} sData The Data for the cell\n\t *  @param {array|object} oData The data for the whole row\n\t *  @param {int} iRow The row index for the aoData data store\n\t *  @default null\n\t */\n\t\"fnCreatedCell\": null,\n\n\t/**\n\t * Function to get data from a cell in a column. You should <b>never</b>\n\t * access data directly through _aData internally in DataTables - always use\n\t * the method attached to this property. It allows mData to function as\n\t * required. This function is automatically assigned by the column\n\t * initialisation method\n\t *  @type function\n\t *  @param {array|object} oData The data array/object for the array\n\t *    (i.e. aoData[]._aData)\n\t *  @param {string} sSpecific The specific data type you want to get -\n\t *    'display', 'type' 'filter' 'sort'\n\t *  @returns {*} The data for the cell from the given row's data\n\t *  @default null\n\t */\n\t\"fnGetData\": null,\n\n\t/**\n\t * Function to set data for a cell in the column. You should <b>never</b>\n\t * set the data directly to _aData internally in DataTables - always use\n\t * this method. It allows mData to function as required. This function\n\t * is automatically assigned by the column initialisation method\n\t *  @type function\n\t *  @param {array|object} oData The data array/object for the array\n\t *    (i.e. aoData[]._aData)\n\t *  @param {*} sValue Value to set\n\t *  @default null\n\t */\n\t\"fnSetData\": null,\n\n\t/**\n\t * Property to read the value for the cells in the column from the data\n\t * source array / object. If null, then the default content is used, if a\n\t * function is given then the return from the function is used.\n\t *  @type function|int|string|null\n\t *  @default null\n\t */\n\t\"mData\": null,\n\n\t/**\n\t * Partner property to mData which is used (only when defined) to get\n\t * the data - i.e. it is basically the same as mData, but without the\n\t * 'set' option, and also the data fed to it is the result from mData.\n\t * This is the rendering method to match the data method of mData.\n\t *  @type function|int|string|null\n\t *  @default null\n\t */\n\t\"mRender\": null,\n\n\t/**\n\t * Unique header TH/TD element for this column - this is what the sorting\n\t * listener is attached to (if sorting is enabled.)\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTh\": null,\n\n\t/**\n\t * Unique footer TH/TD element for this column (if there is one). Not used\n\t * in DataTables as such, but can be used for plug-ins to reference the\n\t * footer for each column.\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTf\": null,\n\n\t/**\n\t * The class to apply to all TD elements in the table's TBODY for the column\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sClass\": null,\n\n\t/**\n\t * When DataTables calculates the column widths to assign to each column,\n\t * it finds the longest string in each column and then constructs a\n\t * temporary table and reads the widths from that. The problem with this\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t * string - thus the calculation can go wrong (doing it properly and putting\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t * a \"work around\" we provide this option. It will append its value to the\n\t * text that is found to be the longest string for the column - i.e. padding.\n\t *  @type string\n\t */\n\t\"sContentPadding\": null,\n\n\t/**\n\t * Allows a default value to be given for a column's data, and will be used\n\t * whenever a null data source is encountered (this can be because mData\n\t * is set to null, or because the data source itself is null).\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sDefaultContent\": null,\n\n\t/**\n\t * Name for the column, allowing reference to the column by name as well as\n\t * by index (needs a lookup to work by name).\n\t *  @type string\n\t */\n\t\"sName\": null,\n\n\t/**\n\t * Custom sorting data type - defines which of the available plug-ins in\n\t * afnSortData the custom sorting will use - if any is defined.\n\t *  @type string\n\t *  @default std\n\t */\n\t\"sSortDataType\": 'std',\n\n\t/**\n\t * Class to be applied to the header element when sorting on this column\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sSortingClass\": null,\n\n\t/**\n\t * Class to be applied to the header element when sorting on this column -\n\t * when jQuery UI theming is used.\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sSortingClassJUI\": null,\n\n\t/**\n\t * Title of the column - what is seen in the TH element (nTh).\n\t *  @type string\n\t */\n\t\"sTitle\": null,\n\n\t/**\n\t * Column sorting and filtering type\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sType\": null,\n\n\t/**\n\t * Width of the column\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sWidth\": null,\n\n\t/**\n\t * Width of the column when it was first \"encountered\"\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sWidthOrig\": null\n};\n\n\n/*\n * Developer note: The properties of the object below are given in Hungarian\n * notation, that was used as the interface for DataTables prior to v1.10, however\n * from v1.10 onwards the primary interface is camel case. In order to avoid\n * breaking backwards compatibility utterly with this change, the Hungarian\n * version is still, internally the primary interface, but is is not documented\n * - hence the @name tags in each doc comment. This allows a Javascript function\n * to create a map from Hungarian notation to camel case (going the other direction\n * would require each property to be listed, which would add around 3K to the size\n * of DataTables, while this method is about a 0.5K hit).\n *\n * Ultimately this does pave the way for Hungarian notation to be dropped\n * completely, but that is a massive amount of work and will break current\n * installs (therefore is on-hold until v2).\n */\n\n/**\n * Initialisation options that can be given to DataTables at initialisation\n * time.\n *  @namespace\n */\nDataTable.defaults = {\n\t/**\n\t * An array of data to use for the table, passed in at initialisation which\n\t * will be used in preference to any data which is already in the DOM. This is\n\t * particularly useful for constructing tables purely in Javascript, for\n\t * example with a custom Ajax call.\n\t *  @type array\n\t *  @default null\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.data\n\t *\n\t *  @example\n\t *    // Using a 2D array data source\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"data\": [\n\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n\t *        ],\n\t *        \"columns\": [\n\t *          { \"title\": \"Engine\" },\n\t *          { \"title\": \"Browser\" },\n\t *          { \"title\": \"Platform\" },\n\t *          { \"title\": \"Version\" },\n\t *          { \"title\": \"Grade\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using an array of objects as a data source (`data`)\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"data\": [\n\t *          {\n\t *            \"engine\":   \"Trident\",\n\t *            \"browser\":  \"Internet Explorer 4.0\",\n\t *            \"platform\": \"Win 95+\",\n\t *            \"version\":  4,\n\t *            \"grade\":    \"X\"\n\t *          },\n\t *          {\n\t *            \"engine\":   \"Trident\",\n\t *            \"browser\":  \"Internet Explorer 5.0\",\n\t *            \"platform\": \"Win 95+\",\n\t *            \"version\":  5,\n\t *            \"grade\":    \"C\"\n\t *          }\n\t *        ],\n\t *        \"columns\": [\n\t *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n\t *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n\t *          { \"title\": \"Platform\", \"data\": \"platform\" },\n\t *          { \"title\": \"Version\",  \"data\": \"version\" },\n\t *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"aaData\": null,\n\n\n\t/**\n\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t * initialisation. You can define which column(s) the sort is performed\n\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t * should contain an array for each column to be sorted initially containing\n\t * the column's index and a direction string ('asc' or 'desc').\n\t *  @type array\n\t *  @default [[0,'asc']]\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.order\n\t *\n\t *  @example\n\t *    // Sort by 3rd column first, and then 4th column\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"order\": [[2,'asc'], [3,'desc']]\n\t *      } );\n\t *    } );\n\t *\n\t *    // No initial sorting\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"order\": []\n\t *      } );\n\t *    } );\n\t */\n\t\"aaSorting\": [[0,'asc']],\n\n\n\t/**\n\t * This parameter is basically identical to the `sorting` parameter, but\n\t * cannot be overridden by user interaction with the table. What this means\n\t * is that you could have a column (visible or hidden) which the sorting\n\t * will always be forced on first - any sorting after that (from the user)\n\t * will then be performed as required. This can be useful for grouping rows\n\t * together.\n\t *  @type array\n\t *  @default null\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.orderFixed\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"orderFixed\": [[0,'asc']]\n\t *      } );\n\t *    } )\n\t */\n\t\"aaSortingFixed\": [],\n\n\n\t/**\n\t * DataTables can be instructed to load data to display in the table from a\n\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t *\n\t * The `ajax` property has three different modes of operation, depending on\n\t * how it is defined. These are:\n\t *\n\t * * `string` - Set the URL from where the data should be loaded from.\n\t * * `object` - Define properties for `jQuery.ajax`.\n\t * * `function` - Custom data get function\n\t *\n\t * `string`\n\t * --------\n\t *\n\t * As a string, the `ajax` property simply defines the URL from which\n\t * DataTables will load data.\n\t *\n\t * `object`\n\t * --------\n\t *\n\t * As an object, the parameters in the object are passed to\n\t * [jQuery.ajax](https://api.jquery.com/jQuery.ajax/) allowing fine control\n\t * of the Ajax request. DataTables has a number of default parameters which\n\t * you can override using this option. Please refer to the jQuery\n\t * documentation for a full description of the options available, although\n\t * the following parameters provide additional options in DataTables or\n\t * require special consideration:\n\t *\n\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t *   can also be used as a function to manipulate the data DataTables sends\n\t *   to the server. The function takes a single parameter, an object of\n\t *   parameters with the values that DataTables has readied for sending. An\n\t *   object may be returned which will be merged into the DataTables\n\t *   defaults, or you can add the items to the object that was passed in and\n\t *   not return anything from the function. This supersedes `fnServerParams`\n\t *   from DataTables 1.9-.\n\t *\n\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t *   from an Ajax source or for server-side processing - this parameter\n\t *   allows that property to be changed. You can use Javascript dotted\n\t *   object notation to get a data source for multiple levels of nesting, or\n\t *   it my be used as a function. As a function it takes a single parameter,\n\t *   the JSON returned from the server, which can be manipulated as\n\t *   required, with the returned value being that used by DataTables as the\n\t *   data source for the table. This supersedes `sAjaxDataProp` from\n\t *   DataTables 1.9-.\n\t *\n\t * * `success` - Should not be overridden it is used internally in\n\t *   DataTables. To manipulate / transform the data returned by the server\n\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t *\n\t * `function`\n\t * ----------\n\t *\n\t * As a function, making the Ajax call is left up to yourself allowing\n\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t * than Ajax could be used to obtain the required data, such as Web storage\n\t * or an AIR database.\n\t *\n\t * The function is given four parameters and no return is required. The\n\t * parameters are:\n\t *\n\t * 1. _object_ - Data to send to the server\n\t * 2. _function_ - Callback function that must be executed when the required\n\t *    data has been obtained. That data should be passed into the callback\n\t *    as the only parameter\n\t * 3. _object_ - DataTables settings object for the table\n\t *\n\t * Note that this supersedes `fnServerData` from DataTables 1.9-.\n\t *\n\t *  @type string|object|function\n\t *  @default null\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.ajax\n\t *  @since 1.10.0\n\t *\n\t * @example\n\t *   // Get JSON data from a file via Ajax.\n\t *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": \"data.json\"\n\t *   } );\n\t *\n\t * @example\n\t *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n\t *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": {\n\t *       \"url\": \"data.json\",\n\t *       \"dataSrc\": \"tableData\"\n\t *     }\n\t *   } );\n\t *\n\t * @example\n\t *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n\t *   // from a plain array rather than an array in an object\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": {\n\t *       \"url\": \"data.json\",\n\t *       \"dataSrc\": \"\"\n\t *     }\n\t *   } );\n\t *\n\t * @example\n\t *   // Manipulate the data returned from the server - add a link to data\n\t *   // (note this can, should, be done using `render` for the column - this\n\t *   // is just a simple example of how the data can be manipulated).\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": {\n\t *       \"url\": \"data.json\",\n\t *       \"dataSrc\": function ( json ) {\n\t *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n\t *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n\t *         }\n\t *         return json;\n\t *       }\n\t *     }\n\t *   } );\n\t *\n\t * @example\n\t *   // Add data to the request\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": {\n\t *       \"url\": \"data.json\",\n\t *       \"data\": function ( d ) {\n\t *         return {\n\t *           \"extra_search\": $('#extra').val()\n\t *         };\n\t *       }\n\t *     }\n\t *   } );\n\t *\n\t * @example\n\t *   // Send request as POST\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": {\n\t *       \"url\": \"data.json\",\n\t *       \"type\": \"POST\"\n\t *     }\n\t *   } );\n\t *\n\t * @example\n\t *   // Get the data from localStorage (could interface with a form for\n\t *   // adding, editing and removing rows).\n\t *   $('#example').dataTable( {\n\t *     \"ajax\": function (data, callback, settings) {\n\t *       callback(\n\t *         JSON.parse( localStorage.getItem('dataTablesData') )\n\t *       );\n\t *     }\n\t *   } );\n\t */\n\t\"ajax\": null,\n\n\n\t/**\n\t * This parameter allows you to readily specify the entries in the length drop\n\t * down menu that DataTables shows when pagination is enabled. It can be\n\t * either a 1D array of options which will be used for both the displayed\n\t * option and the value, or a 2D array which will use the array in the first\n\t * position as the value, and the array in the second position as the\n\t * displayed options (useful for language strings such as 'All').\n\t *\n\t * Note that the `pageLength` property will be automatically set to the\n\t * first value given in this array, unless `pageLength` is also provided.\n\t *  @type array\n\t *  @default [ 10, 25, 50, 100 ]\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.lengthMenu\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n\t *      } );\n\t *    } );\n\t */\n\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\n\n\t/**\n\t * The `columns` option in the initialisation parameter allows you to define\n\t * details about the way individual columns behave. For a full list of\n\t * column options that can be set, please see\n\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t * define your columns, you must have an entry in the array for every single\n\t * column that you have in your table (these can be null if you don't which\n\t * to specify any options).\n\t *  @member\n\t *\n\t *  @name DataTable.defaults.column\n\t */\n\t\"aoColumns\": null,\n\n\t/**\n\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t * column, multiple columns, or all columns, using the `targets` property of\n\t * each object in the array. This allows great flexibility when creating\n\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t * columns you specifically want. `columnDefs` may use any of the column\n\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t * have `targets` defined in each object in the array. Values in the `targets`\n\t * array may be:\n\t *   <ul>\n\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t *     <li>a negative integer - column index counting from the right</li>\n\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t *   </ul>\n\t *  @member\n\t *\n\t *  @name DataTable.defaults.columnDefs\n\t */\n\t\"aoColumnDefs\": null,\n\n\n\t/**\n\t * Basically the same as `search`, this parameter defines the individual column\n\t * filtering state at initialisation time. The array must be of the same size\n\t * as the number of columns, and each element be an object with the parameters\n\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t * accepted and the default will be used.\n\t *  @type array\n\t *  @default []\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.searchCols\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"searchCols\": [\n\t *          null,\n\t *          { \"search\": \"My filter\" },\n\t *          null,\n\t *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n\t *        ]\n\t *      } );\n\t *    } )\n\t */\n\t\"aoSearchCols\": [],\n\n\n\t/**\n\t * An array of CSS classes that should be applied to displayed rows. This\n\t * array may be of any length, and DataTables will apply each class\n\t * sequentially, looping when required.\n\t *  @type array\n\t *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n\t *    options</i>\n\t *\n\t *  @dtopt Option\n\t *  @name DataTable.defaults.stripeClasses\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n\t *      } );\n\t *    } )\n\t */\n\t\"asStripeClasses\": null,\n\n\n\t/**\n\t * Enable or disable automatic column width calculation. This can be disabled\n\t * as an optimisation (it takes some time to calculate the widths) if the\n\t * tables widths are passed in using `columns`.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.autoWidth\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"autoWidth\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bAutoWidth\": true,\n\n\n\t/**\n\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t * are using an Ajax or JS data source for the table. This option, when set to\n\t * true, will cause DataTables to defer the creation of the table elements for\n\t * each row until they are needed for a draw - saving a significant amount of\n\t * time.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.deferRender\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"ajax\": \"sources/arrays.txt\",\n\t *        \"deferRender\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bDeferRender\": false,\n\n\n\t/**\n\t * Replace a DataTable which matches the given selector and replace it with\n\t * one which has the properties of the new initialisation object passed. If no\n\t * table matches the selector, then the new DataTable will be constructed as\n\t * per normal.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.destroy\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"srollY\": \"200px\",\n\t *        \"paginate\": false\n\t *      } );\n\t *\n\t *      // Some time later....\n\t *      $('#example').dataTable( {\n\t *        \"filter\": false,\n\t *        \"destroy\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bDestroy\": false,\n\n\n\t/**\n\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t * that it allows the end user to input multiple words (space separated) and\n\t * will match a row containing those words, even if not in the order that was\n\t * specified (this allow matching across multiple columns). Note that if you\n\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t * default filtering input box and retain filtering abilities, please use\n\t * {@link DataTable.defaults.dom}.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.searching\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"searching\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bFilter\": true,\n\n\n\t/**\n\t * Enable or disable the table information display. This shows information\n\t * about the data that is currently visible on the page, including information\n\t * about filtered data if that action is being performed.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.info\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"info\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bInfo\": true,\n\n\n\t/**\n\t * Allows the end user to select the size of a formatted page from a select\n\t * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.lengthChange\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"lengthChange\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bLengthChange\": true,\n\n\n\t/**\n\t * Enable or disable pagination.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.paging\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"paging\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bPaginate\": true,\n\n\n\t/**\n\t * Enable or disable the display of a 'processing' indicator when the table is\n\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t * large amounts of data where it can take a noticeable amount of time to sort\n\t * the entries.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.processing\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"processing\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bProcessing\": false,\n\n\n\t/**\n\t * Retrieve the DataTables object for the given selector. Note that if the\n\t * table has already been initialised, this parameter will cause DataTables\n\t * to simply return the object that has already been set up - it will not take\n\t * account of any changes you might have made to the initialisation object\n\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t * you need.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.retrieve\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      initTable();\n\t *      tableActions();\n\t *    } );\n\t *\n\t *    function initTable ()\n\t *    {\n\t *      return $('#example').dataTable( {\n\t *        \"scrollY\": \"200px\",\n\t *        \"paginate\": false,\n\t *        \"retrieve\": true\n\t *      } );\n\t *    }\n\t *\n\t *    function tableActions ()\n\t *    {\n\t *      var table = initTable();\n\t *      // perform API operations with oTable\n\t *    }\n\t */\n\t\"bRetrieve\": false,\n\n\n\t/**\n\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t * the table's viewport to the given height at all times (useful for layout).\n\t * However, this can look odd when filtering data down to a small data set,\n\t * and the footer is left \"floating\" further down. This parameter (when\n\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t * the result set will fit within the given Y height.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.scrollCollapse\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"scrollY\": \"200\",\n\t *        \"scrollCollapse\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bScrollCollapse\": false,\n\n\n\t/**\n\t * Configure DataTables to use server-side processing. Note that the\n\t * `ajax` parameter must also be given in order to give DataTables a\n\t * source to obtain the required data for each draw.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Features\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.serverSide\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"serverSide\": true,\n\t *        \"ajax\": \"xhr.php\"\n\t *      } );\n\t *    } );\n\t */\n\t\"bServerSide\": false,\n\n\n\t/**\n\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t * disabled by the `sortable` option for each column.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.ordering\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"ordering\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bSort\": true,\n\n\n\t/**\n\t * Enable or display DataTables' ability to sort multiple columns at the\n\t * same time (activated by shift-click by the user).\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.orderMulti\n\t *\n\t *  @example\n\t *    // Disable multiple column sorting ability\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"orderMulti\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bSortMulti\": true,\n\n\n\t/**\n\t * Allows control over whether DataTables should use the top (true) unique\n\t * cell that is found for a single column, or the bottom (false - default).\n\t * This is useful when using complex headers.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.orderCellsTop\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"orderCellsTop\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bSortCellsTop\": false,\n\n\n\t/**\n\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t * presented as a feature switch as it can increase processing time (while\n\t * classes are removed and added) so for large data sets you might want to\n\t * turn this off.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.orderClasses\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"orderClasses\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bSortClasses\": true,\n\n\n\t/**\n\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t * used to save table display information such as pagination information,\n\t * display length, filtering and sorting. As such when the end user reloads\n\t * the page the display display will match what thy had previously set up.\n\t *\n\t * Due to the use of `localStorage` the default state saving is not supported\n\t * in IE6 or 7. If state saving is required in those browsers, use\n\t * `stateSaveCallback` to provide a storage solution such as cookies.\n\t *  @type boolean\n\t *  @default false\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.stateSave\n\t *\n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bStateSave\": false,\n\n\n\t/**\n\t * This function is called when a TR element is created (and all TD child\n\t * elements have been inserted), or registered if using a DOM source, allowing\n\t * manipulation of the TR element (adding classes etc).\n\t *  @type function\n\t *  @param {node} row \"TR\" element for the current row\n\t *  @param {array} data Raw data array for this row\n\t *  @param {int} dataIndex The index of this row in the internal aoData array\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.createdRow\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"createdRow\": function( row, data, dataIndex ) {\n\t *          // Bold the grade for all 'A' grade browsers\n\t *          if ( data[4] == \"A\" )\n\t *          {\n\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t *          }\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnCreatedRow\": null,\n\n\n\t/**\n\t * This function is called on every 'draw' event, and allows you to\n\t * dynamically modify any aspect you want about the created DOM.\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.drawCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"drawCallback\": function( settings ) {\n\t *          alert( 'DataTables has redrawn the table' );\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnDrawCallback\": null,\n\n\n\t/**\n\t * Identical to fnHeaderCallback() but for the table footer this function\n\t * allows you to modify the table footer on every 'draw' event.\n\t *  @type function\n\t *  @param {node} foot \"TR\" element for the footer\n\t *  @param {array} data Full table data (as derived from the original HTML)\n\t *  @param {int} start Index for the current display starting point in the\n\t *    display array\n\t *  @param {int} end Index for the current display ending point in the\n\t *    display array\n\t *  @param {array int} display Index array to translate the visual position\n\t *    to the full data array\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.footerCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n\t *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n\t *        }\n\t *      } );\n\t *    } )\n\t */\n\t\"fnFooterCallback\": null,\n\n\n\t/**\n\t * When rendering large numbers in the information element for the table\n\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t * function will override the default method DataTables uses.\n\t *  @type function\n\t *  @member\n\t *  @param {int} toFormat number to be formatted\n\t *  @returns {string} formatted string for DataTables to show the number\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.formatNumber\n\t *\n\t *  @example\n\t *    // Format a number using a single quote for the separator (note that\n\t *    // this can also be done with the language.thousands option)\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"formatNumber\": function ( toFormat ) {\n\t *          return toFormat.toString().replace(\n\t *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n\t *          );\n\t *        };\n\t *      } );\n\t *    } );\n\t */\n\t\"fnFormatNumber\": function ( toFormat ) {\n\t\treturn toFormat.toString().replace(\n\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\tthis.oLanguage.sThousands\n\t\t);\n\t},\n\n\n\t/**\n\t * This function is called on every 'draw' event, and allows you to\n\t * dynamically modify the header row. This can be used to calculate and\n\t * display useful information about the table.\n\t *  @type function\n\t *  @param {node} head \"TR\" element for the header\n\t *  @param {array} data Full table data (as derived from the original HTML)\n\t *  @param {int} start Index for the current display starting point in the\n\t *    display array\n\t *  @param {int} end Index for the current display ending point in the\n\t *    display array\n\t *  @param {array int} display Index array to translate the visual position\n\t *    to the full data array\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.headerCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"fheaderCallback\": function( head, data, start, end, display ) {\n\t *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n\t *        }\n\t *      } );\n\t *    } )\n\t */\n\t\"fnHeaderCallback\": null,\n\n\n\t/**\n\t * The information element can be used to convey information about the current\n\t * state of the table. Although the internationalisation options presented by\n\t * DataTables are quite capable of dealing with most customisations, there may\n\t * be times where you wish to customise the string further. This callback\n\t * allows you to do exactly that.\n\t *  @type function\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {int} start Starting position in data for the draw\n\t *  @param {int} end End position in data for the draw\n\t *  @param {int} max Total number of rows in the table (regardless of\n\t *    filtering)\n\t *  @param {int} total Total number of rows in the data set, after filtering\n\t *  @param {string} pre The string that DataTables has formatted using it's\n\t *    own rules\n\t *  @returns {string} The string to be displayed in the information element.\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.infoCallback\n\t *\n\t *  @example\n\t *    $('#example').dataTable( {\n\t *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n\t *        return start +\" to \"+ end;\n\t *      }\n\t *    } );\n\t */\n\t\"fnInfoCallback\": null,\n\n\n\t/**\n\t * Called when the table has been initialised. Normally DataTables will\n\t * initialise sequentially and there will be no need for this function,\n\t * however, this does not hold true when using external language information\n\t * since that is obtained using an async XHR call.\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} json The JSON object request from the server - only\n\t *    present if client-side Ajax sourced data is used\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.initComplete\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"initComplete\": function(settings, json) {\n\t *          alert( 'DataTables has finished its initialisation.' );\n\t *        }\n\t *      } );\n\t *    } )\n\t */\n\t\"fnInitComplete\": null,\n\n\n\t/**\n\t * Called at the very start of each table draw and can be used to cancel the\n\t * draw by returning false, any other return (including undefined) results in\n\t * the full draw occurring).\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *  @returns {boolean} False will cancel the draw, anything else (including no\n\t *    return) will allow it to complete.\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.preDrawCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"preDrawCallback\": function( settings ) {\n\t *          if ( $('#test').val() == 1 ) {\n\t *            return false;\n\t *          }\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnPreDrawCallback\": null,\n\n\n\t/**\n\t * This function allows you to 'post process' each row after it have been\n\t * generated for each table draw, but before it is rendered on screen. This\n\t * function might be used for setting the row class name etc.\n\t *  @type function\n\t *  @param {node} row \"TR\" element for the current row\n\t *  @param {array} data Raw data array for this row\n\t *  @param {int} displayIndex The display index for the current table draw\n\t *  @param {int} displayIndexFull The index of the data in the full list of\n\t *    rows (after filtering)\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.rowCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n\t *          // Bold the grade for all 'A' grade browsers\n\t *          if ( data[4] == \"A\" ) {\n\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t *          }\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnRowCallback\": null,\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t * This parameter allows you to override the default function which obtains\n\t * the data from the server so something more suitable for your application.\n\t * For example you could use POST data, or pull information from a Gears or\n\t * AIR database.\n\t *  @type function\n\t *  @member\n\t *  @param {string} source HTTP source to obtain the data from (`ajax`)\n\t *  @param {array} data A key/value pair object containing the data to send\n\t *    to the server\n\t *  @param {function} callback to be called on completion of the data get\n\t *    process that will draw the data on the page.\n\t *  @param {object} settings DataTables settings object\n\t *\n\t *  @dtopt Callbacks\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.serverData\n\t *\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t */\n\t\"fnServerData\": null,\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t *  It is often useful to send extra data to the server when making an Ajax\n\t * request - for example custom filtering information, and this callback\n\t * function makes it trivial to send extra information to the server. The\n\t * passed in parameter is the data set that has been constructed by\n\t * DataTables, and you can add to this or modify it as you require.\n\t *  @type function\n\t *  @param {array} data Data array (array of objects which are name/value\n\t *    pairs) that has been constructed by DataTables and will be sent to the\n\t *    server. In the case of Ajax sourced data with server-side processing\n\t *    this will be an empty array, for server-side processing there will be a\n\t *    significant number of parameters!\n\t *  @returns {undefined} Ensure that you modify the data array passed in,\n\t *    as this is passed by reference.\n\t *\n\t *  @dtopt Callbacks\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.serverParams\n\t *\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t */\n\t\"fnServerParams\": null,\n\n\n\t/**\n\t * Load the table state. With this function you can define from where, and how, the\n\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t * but you might wish to use a server-side database or cookies.\n\t *  @type function\n\t *  @member\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} callback Callback that can be executed when done. It\n\t *    should be passed the loaded state object.\n\t *  @return {object} The DataTables state object to be loaded\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.stateLoadCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateLoadCallback\": function (settings, callback) {\n\t *          $.ajax( {\n\t *            \"url\": \"/state_load\",\n\t *            \"dataType\": \"json\",\n\t *            \"success\": function (json) {\n\t *              callback( json );\n\t *            }\n\t *          } );\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateLoadCallback\": function ( settings ) {\n\t\ttry {\n\t\t\treturn JSON.parse(\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\n\t\t\t\t)\n\t\t\t);\n\t\t} catch (e) {\n\t\t\treturn {};\n\t\t}\n\t},\n\n\n\t/**\n\t * Callback which allows modification of the saved state prior to loading that state.\n\t * This callback is called when the table is loading state from the stored data, but\n\t * prior to the settings object being modified by the saved state. Note that for\n\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t * a plug-in.\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} data The state object that is to be loaded\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.stateLoadParams\n\t *\n\t *  @example\n\t *    // Remove a saved filter, so filtering is never loaded\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateLoadParams\": function (settings, data) {\n\t *          data.oSearch.sSearch = \"\";\n\t *        }\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Disallow state loading by returning false\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateLoadParams\": function (settings, data) {\n\t *          return false;\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateLoadParams\": null,\n\n\n\t/**\n\t * Callback that is called when the state has been loaded from the state saving method\n\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} data The state object that was loaded\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.stateLoaded\n\t *\n\t *  @example\n\t *    // Show an alert with the filtering value that was saved\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateLoaded\": function (settings, data) {\n\t *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateLoaded\": null,\n\n\n\t/**\n\t * Save the table state. This function allows you to define where and how the state\n\t * information for the table is stored By default DataTables will use `localStorage`\n\t * but you might wish to use a server-side database or cookies.\n\t *  @type function\n\t *  @member\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} data The state object to be saved\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.stateSaveCallback\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateSaveCallback\": function (settings, data) {\n\t *          // Send an Ajax request to the server with the state object\n\t *          $.ajax( {\n\t *            \"url\": \"/state_save\",\n\t *            \"data\": data,\n\t *            \"dataType\": \"json\",\n\t *            \"method\": \"POST\"\n\t *            \"success\": function () {}\n\t *          } );\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateSaveCallback\": function ( settings, data ) {\n\t\ttry {\n\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\n\t\t\t\tJSON.stringify( data )\n\t\t\t);\n\t\t} catch (e) {}\n\t},\n\n\n\t/**\n\t * Callback which allows modification of the state to be saved. Called when the table\n\t * has changed state a new state save is required. This method allows modification of\n\t * the state saving object prior to actually doing the save, including addition or\n\t * other state properties or modification. Note that for plug-in authors, you should\n\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t *  @type function\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} data The state object to be saved\n\t *\n\t *  @dtopt Callbacks\n\t *  @name DataTable.defaults.stateSaveParams\n\t *\n\t *  @example\n\t *    // Remove a saved filter, so filtering is never saved\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateSave\": true,\n\t *        \"stateSaveParams\": function (settings, data) {\n\t *          data.oSearch.sSearch = \"\";\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateSaveParams\": null,\n\n\n\t/**\n\t * Duration for which the saved state information is considered valid. After this period\n\t * has elapsed the state will be returned to the default.\n\t * Value is given in seconds.\n\t *  @type int\n\t *  @default 7200 <i>(2 hours)</i>\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.stateDuration\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"stateDuration\": 60*60*24; // 1 day\n\t *      } );\n\t *    } )\n\t */\n\t\"iStateDuration\": 7200,\n\n\n\t/**\n\t * When enabled DataTables will not make a request to the server for the first\n\t * page draw - rather it will use the data already on the page (no sorting etc\n\t * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n\t * is used to indicate that deferred loading is required, but it is also used\n\t * to tell DataTables how many records there are in the full table (allowing\n\t * the information element and pagination to be displayed correctly). In the case\n\t * where a filtering is applied to the table on initial load, this can be\n\t * indicated by giving the parameter as an array, where the first element is\n\t * the number of records available after filtering and the second element is the\n\t * number of records without filtering (allowing the table information element\n\t * to be shown correctly).\n\t *  @type int | array\n\t *  @default null\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.deferLoading\n\t *\n\t *  @example\n\t *    // 57 records available in the table, no filtering applied\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"serverSide\": true,\n\t *        \"ajax\": \"scripts/server_processing.php\",\n\t *        \"deferLoading\": 57\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"serverSide\": true,\n\t *        \"ajax\": \"scripts/server_processing.php\",\n\t *        \"deferLoading\": [ 57, 100 ],\n\t *        \"search\": {\n\t *          \"search\": \"my_filter\"\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"iDeferLoading\": null,\n\n\n\t/**\n\t * Number of rows to display on a single page when using pagination. If\n\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t * this to a custom setting using a pop-up menu.\n\t *  @type int\n\t *  @default 10\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.pageLength\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"pageLength\": 50\n\t *      } );\n\t *    } )\n\t */\n\t\"iDisplayLength\": 10,\n\n\n\t/**\n\t * Define the starting point for data display when using DataTables with\n\t * pagination. Note that this parameter is the number of records, rather than\n\t * the page number, so if you have 10 records per page and want to start on\n\t * the third page, it should be \"20\".\n\t *  @type int\n\t *  @default 0\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.displayStart\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"displayStart\": 20\n\t *      } );\n\t *    } )\n\t */\n\t\"iDisplayStart\": 0,\n\n\n\t/**\n\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t * allows you to tab through the controls and press the enter key to activate them.\n\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t * disable built-in keyboard navigation.\n\t *  @type int\n\t *  @default 0\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.tabIndex\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"tabIndex\": 1\n\t *      } );\n\t *    } );\n\t */\n\t\"iTabIndex\": 0,\n\n\n\t/**\n\t * Classes that DataTables assigns to the various components and features\n\t * that it adds to the HTML table. This allows classes to be configured\n\t * during initialisation in addition to through the static\n\t * {@link DataTable.ext.oStdClasses} object).\n\t *  @namespace\n\t *  @name DataTable.defaults.classes\n\t */\n\t\"oClasses\": {},\n\n\n\t/**\n\t * All strings that DataTables uses in the user interface that it creates\n\t * are defined in this object, allowing you to modified them individually or\n\t * completely replace them all as required.\n\t *  @namespace\n\t *  @name DataTable.defaults.language\n\t */\n\t\"oLanguage\": {\n\t\t/**\n\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t * must be internationalised as well).\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.language.aria\n\t\t */\n\t\t\"oAria\": {\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t * sorted ascending by activing the column (click or return when focused).\n\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t *  @type string\n\t\t\t *  @default : activate to sort column ascending\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.aria.sortAscending\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"aria\": {\n\t\t\t *            \"sortAscending\": \" - click/return to sort ascending\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSortAscending\": \": activate to sort column ascending\",\n\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t * sorted descending by activing the column (click or return when focused).\n\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t *  @type string\n\t\t\t *  @default : activate to sort column ascending\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.aria.sortDescending\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"aria\": {\n\t\t\t *            \"sortDescending\": \" - click/return to sort descending\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSortDescending\": \": activate to sort column descending\"\n\t\t},\n\n\t\t/**\n\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t * control types.\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.language.paginate\n\t\t */\n\t\t\"oPaginate\": {\n\t\t\t/**\n\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t * button to take the user to the first page.\n\t\t\t *  @type string\n\t\t\t *  @default First\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.paginate.first\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"paginate\": {\n\t\t\t *            \"first\": \"First page\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sFirst\": \"First\",\n\n\n\t\t\t/**\n\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t * button to take the user to the last page.\n\t\t\t *  @type string\n\t\t\t *  @default Last\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.paginate.last\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"paginate\": {\n\t\t\t *            \"last\": \"Last page\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLast\": \"Last\",\n\n\n\t\t\t/**\n\t\t\t * Text to use for the 'next' pagination button (to take the user to the\n\t\t\t * next page).\n\t\t\t *  @type string\n\t\t\t *  @default Next\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.paginate.next\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"paginate\": {\n\t\t\t *            \"next\": \"Next page\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sNext\": \"Next\",\n\n\n\t\t\t/**\n\t\t\t * Text to use for the 'previous' pagination button (to take the user to\n\t\t\t * the previous page).\n\t\t\t *  @type string\n\t\t\t *  @default Previous\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.paginate.previous\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"paginate\": {\n\t\t\t *            \"previous\": \"Previous page\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sPrevious\": \"Previous\"\n\t\t},\n\n\t\t/**\n\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t * instead (either the default or given value).\n\t\t *  @type string\n\t\t *  @default No data available in table\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.emptyTable\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"emptyTable\": \"No data available in table\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sEmptyTable\": \"No data available in table\",\n\n\n\t\t/**\n\t\t * This string gives information to the end user about the information\n\t\t * that is current on display on the page. The following tokens can be\n\t\t * used in the string and will be dynamically replaced as the table\n\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t * removed as needed by the language requires:\n\t\t *\n\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t * * `\\_PAGE\\_` - Current page number\n\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t *\n\t\t *  @type string\n\t\t *  @default Showing _START_ to _END_ of _TOTAL_ entries\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.info\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n\n\n\t\t/**\n\t\t * Display information string for when the table is empty. Typically the\n\t\t * format of this string should match `info`.\n\t\t *  @type string\n\t\t *  @default Showing 0 to 0 of 0 entries\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.infoEmpty\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"infoEmpty\": \"No entries to show\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n\n\n\t\t/**\n\t\t * When a user filters the information in a table, this string is appended\n\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t *  @type string\n\t\t *  @default (filtered from _MAX_ total entries)\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.infoFiltered\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n\n\n\t\t/**\n\t\t * If can be useful to append extra information to the info string at times,\n\t\t * and this variable does exactly that. This information will be appended to\n\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t * being used) at all times.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.infoPostFix\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"infoPostFix\": \"All records shown are derived from real information.\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sInfoPostFix\": \"\",\n\n\n\t\t/**\n\t\t * This decimal place operator is a little different from the other\n\t\t * language options since DataTables doesn't output floating point\n\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t * what this parameter does is modify the sort methods of the table so\n\t\t * that numbers which are in a format which has a character other than\n\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t *\n\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t * the same table and still be sortable, the table must be consistent.\n\t\t * However, multiple different tables on the page can use different\n\t\t * decimal place characters.\n\t\t *  @type string\n\t\t *  @default \n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.decimal\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"decimal\": \",\"\n\t\t *          \"thousands\": \".\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDecimal\": \"\",\n\n\n\t\t/**\n\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t * used to format large numbers that are used in the table information.\n\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t * character you wish with this parameter.\n\t\t *  @type string\n\t\t *  @default ,\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.thousands\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"thousands\": \"'\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sThousands\": \",\",\n\n\n\t\t/**\n\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t * with a custom select box if required.\n\t\t *  @type string\n\t\t *  @default Show _MENU_ entries\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.lengthMenu\n\t\t *\n\t\t *  @example\n\t\t *    // Language change only\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"lengthMenu\": \"Display _MENU_ records\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Language and options change\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"lengthMenu\": 'Display <select>'+\n\t\t *            '<option value=\"10\">10</option>'+\n\t\t *            '<option value=\"20\">20</option>'+\n\t\t *            '<option value=\"30\">30</option>'+\n\t\t *            '<option value=\"40\">40</option>'+\n\t\t *            '<option value=\"50\">50</option>'+\n\t\t *            '<option value=\"-1\">All</option>'+\n\t\t *            '</select> records'\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sLengthMenu\": \"Show _MENU_ entries\",\n\n\n\t\t/**\n\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t * parameter is not used when loading data by server-side processing, just\n\t\t * Ajax sourced data with client-side processing.\n\t\t *  @type string\n\t\t *  @default Loading...\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.loadingRecords\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"loadingRecords\": \"Please wait - loading...\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sLoadingRecords\": \"Loading...\",\n\n\n\t\t/**\n\t\t * Text which is displayed when the table is processing a user action\n\t\t * (usually a sort command or similar).\n\t\t *  @type string\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.processing\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"processing\": \"DataTables is currently busy\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sProcessing\": \"\",\n\n\n\t\t/**\n\t\t * Details the actions that will be taken when the user types into the\n\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t * then the input box is appended to the string automatically.\n\t\t *  @type string\n\t\t *  @default Search:\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.search\n\t\t *\n\t\t *  @example\n\t\t *    // Input text box will be appended at the end automatically\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"search\": \"Filter records:\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Specify where the filter should appear\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"search\": \"Apply filter _INPUT_ to table\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sSearch\": \"Search:\",\n\n\n\t\t/**\n\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t *  @type string\n\t\t *  @default \n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t */\n\t\t\"sSearchPlaceholder\": \"\",\n\n\n\t\t/**\n\t\t * All of the language information can be stored in a file on the\n\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t * and the object has the same properties as the oLanguage object in the\n\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t * the example language files to see how this works in action.\n\t\t *  @type string\n\t\t *  @default <i>Empty string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.url\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"url\": \"https://www.sprymedia.co.uk/dataTables/lang.txt\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sUrl\": \"\",\n\n\n\t\t/**\n\t\t * Text shown inside the table records when the is no information to be\n\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t * information in the table at all (regardless of filtering).\n\t\t *  @type string\n\t\t *  @default No matching records found\n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.zeroRecords\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"language\": {\n\t\t *          \"zeroRecords\": \"No records to display\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sZeroRecords\": \"No matching records found\"\n\t},\n\n\n\t/**\n\t * This parameter allows you to have define the global filtering state at\n\t * initialisation time. As an object the `search` parameter must be\n\t * defined, but all other parameters are optional. When `regex` is true,\n\t * the search string will be treated as a regular expression, when false\n\t * (default) it will be treated as a straight string. When `smart`\n\t * DataTables will use it's smart filtering methods (to word match at\n\t * any point in the data), when false this will not be done.\n\t *  @namespace\n\t *  @extends DataTable.models.oSearch\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.search\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"search\": {\"search\": \"Initial search\"}\n\t *      } );\n\t *    } )\n\t */\n\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t * By default DataTables will look for the property `data` (or `aaData` for\n\t * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n\t * source or for server-side processing - this parameter allows that\n\t * property to be changed. You can use Javascript dotted object notation to\n\t * get a data source for multiple levels of nesting.\n\t *  @type string\n\t *  @default data\n\t *\n\t *  @dtopt Options\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.ajaxDataProp\n\t *\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t */\n\t\"sAjaxDataProp\": \"data\",\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t * You can instruct DataTables to load data from an external\n\t * source using this parameter (use aData if you want to pass data in you\n\t * already have). Simply provide a url a JSON object can be obtained from.\n\t *  @type string\n\t *  @default null\n\t *\n\t *  @dtopt Options\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.ajaxSource\n\t *\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t */\n\t\"sAjaxSource\": null,\n\n\n\t/**\n\t * This initialisation variable allows you to specify exactly where in the\n\t * DOM you want DataTables to inject the various controls it adds to the page\n\t * (for example you might want the pagination controls at the top of the\n\t * table). DIV elements (with or without a custom class) can also be added to\n\t * aid styling. The follow syntax is used:\n\t *   <ul>\n\t *     <li>The following options are allowed:\n\t *       <ul>\n\t *         <li>'l' - Length changing</li>\n\t *         <li>'f' - Filtering input</li>\n\t *         <li>'t' - The table!</li>\n\t *         <li>'i' - Information</li>\n\t *         <li>'p' - Pagination</li>\n\t *         <li>'r' - pRocessing</li>\n\t *       </ul>\n\t *     </li>\n\t *     <li>The following constants are allowed:\n\t *       <ul>\n\t *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n\t *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n\t *       </ul>\n\t *     </li>\n\t *     <li>The following syntax is expected:\n\t *       <ul>\n\t *         <li>'&lt;' and '&gt;' - div elements</li>\n\t *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n\t *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n\t *       </ul>\n\t *     </li>\n\t *     <li>Examples:\n\t *       <ul>\n\t *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n\t *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n\t *       </ul>\n\t *     </li>\n\t *   </ul>\n\t *  @type string\n\t *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n\t *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.dom\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n\t *      } );\n\t *    } );\n\t */\n\t\"sDom\": \"lfrtip\",\n\n\n\t/**\n\t * Search delay option. This will throttle full table searches that use the\n\t * DataTables provided search input element (it does not effect calls to\n\t * `dt-api search()`, providing a delay before the search is made.\n\t *  @type integer\n\t *  @default 0\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.searchDelay\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"searchDelay\": 200\n\t *      } );\n\t *    } )\n\t */\n\t\"searchDelay\": null,\n\n\n\t/**\n\t * DataTables features six different built-in options for the buttons to\n\t * display for pagination control:\n\t *\n\t * * `numbers` - Page number buttons only\n\t * * `simple` - 'Previous' and 'Next' buttons only\n\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n\t *  \n\t * Further methods can be added using {@link DataTable.ext.oPagination}.\n\t *  @type string\n\t *  @default simple_numbers\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.pagingType\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"pagingType\": \"full_numbers\"\n\t *      } );\n\t *    } )\n\t */\n\t\"sPaginationType\": \"simple_numbers\",\n\n\n\t/**\n\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t * certain layout, or you have a large number of columns in the table, you\n\t * can enable x-scrolling to show the table in a viewport, which can be\n\t * scrolled. This property can be `true` which will allow the table to\n\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t * is recommended.\n\t *  @type boolean|string\n\t *  @default <i>blank string - i.e. disabled</i>\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.scrollX\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"scrollX\": true,\n\t *        \"scrollCollapse\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"sScrollX\": \"\",\n\n\n\t/**\n\t * This property can be used to force a DataTable to use more width than it\n\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t * table which requires to be well spaced, this parameter is useful for\n\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t * measurement).\n\t *  @type string\n\t *  @default <i>blank string - i.e. disabled</i>\n\t *\n\t *  @dtopt Options\n\t *  @name DataTable.defaults.scrollXInner\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"scrollX\": \"100%\",\n\t *        \"scrollXInner\": \"110%\"\n\t *      } );\n\t *    } );\n\t */\n\t\"sScrollXInner\": \"\",\n\n\n\t/**\n\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t * to the given height, and enable scrolling for any data which overflows the\n\t * current viewport. This can be used as an alternative to paging to display\n\t * a lot of data in a small area (although paging and scrolling can both be\n\t * enabled at the same time). This property can be any CSS unit, or a number\n\t * (in which case it will be treated as a pixel measurement).\n\t *  @type string\n\t *  @default <i>blank string - i.e. disabled</i>\n\t *\n\t *  @dtopt Features\n\t *  @name DataTable.defaults.scrollY\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"scrollY\": \"200px\",\n\t *        \"paginate\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"sScrollY\": \"\",\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t * processing or Ajax sourced data.\n\t *  @type string\n\t *  @default GET\n\t *\n\t *  @dtopt Options\n\t *  @dtopt Server-side\n\t *  @name DataTable.defaults.serverMethod\n\t *\n\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t */\n\t\"sServerMethod\": \"GET\",\n\n\n\t/**\n\t * DataTables makes use of renderers when displaying HTML elements for\n\t * a table. These renderers can be added or modified by plug-ins to\n\t * generate suitable mark-up for a site. For example the Bootstrap\n\t * integration plug-in for DataTables uses a paging button renderer to\n\t * display pagination buttons in the mark-up required by Bootstrap.\n\t *\n\t * For further information about the renderers available see\n\t * DataTable.ext.renderer\n\t *  @type string|object\n\t *  @default null\n\t *\n\t *  @name DataTable.defaults.renderer\n\t *\n\t */\n\t\"renderer\": null,\n\n\n\t/**\n\t * Set the data property name that DataTables should use to get a row's id\n\t * to set as the `id` property in the node.\n\t *  @type string\n\t *  @default DT_RowId\n\t *\n\t *  @name DataTable.defaults.rowId\n\t */\n\t\"rowId\": \"DT_RowId\"\n};\n\n_fnHungarianMap( DataTable.defaults );\n\n\n\n/*\n * Developer note - See note in model.defaults.js about the use of Hungarian\n * notation and camel case.\n */\n\n/**\n * Column options that can be given to DataTables at initialisation time.\n *  @namespace\n */\nDataTable.defaults.column = {\n\t/**\n\t * Define which column(s) an order will occur on for this column. This\n\t * allows a column's ordering to take multiple columns into account when\n\t * doing a sort or use the data from a different column. For example first\n\t * name / last name columns make sense to do a multi-column sort over the\n\t * two columns.\n\t *  @type array|int\n\t *  @default null <i>Takes the value of the column index automatically</i>\n\t *\n\t *  @name DataTable.defaults.column.orderData\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n\t *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n\t *          { \"orderData\": 2, \"targets\": [ 2 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"orderData\": [ 0, 1 ] },\n\t *          { \"orderData\": [ 1, 0 ] },\n\t *          { \"orderData\": 2 },\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"aDataSort\": null,\n\t\"iDataSort\": -1,\n\n\n\t/**\n\t * You can control the default ordering direction, and even alter the\n\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t * using this parameter.\n\t *  @type array\n\t *  @default [ 'asc', 'desc' ]\n\t *\n\t *  @name DataTable.defaults.column.orderSequence\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n\t *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          null,\n\t *          { \"orderSequence\": [ \"asc\" ] },\n\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n\t *          { \"orderSequence\": [ \"desc\" ] },\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"asSorting\": [ 'asc', 'desc' ],\n\n\n\t/**\n\t * Enable or disable filtering on the data in this column.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @name DataTable.defaults.column.searchable\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"searchable\": false, \"targets\": [ 0 ] }\n\t *        ] } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"searchable\": false },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ] } );\n\t *    } );\n\t */\n\t\"bSearchable\": true,\n\n\n\t/**\n\t * Enable or disable ordering on this column.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @name DataTable.defaults.column.orderable\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"orderable\": false, \"targets\": [ 0 ] }\n\t *        ] } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"orderable\": false },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ] } );\n\t *    } );\n\t */\n\t\"bSortable\": true,\n\n\n\t/**\n\t * Enable or disable the display of this column.\n\t *  @type boolean\n\t *  @default true\n\t *\n\t *  @name DataTable.defaults.column.visible\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"visible\": false, \"targets\": [ 0 ] }\n\t *        ] } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"visible\": false },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ] } );\n\t *    } );\n\t */\n\t\"bVisible\": true,\n\n\n\t/**\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t * allowing you to modify the DOM element (add background colour for example) when the\n\t * element is available.\n\t *  @type function\n\t *  @param {element} td The TD node that has been created\n\t *  @param {*} cellData The Data for the cell\n\t *  @param {array|object} rowData The data for the whole row\n\t *  @param {int} row The row index for the aoData data store\n\t *  @param {int} col The column index for aoColumns\n\t *\n\t *  @name DataTable.defaults.column.createdCell\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [3],\n\t *          \"createdCell\": function (td, cellData, rowData, row, col) {\n\t *            if ( cellData == \"1.7\" ) {\n\t *              $(td).css('color', 'blue')\n\t *            }\n\t *          }\n\t *        } ]\n\t *      });\n\t *    } );\n\t */\n\t\"fnCreatedCell\": null,\n\n\n\t/**\n\t * This parameter has been replaced by `data` in DataTables to ensure naming\n\t * consistency. `dataProp` can still be used, as there is backwards\n\t * compatibility in DataTables for this option, but it is strongly\n\t * recommended that you use `data` in preference to `dataProp`.\n\t *  @name DataTable.defaults.column.dataProp\n\t */\n\n\n\t/**\n\t * This property can be used to read data from any data source property,\n\t * including deeply nested objects / properties. `data` can be given in a\n\t * number of different ways which effect its behaviour:\n\t *\n\t * * `integer` - treated as an array index for the data source. This is the\n\t *   default that DataTables uses (incrementally increased for each column).\n\t * * `string` - read an object property from the data source. There are\n\t *   three 'special' options that can be used in the string to alter how\n\t *   DataTables reads the data from the source object:\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t *      Javascript to read from nested objects, so to can the options\n\t *      specified in `data`. For example: `browser.version` or\n\t *      `browser.name`. If your object parameter name contains a period, use\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t *      from and array source, joining the data with the characters provided\n\t *      between the two brackets. For example: `name[, ]` would provide a\n\t *      comma-space separated list from the source array. If no characters\n\t *      are provided between the brackets, the original array source is\n\t *      returned.\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t *      execute a function of the name given. For example: `browser()` for a\n\t *      simple function on the data source, `browser.version()` for a\n\t *      function in a nested property or even `browser().version` to get an\n\t *      object property if the function called returns an object. Note that\n\t *      function notation is recommended for use in `render` rather than\n\t *      `data` as it is much simpler to use as a renderer.\n\t * * `null` - use the original data source for the row rather than plucking\n\t *   data directly from it. This action has effects on two other\n\t *   initialisation options:\n\t *    * `defaultContent` - When null is given as the `data` option and\n\t *      `defaultContent` is specified for the column, the value defined by\n\t *      `defaultContent` will be used for the cell.\n\t *    * `render` - When null is used for the `data` option and the `render`\n\t *      option is specified for the column, the whole data source for the\n\t *      row is used for the renderer.\n\t * * `function` - the function given will be executed whenever DataTables\n\t *   needs to set or get the data for a cell in the column. The function\n\t *   takes three parameters:\n\t *    * Parameters:\n\t *      * `{array|object}` The data source for the row\n\t *      * `{string}` The type call data requested - this will be 'set' when\n\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t *        when gathering data. Note that when `undefined` is given for the\n\t *        type DataTables expects to get the raw data for the object back<\n\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t *    * Return:\n\t *      * The return value from the function is not required when 'set' is\n\t *        the type of call, but otherwise the return is what will be used\n\t *        for the data requested.\n\t *\n\t * Note that `data` is a getter and setter option. If you just require\n\t * formatting of data for output, you will likely want to use `render` which\n\t * is simply a getter and thus simpler to use.\n\t *\n\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t * name change reflects the flexibility of this property and is consistent\n\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t * be used by DataTables, as it automatically maps the old name to the new\n\t * if required.\n\t *\n\t *  @type string|int|function|null\n\t *  @default null <i>Use automatically calculated column index</i>\n\t *\n\t *  @name DataTable.defaults.column.data\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Read table data from objects\n\t *    // JSON structure for each row:\n\t *    //   {\n\t *    //      \"engine\": {value},\n\t *    //      \"browser\": {value},\n\t *    //      \"platform\": {value},\n\t *    //      \"version\": {value},\n\t *    //      \"grade\": {value}\n\t *    //   }\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"ajaxSource\": \"sources/objects.txt\",\n\t *        \"columns\": [\n\t *          { \"data\": \"engine\" },\n\t *          { \"data\": \"browser\" },\n\t *          { \"data\": \"platform\" },\n\t *          { \"data\": \"version\" },\n\t *          { \"data\": \"grade\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Read information from deeply nested objects\n\t *    // JSON structure for each row:\n\t *    //   {\n\t *    //      \"engine\": {value},\n\t *    //      \"browser\": {value},\n\t *    //      \"platform\": {\n\t *    //         \"inner\": {value}\n\t *    //      },\n\t *    //      \"details\": [\n\t *    //         {value}, {value}\n\t *    //      ]\n\t *    //   }\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t *        \"columns\": [\n\t *          { \"data\": \"engine\" },\n\t *          { \"data\": \"browser\" },\n\t *          { \"data\": \"platform.inner\" },\n\t *          { \"data\": \"details.0\" },\n\t *          { \"data\": \"details.1\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `data` as a function to provide different information for\n\t *    // sorting, filtering and display. In this case, currency (price)\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": function ( source, type, val ) {\n\t *            if (type === 'set') {\n\t *              source.price = val;\n\t *              // Store the computed display and filter values for efficiency\n\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n\t *              return;\n\t *            }\n\t *            else if (type === 'display') {\n\t *              return source.price_display;\n\t *            }\n\t *            else if (type === 'filter') {\n\t *              return source.price_filter;\n\t *            }\n\t *            // 'sort', 'type' and undefined all just use the integer\n\t *            return source.price;\n\t *          }\n\t *        } ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using default content\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": null,\n\t *          \"defaultContent\": \"Click to edit\"\n\t *        } ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using array notation - outputting a list from an array\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": \"name[, ]\"\n\t *        } ]\n\t *      } );\n\t *    } );\n\t *\n\t */\n\t\"mData\": null,\n\n\n\t/**\n\t * This property is the rendering partner to `data` and it is suggested that\n\t * when you want to manipulate data for display (including filtering,\n\t * sorting etc) without altering the underlying data for the table, use this\n\t * property. `render` can be considered to be the the read only companion to\n\t * `data` which is read / write (then as such more complex). Like `data`\n\t * this option can be given in a number of different ways to effect its\n\t * behaviour:\n\t *\n\t * * `integer` - treated as an array index for the data source. This is the\n\t *   default that DataTables uses (incrementally increased for each column).\n\t * * `string` - read an object property from the data source. There are\n\t *   three 'special' options that can be used in the string to alter how\n\t *   DataTables reads the data from the source object:\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t *      Javascript to read from nested objects, so to can the options\n\t *      specified in `data`. For example: `browser.version` or\n\t *      `browser.name`. If your object parameter name contains a period, use\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t *      from and array source, joining the data with the characters provided\n\t *      between the two brackets. For example: `name[, ]` would provide a\n\t *      comma-space separated list from the source array. If no characters\n\t *      are provided between the brackets, the original array source is\n\t *      returned.\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t *      execute a function of the name given. For example: `browser()` for a\n\t *      simple function on the data source, `browser.version()` for a\n\t *      function in a nested property or even `browser().version` to get an\n\t *      object property if the function called returns an object.\n\t * * `object` - use different data for the different data types requested by\n\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t *   of the object is the data type the property refers to and the value can\n\t *   defined using an integer, string or function using the same rules as\n\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t *   This is the default value to use if you haven't specified a value for\n\t *   the data type requested by DataTables.\n\t * * `function` - the function given will be executed whenever DataTables\n\t *   needs to set or get the data for a cell in the column. The function\n\t *   takes three parameters:\n\t *    * Parameters:\n\t *      * {array|object} The data source for the row (based on `data`)\n\t *      * {string} The type call data requested - this will be 'filter',\n\t *        'display', 'type' or 'sort'.\n\t *      * {array|object} The full data source for the row (not based on\n\t *        `data`)\n\t *    * Return:\n\t *      * The return value from the function is what will be used for the\n\t *        data requested.\n\t *\n\t *  @type string|int|function|object|null\n\t *  @default null Use the data source value.\n\t *\n\t *  @name DataTable.defaults.column.render\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Create a comma separated list from an array of objects\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t *        \"columns\": [\n\t *          { \"data\": \"engine\" },\n\t *          { \"data\": \"browser\" },\n\t *          {\n\t *            \"data\": \"platform\",\n\t *            \"render\": \"[, ].name\"\n\t *          }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Execute a function to obtain data\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t *          \"render\": \"browserName()\"\n\t *        } ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // As an object, extracting different data for the different types\n\t *    // This would be used with a data source such as:\n\t *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n\t *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n\t *    // (which has both forms) is used for filtering for if a user inputs either format, while\n\t *    // the formatted phone number is the one that is shown in the table.\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t *          \"render\": {\n\t *            \"_\": \"phone\",\n\t *            \"filter\": \"phone_filter\",\n\t *            \"display\": \"phone_display\"\n\t *          }\n\t *        } ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Use as a function to create a link from the data source\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"data\": \"download_link\",\n\t *          \"render\": function ( data, type, full ) {\n\t *            return '<a href=\"'+data+'\">Download</a>';\n\t *          }\n\t *        } ]\n\t *      } );\n\t *    } );\n\t */\n\t\"mRender\": null,\n\n\n\t/**\n\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t *  @type string\n\t *  @default td\n\t *\n\t *  @name DataTable.defaults.column.cellType\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Make the first column use TH cells\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [ {\n\t *          \"targets\": [ 0 ],\n\t *          \"cellType\": \"th\"\n\t *        } ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sCellType\": \"td\",\n\n\n\t/**\n\t * Class to give to each cell in this column.\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t *\n\t *  @name DataTable.defaults.column.class\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"class\": \"my_class\" },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sClass\": \"\",\n\n\t/**\n\t * When DataTables calculates the column widths to assign to each column,\n\t * it finds the longest string in each column and then constructs a\n\t * temporary table and reads the widths from that. The problem with this\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t * string - thus the calculation can go wrong (doing it properly and putting\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t * a \"work around\" we provide this option. It will append its value to the\n\t * text that is found to be the longest string for the column - i.e. padding.\n\t * Generally you shouldn't need this!\n\t *  @type string\n\t *  @default <i>Empty string<i>\n\t *\n\t *  @name DataTable.defaults.column.contentPadding\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          {\n\t *            \"contentPadding\": \"mmm\"\n\t *          }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sContentPadding\": \"\",\n\n\n\t/**\n\t * Allows a default value to be given for a column's data, and will be used\n\t * whenever a null data source is encountered (this can be because `data`\n\t * is set to null, or because the data source itself is null).\n\t *  @type string\n\t *  @default null\n\t *\n\t *  @name DataTable.defaults.column.defaultContent\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          {\n\t *            \"data\": null,\n\t *            \"defaultContent\": \"Edit\",\n\t *            \"targets\": [ -1 ]\n\t *          }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          {\n\t *            \"data\": null,\n\t *            \"defaultContent\": \"Edit\"\n\t *          }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sDefaultContent\": null,\n\n\n\t/**\n\t * This parameter is only used in DataTables' server-side processing. It can\n\t * be exceptionally useful to know what columns are being displayed on the\n\t * client side, and to map these to database fields. When defined, the names\n\t * also allow DataTables to reorder information from the server if it comes\n\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t * client-side, your server-side code does not also need updating).\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t *\n\t *  @name DataTable.defaults.column.name\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n\t *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n\t *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n\t *          { \"name\": \"version\", \"targets\": [ 3 ] },\n\t *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"name\": \"engine\" },\n\t *          { \"name\": \"browser\" },\n\t *          { \"name\": \"platform\" },\n\t *          { \"name\": \"version\" },\n\t *          { \"name\": \"grade\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sName\": \"\",\n\n\n\t/**\n\t * Defines a data source type for the ordering which can be used to read\n\t * real-time information from the table (updating the internally cached\n\t * version) prior to ordering. This allows ordering to occur on user\n\t * editable elements such as form inputs.\n\t *  @type string\n\t *  @default std\n\t *\n\t *  @name DataTable.defaults.column.orderDataType\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n\t *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n\t *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n\t *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          null,\n\t *          null,\n\t *          { \"orderDataType\": \"dom-text\" },\n\t *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n\t *          { \"orderDataType\": \"dom-select\" },\n\t *          { \"orderDataType\": \"dom-checkbox\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sSortDataType\": \"std\",\n\n\n\t/**\n\t * The title of this column.\n\t *  @type string\n\t *  @default null <i>Derived from the 'TH' value for this column in the\n\t *    original HTML table.</i>\n\t *\n\t *  @name DataTable.defaults.column.title\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"title\": \"My column title\" },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sTitle\": null,\n\n\n\t/**\n\t * The type allows you to specify how the data for this column will be\n\t * ordered. Four types (string, numeric, date and html (which will strip\n\t * HTML tags before ordering)) are currently available. Note that only date\n\t * formats understood by Javascript's Date() object will be accepted as type\n\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t * through plug-ins.\n\t *  @type string\n\t *  @default null <i>Auto-detected from raw data</i>\n\t *\n\t *  @name DataTable.defaults.column.type\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"type\": \"html\", \"targets\": [ 0 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"type\": \"html\" },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sType\": null,\n\n\n\t/**\n\t * Defining the width of the column, this parameter may take any CSS value\n\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t * been given a specific width through this interface ensuring that the table\n\t * remains readable.\n\t *  @type string\n\t *  @default null <i>Automatic</i>\n\t *\n\t *  @name DataTable.defaults.column.width\n\t *  @dtopt Columns\n\t *\n\t *  @example\n\t *    // Using `columnDefs`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columnDefs\": [\n\t *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Using `columns`\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"columns\": [\n\t *          { \"width\": \"20%\" },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sWidth\": null\n};\n\n_fnHungarianMap( DataTable.defaults.column );\n\n\n\n/**\n * DataTables settings object - this holds all the information needed for a\n * given table, including configuration, data and current application of the\n * table options. DataTables does not have a single instance for each DataTable\n * with the settings attached to that instance, but rather instances of the\n * DataTable \"class\" are created on-the-fly as needed (typically by a\n * $().dataTable() call) and the settings object is then applied to that\n * instance.\n *\n * Note that this object is related to {@link DataTable.defaults} but this\n * one is the internal data store for DataTables's cache of columns. It should\n * NOT be manipulated outside of DataTables. Any configuration should be done\n * through the initialisation options.\n *  @namespace\n *  @todo Really should attach the settings object to individual instances so we\n *    don't need to create new instances on each $().dataTable() call (if the\n *    table already exists). It would also save passing oSettings around and\n *    into every single function. However, this is a very significant\n *    architecture change for DataTables and will almost certainly break\n *    backwards compatibility with older installations. This is something that\n *    will be done in 2.0.\n */\nDataTable.models.oSettings = {\n\t/**\n\t * Primary features of DataTables and their enablement state.\n\t *  @namespace\n\t */\n\t\"oFeatures\": {\n\n\t\t/**\n\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t * optimum table and columns widths (true) or not (false).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bAutoWidth\": null,\n\n\t\t/**\n\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t * needed by a driven page draw. This can give a significant speed\n\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t * difference at all for DOM and server-side processing tables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bDeferRender\": null,\n\n\t\t/**\n\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bFilter\": null,\n\n\t\t/**\n\t\t * Table information element (the 'Showing x of y records' div) enable\n\t\t * flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bInfo\": null,\n\n\t\t/**\n\t\t * Present a user control allowing the end user to change the page size\n\t\t * when pagination is enabled.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bLengthChange\": null,\n\n\t\t/**\n\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t * changing must also be disabled.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bPaginate\": null,\n\n\t\t/**\n\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t * user request - typically an Ajax request for server-side processing.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bProcessing\": null,\n\n\t\t/**\n\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t * get all data from the server for every draw - there is no filtering,\n\t\t * sorting or paging done on the client-side.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bServerSide\": null,\n\n\t\t/**\n\t\t * Sorting enablement flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSort\": null,\n\n\t\t/**\n\t\t * Multi-column sorting\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortMulti\": null,\n\n\t\t/**\n\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t * there is a lot of DOM interaction.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortClasses\": null,\n\n\t\t/**\n\t\t * State saving enablement flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bStateSave\": null\n\t},\n\n\n\t/**\n\t * Scrolling settings for a table.\n\t *  @namespace\n\t */\n\t\"oScroll\": {\n\t\t/**\n\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t * table container down to the height of the table (when true).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bCollapse\": null,\n\n\t\t/**\n\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t * during table initialisation.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iBarWidth\": 0,\n\n\t\t/**\n\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t * disabled if an empty string.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sX\": null,\n\n\t\t/**\n\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t * should not need to use this.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @deprecated\n\t\t */\n\t\t\"sXInner\": null,\n\n\t\t/**\n\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t * if an empty string.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sY\": null\n\t},\n\n\t/**\n\t * Language information for the table.\n\t *  @namespace\n\t *  @extends DataTable.defaults.oLanguage\n\t */\n\t\"oLanguage\": {\n\t\t/**\n\t\t * Information callback function. See\n\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t *  @type function\n\t\t *  @default null\n\t\t */\n\t\t\"fnInfoCallback\": null\n\t},\n\n\t/**\n\t * Browser support parameters\n\t *  @namespace\n\t */\n\t\"oBrowser\": {\n\t\t/**\n\t\t * Indicate if the browser incorrectly calculates width:100% inside a\n\t\t * scrolling element (IE6/7)\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bScrollOversize\": false,\n\n\t\t/**\n\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t * scrolling container - needed for rtl language layout, although not\n\t\t * all browsers move the scrollbar (Safari).\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bScrollbarLeft\": false,\n\n\t\t/**\n\t\t * Flag for if `getBoundingClientRect` is fully supported or not\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bBounding\": false,\n\n\t\t/**\n\t\t * Browser scrollbar width\n\t\t *  @type integer\n\t\t *  @default 0\n\t\t */\n\t\t\"barWidth\": 0\n\t},\n\n\n\t\"ajax\": null,\n\n\n\t/**\n\t * Array referencing the nodes which are used for the features. The\n\t * parameters of this object match what is allowed by sDom - i.e.\n\t *   <ul>\n\t *     <li>'l' - Length changing</li>\n\t *     <li>'f' - Filtering input</li>\n\t *     <li>'t' - The table!</li>\n\t *     <li>'i' - Information</li>\n\t *     <li>'p' - Pagination</li>\n\t *     <li>'r' - pRocessing</li>\n\t *   </ul>\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aanFeatures\": [],\n\n\t/**\n\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t * information.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoData\": [],\n\n\t/**\n\t * Array of indexes which are in the current display (after filtering etc)\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aiDisplay\": [],\n\n\t/**\n\t * Array of indexes for display - no filtering\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aiDisplayMaster\": [],\n\n\t/**\n\t * Map of row ids to data indexes\n\t *  @type object\n\t *  @default {}\n\t */\n\t\"aIds\": {},\n\n\t/**\n\t * Store information about each column that is in use\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoColumns\": [],\n\n\t/**\n\t * Store information about the table's header\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoHeader\": [],\n\n\t/**\n\t * Store information about the table's footer\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoFooter\": [],\n\n\t/**\n\t * Store the applied global search information in case we want to force a\n\t * research or compare the old search to a new one.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @namespace\n\t *  @extends DataTable.models.oSearch\n\t */\n\t\"oPreviousSearch\": {},\n\n\t/**\n\t * Store the applied search for each column - see\n\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t * filtering information for each column.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoPreSearchCols\": [],\n\n\t/**\n\t * Sorting that is applied to the table. Note that the inner arrays are\n\t * used in the following manner:\n\t * <ul>\n\t *   <li>Index 0 - column number</li>\n\t *   <li>Index 1 - current sorting direction</li>\n\t * </ul>\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type array\n\t *  @todo These inner arrays should really be objects\n\t */\n\t\"aaSorting\": null,\n\n\t/**\n\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t * aaSorting).\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aaSortingFixed\": [],\n\n\t/**\n\t * Classes to use for the striping of a table.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"asStripeClasses\": null,\n\n\t/**\n\t * If restoring a table - we should restore its striping classes as well\n\t *  @type array\n\t *  @default []\n\t */\n\t\"asDestroyStripes\": [],\n\n\t/**\n\t * If restoring a table - we should restore its width\n\t *  @type int\n\t *  @default 0\n\t */\n\t\"sDestroyWidth\": 0,\n\n\t/**\n\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoRowCallback\": [],\n\n\t/**\n\t * Callback functions for the header on each draw.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoHeaderCallback\": [],\n\n\t/**\n\t * Callback function for the footer on each draw.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoFooterCallback\": [],\n\n\t/**\n\t * Array of callback functions for draw callback functions\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoDrawCallback\": [],\n\n\t/**\n\t * Array of callback functions for row created function\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoRowCreatedCallback\": [],\n\n\t/**\n\t * Callback functions for just before the table is redrawn. A return of\n\t * false will be used to cancel the draw.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoPreDrawCallback\": [],\n\n\t/**\n\t * Callback functions for when the table has been initialised.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoInitComplete\": [],\n\n\n\t/**\n\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t * saving state.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateSaveParams\": [],\n\n\t/**\n\t * Callbacks for modifying the settings that have been stored for state saving\n\t * prior to using the stored values to restore the state.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateLoadParams\": [],\n\n\t/**\n\t * Callbacks for operating on the settings object once the saved state has been\n\t * loaded\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateLoaded\": [],\n\n\t/**\n\t * Cache the table ID for quick access\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t */\n\t\"sTableId\": \"\",\n\n\t/**\n\t * The TABLE node for the main table\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTable\": null,\n\n\t/**\n\t * Permanent ref to the thead element\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTHead\": null,\n\n\t/**\n\t * Permanent ref to the tfoot element - if it exists\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTFoot\": null,\n\n\t/**\n\t * Permanent ref to the tbody element\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTBody\": null,\n\n\t/**\n\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTableWrapper\": null,\n\n\t/**\n\t * Indicate if when using server-side processing the loading of data\n\t * should be deferred until the second draw.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"bDeferLoading\": false,\n\n\t/**\n\t * Indicate if all required information has been read in\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"bInitialised\": false,\n\n\t/**\n\t * Information about open rows. Each object in the array has the parameters\n\t * 'nTr' and 'nParent'\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoOpenRows\": [],\n\n\t/**\n\t * Dictate the positioning of DataTables' control elements - see\n\t * {@link DataTable.model.oInit.sDom}.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sDom\": null,\n\n\t/**\n\t * Search delay (in mS)\n\t *  @type integer\n\t *  @default null\n\t */\n\t\"searchDelay\": null,\n\n\t/**\n\t * Which type of pagination should be used.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t *  @default two_button\n\t */\n\t\"sPaginationType\": \"two_button\",\n\n\t/**\n\t * The state duration (for `stateSave`) in seconds.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type int\n\t *  @default 0\n\t */\n\t\"iStateDuration\": 0,\n\n\t/**\n\t * Array of callback functions for state saving. Each array element is an\n\t * object with the following parameters:\n\t *   <ul>\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t *       and the JSON string to save that has been thus far created. Returns\n\t *       a JSON string to be inserted into a json object\n\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t *     <li>string:sName - name of callback</li>\n\t *   </ul>\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateSave\": [],\n\n\t/**\n\t * Array of callback functions for state loading. Each array element is an\n\t * object with the following parameters:\n\t *   <ul>\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t *       and the object stored. May return false to cancel state loading</li>\n\t *     <li>string:sName - name of callback</li>\n\t *   </ul>\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateLoad\": [],\n\n\t/**\n\t * State that was saved. Useful for back reference\n\t *  @type object\n\t *  @default null\n\t */\n\t\"oSavedState\": null,\n\n\t/**\n\t * State that was loaded. Useful for back reference\n\t *  @type object\n\t *  @default null\n\t */\n\t\"oLoadedState\": null,\n\n\t/**\n\t * Source url for AJAX data for the table.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sAjaxSource\": null,\n\n\t/**\n\t * Property from a given object from which to read the table data from. This\n\t * can be an empty string (when not server-side processing), in which case\n\t * it is  assumed an an array is given directly.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t */\n\t\"sAjaxDataProp\": null,\n\n\t/**\n\t * The last jQuery XHR object that was used for server-side data gathering.\n\t * This can be used for working with the XHR information in one of the\n\t * callbacks\n\t *  @type object\n\t *  @default null\n\t */\n\t\"jqXHR\": null,\n\n\t/**\n\t * JSON returned from the server in the last Ajax request\n\t *  @type object\n\t *  @default undefined\n\t */\n\t\"json\": undefined,\n\n\t/**\n\t * Data submitted as part of the last Ajax request\n\t *  @type object\n\t *  @default undefined\n\t */\n\t\"oAjaxData\": undefined,\n\n\t/**\n\t * Function to get the server-side data.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type function\n\t */\n\t\"fnServerData\": null,\n\n\t/**\n\t * Functions which are called prior to sending an Ajax request so extra\n\t * parameters can easily be sent to the server\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoServerParams\": [],\n\n\t/**\n\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t * required).\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t */\n\t\"sServerMethod\": null,\n\n\t/**\n\t * Format numbers for display.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type function\n\t */\n\t\"fnFormatNumber\": null,\n\n\t/**\n\t * List of options that can be used for the user selectable length menu.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aLengthMenu\": null,\n\n\t/**\n\t * Counter for the draws that the table does. Also used as a tracker for\n\t * server-side processing\n\t *  @type int\n\t *  @default 0\n\t */\n\t\"iDraw\": 0,\n\n\t/**\n\t * Indicate if a redraw is being done - useful for Ajax\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"bDrawing\": false,\n\n\t/**\n\t * Draw index (iDraw) of the last error when parsing the returned data\n\t *  @type int\n\t *  @default -1\n\t */\n\t\"iDrawError\": -1,\n\n\t/**\n\t * Paging display length\n\t *  @type int\n\t *  @default 10\n\t */\n\t\"_iDisplayLength\": 10,\n\n\t/**\n\t * Paging start point - aiDisplay index\n\t *  @type int\n\t *  @default 0\n\t */\n\t\"_iDisplayStart\": 0,\n\n\t/**\n\t * Server-side processing - number of records in the result set\n\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t * this property to get the value of the number of records, regardless of\n\t * the server-side processing setting.\n\t *  @type int\n\t *  @default 0\n\t *  @private\n\t */\n\t\"_iRecordsTotal\": 0,\n\n\t/**\n\t * Server-side processing - number of records in the current display set\n\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t * this property to get the value of the number of records, regardless of\n\t * the server-side processing setting.\n\t *  @type boolean\n\t *  @default 0\n\t *  @private\n\t */\n\t\"_iRecordsDisplay\": 0,\n\n\t/**\n\t * The classes to use for the table\n\t *  @type object\n\t *  @default {}\n\t */\n\t\"oClasses\": {},\n\n\t/**\n\t * Flag attached to the settings object so you can check in the draw\n\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t * events.\n\t *  @type boolean\n\t *  @default false\n\t *  @deprecated\n\t */\n\t\"bFiltered\": false,\n\n\t/**\n\t * Flag attached to the settings object so you can check in the draw\n\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t * events.\n\t *  @type boolean\n\t *  @default false\n\t *  @deprecated\n\t */\n\t\"bSorted\": false,\n\n\t/**\n\t * Indicate that if multiple rows are in the header and there is more than\n\t * one unique cell per column, if the top one (true) or bottom one (false)\n\t * should be used for sorting / title by DataTables.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type boolean\n\t */\n\t\"bSortCellsTop\": null,\n\n\t/**\n\t * Initialisation object that is used for the table\n\t *  @type object\n\t *  @default null\n\t */\n\t\"oInit\": null,\n\n\t/**\n\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t * destroy so they can clean up markup and events.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoDestroyCallback\": [],\n\n\n\t/**\n\t * Get the number of records in the current record set, before filtering\n\t *  @type function\n\t */\n\t\"fnRecordsTotal\": function ()\n\t{\n\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\tthis._iRecordsTotal * 1 :\n\t\t\tthis.aiDisplayMaster.length;\n\t},\n\n\t/**\n\t * Get the number of records in the current record set, after filtering\n\t *  @type function\n\t */\n\t\"fnRecordsDisplay\": function ()\n\t{\n\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\tthis.aiDisplay.length;\n\t},\n\n\t/**\n\t * Get the display end point - aiDisplay index\n\t *  @type function\n\t */\n\t\"fnDisplayEnd\": function ()\n\t{\n\t\tvar\n\t\t\tlen      = this._iDisplayLength,\n\t\t\tstart    = this._iDisplayStart,\n\t\t\tcalc     = start + len,\n\t\t\trecords  = this.aiDisplay.length,\n\t\t\tfeatures = this.oFeatures,\n\t\t\tpaginate = features.bPaginate;\n\n\t\tif ( features.bServerSide ) {\n\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\tstart + records :\n\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\n\t\t}\n\t\telse {\n\t\t\treturn ! paginate || calc>records || len===-1 ?\n\t\t\t\trecords :\n\t\t\t\tcalc;\n\t\t}\n\t},\n\n\t/**\n\t * The DataTables object for this table\n\t *  @type object\n\t *  @default null\n\t */\n\t\"oInstance\": null,\n\n\t/**\n\t * Unique identifier for each instance of the DataTables object. If there\n\t * is an ID on the table node, then it takes that value, otherwise an\n\t * incrementing internal counter is used.\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sInstance\": null,\n\n\t/**\n\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t * keyboard navigation of the table and its controls.\n\t */\n\t\"iTabIndex\": 0,\n\n\t/**\n\t * DIV container for the footer scrolling table if scrolling\n\t */\n\t\"nScrollHead\": null,\n\n\t/**\n\t * DIV container for the footer scrolling table if scrolling\n\t */\n\t\"nScrollFoot\": null,\n\n\t/**\n\t * Last applied sort\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aLastSort\": [],\n\n\t/**\n\t * Stored plug-in instances\n\t *  @type object\n\t *  @default {}\n\t */\n\t\"oPlugins\": {},\n\n\t/**\n\t * Function used to get a row's id from the row's data\n\t *  @type function\n\t *  @default null\n\t */\n\t\"rowIdFn\": null,\n\n\t/**\n\t * Data location where to store a row's id\n\t *  @type string\n\t *  @default null\n\t */\n\t\"rowId\": null\n};\n\n/**\n * Extension object for DataTables that is used to provide all extension\n * options.\n *\n * Note that the `DataTable.ext` object is available through\n * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n *  @namespace\n *  @extends DataTable.models.ext\n */\n\n\n/**\n * DataTables extensions\n * \n * This namespace acts as a collection area for plug-ins that can be used to\n * extend DataTables capabilities. Indeed many of the build in methods\n * use this method to provide their own capabilities (sorting methods for\n * example).\n *\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n * reasons\n *\n *  @namespace\n */\nDataTable.ext = _ext = {\n\t/**\n\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t * defined here so other extensions can define buttons regardless of load\n\t * order. It is _not_ used by DataTables core.\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tbuttons: {},\n\n\n\t/**\n\t * Element class names\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tclasses: {},\n\n\n\t/**\n\t * DataTables build type (expanded by the download builder)\n\t *\n\t *  @type string\n\t */\n\tbuilder: \"-source-\",\n\n\n\t/**\n\t * Error reporting.\n\t * \n\t * How should DataTables report an error. Can take the value 'alert',\n\t * 'throw', 'none' or a function.\n\t *\n\t *  @type string|function\n\t *  @default alert\n\t */\n\terrMode: \"alert\",\n\n\n\t/**\n\t * Feature plug-ins.\n\t * \n\t * This is an array of objects which describe the feature plug-ins that are\n\t * available to DataTables. These feature plug-ins are then available for\n\t * use through the `dom` initialisation option.\n\t * \n\t * Each feature plug-in is described by an object which must have the\n\t * following properties:\n\t * \n\t * * `fnInit` - function that is used to initialise the plug-in,\n\t * * `cFeature` - a character so the feature can be enabled by the `dom`\n\t *   instillation option. This is case sensitive.\n\t *\n\t * The `fnInit` function has the following input parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t *\n\t * And the following return is expected:\n\t * \n\t * * {node|null} The element which contains your feature. Note that the\n\t *   return may also be void if your plug-in does not require to inject any\n\t *   DOM elements into DataTables control (`dom`) - for example this might\n\t *   be useful when developing a plug-in which allows table control via\n\t *   keyboard entry\n\t *\n\t *  @type array\n\t *\n\t *  @example\n\t *    $.fn.dataTable.ext.features.push( {\n\t *      \"fnInit\": function( oSettings ) {\n\t *        return new TableTools( { \"oDTSettings\": oSettings } );\n\t *      },\n\t *      \"cFeature\": \"T\"\n\t *    } );\n\t */\n\tfeature: [],\n\n\n\t/**\n\t * Row searching.\n\t * \n\t * This method of searching is complimentary to the default type based\n\t * searching, and a lot more comprehensive as it allows you complete control\n\t * over the searching logic. Each element in this array is a function\n\t * (parameters described below) that is called for every row in the table,\n\t * and your logic decides if it should be included in the searching data set\n\t * or not.\n\t *\n\t * Searching functions have the following input parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t *    original format that was passed in as the data source, or an array\n\t *    from a DOM data source\n\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t *\n\t * And the following return is expected:\n\t *\n\t * * {boolean} Include the row in the searched result set (true) or not\n\t *   (false)\n\t *\n\t * Note that as with the main search ability in DataTables, technically this\n\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t * naming we call it searching here.\n\t *\n\t *  @type array\n\t *  @default []\n\t *\n\t *  @example\n\t *    // The following example shows custom search being applied to the\n\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t *    // from the end-user, matching the data in a certain range.\n\t *    $.fn.dataTable.ext.search.push(\n\t *      function( settings, data, dataIndex ) {\n\t *        var min = document.getElementById('min').value * 1;\n\t *        var max = document.getElementById('max').value * 1;\n\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t *\n\t *        if ( min == \"\" && max == \"\" ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min == \"\" && version < max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && \"\" == max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && version < max ) {\n\t *          return true;\n\t *        }\n\t *        return false;\n\t *      }\n\t *    );\n\t */\n\tsearch: [],\n\n\n\t/**\n\t * Selector extensions\n\t *\n\t * The `selector` option can be used to extend the options available for the\n\t * selector modifier options (`selector-modifier` object data type) that\n\t * each of the three built in selector types offer (row, column and cell +\n\t * their plural counterparts). For example the Select extension uses this\n\t * mechanism to provide an option to select only rows, columns and cells\n\t * that have been marked as selected by the end user (`{selected: true}`),\n\t * which can be used in conjunction with the existing built in selector\n\t * options.\n\t *\n\t * Each property is an array to which functions can be pushed. The functions\n\t * take three attributes:\n\t *\n\t * * Settings object for the host table\n\t * * Options object (`selector-modifier` object type)\n\t * * Array of selected item indexes\n\t *\n\t * The return is an array of the resulting item indexes after the custom\n\t * selector has been applied.\n\t *\n\t *  @type object\n\t */\n\tselector: {\n\t\tcell: [],\n\t\tcolumn: [],\n\t\trow: []\n\t},\n\n\n\t/**\n\t * Internal functions, exposed for used in plug-ins.\n\t * \n\t * Please note that you should not need to use the internal methods for\n\t * anything other than a plug-in (and even then, try to avoid if possible).\n\t * The internal function may change between releases.\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tinternal: {},\n\n\n\t/**\n\t * Legacy configuration options. Enable and disable legacy options that\n\t * are available in DataTables.\n\t *\n\t *  @type object\n\t */\n\tlegacy: {\n\t\t/**\n\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t * requests\n\t\t *\n\t\t *  @type boolean\n\t\t *  @default null\n\t\t */\n\t\tajax: null\n\t},\n\n\n\t/**\n\t * Pagination plug-in methods.\n\t * \n\t * Each entry in this object is a function and defines which buttons should\n\t * be shown by the pagination rendering method that is used for the table:\n\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t * buttons are displayed in the document, while the functions here tell it\n\t * what buttons to display. This is done by returning an array of button\n\t * descriptions (what each button will do).\n\t *\n\t * Pagination types (the four built in options and any additional plug-in\n\t * options defined here) can be used through the `paginationType`\n\t * initialisation parameter.\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{int} page` The current page index\n\t * 2. `{int} pages` The number of pages in the table\n\t *\n\t * Each function is expected to return an array where each element of the\n\t * array can be one of:\n\t *\n\t * * `first` - Jump to first page when activated\n\t * * `last` - Jump to last page when activated\n\t * * `previous` - Show previous page when activated\n\t * * `next` - Show next page when activated\n\t * * `{int}` - Show page of the index given\n\t * * `{array}` - A nested array containing the above elements to add a\n\t *   containing 'DIV' element (might be useful for styling).\n\t *\n\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t * an object with two functions would be defined for each plug-in. That\n\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t * compatibility, but this option of use is now decremented and no longer\n\t * documented in DataTables 1.10+.\n\t *\n\t *  @type object\n\t *  @default {}\n\t *\n\t *  @example\n\t *    // Show previous, next and current page buttons only\n\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t *      return [ 'previous', page, 'next' ];\n\t *    };\n\t */\n\tpager: {},\n\n\n\trenderer: {\n\t\tpageButton: {},\n\t\theader: {}\n\t},\n\n\n\t/**\n\t * Ordering plug-ins - custom data source\n\t * \n\t * The extension options for ordering of data available here is complimentary\n\t * to the default type based ordering that DataTables typically uses. It\n\t * allows much greater control over the the data that is being used to\n\t * order a column, but is necessarily therefore more complex.\n\t * \n\t * This type of ordering is useful if you want to do ordering based on data\n\t * live from the DOM (for example the contents of an 'input' element) rather\n\t * than just the static string that DataTables knows of.\n\t * \n\t * The way these plug-ins work is that you create an array of the values you\n\t * wish to be ordering for the column in question and then return that\n\t * array. The data in the array much be in the index order of the rows in\n\t * the table (not the currently ordering order!). Which order data gathering\n\t * function is run here depends on the `dt-init columns.orderDataType`\n\t * parameter that is used for the column (if any).\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{int}` Target column index\n\t *\n\t * Each function is expected to return an array:\n\t *\n\t * * `{array}` Data for the column to be ordering upon\n\t *\n\t *  @type array\n\t *\n\t *  @example\n\t *    // Ordering using `input` node values\n\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t *    {\n\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t *        return $('input', td).val();\n\t *      } );\n\t *    }\n\t */\n\torder: {},\n\n\n\t/**\n\t * Type based plug-ins.\n\t *\n\t * Each column in DataTables has a type assigned to it, either by automatic\n\t * detection or by direct assignment using the `type` option for the column.\n\t * The type of a column will effect how it is ordering and search (plug-ins\n\t * can also make use of the column type if required).\n\t *\n\t * @namespace\n\t */\n\ttype: {\n\t\t/**\n\t\t * Type detection functions.\n\t\t *\n\t\t * The functions defined in this object are used to automatically detect\n\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t * when complex data is in the table.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be analysed\n\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t     *     perform context specific type detection - for example detection\n\t     *     based on language settings such as using a comma for a decimal\n\t     *     place. Generally speaking the options from the settings will not\n\t     *     be required\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t *   pass it on to the other type detection functions.\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Currency type detection plug-in:\n\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t *      function ( data, settings ) {\n\t\t *        // Check the numeric part\n\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\n\t\t *          return null;\n\t\t *        }\n\t\t *\n\t\t *        // Check prefixed by currency\n\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t *          return 'currency';\n\t\t *        }\n\t\t *        return null;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tdetect: [],\n\n\n\t\t/**\n\t\t * Type based search formatting.\n\t\t *\n\t\t * The type based searching functions can be used to pre-format the\n\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t *\n\t\t * Note that is a search is not defined for a column of a given type,\n\t\t * no search formatting will be performed.\n\t\t * \n\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t * or a type detection plug-in), you will typically be using this for\n\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t * the format that should be searched upon. This is done by adding\n\t\t * functions this object with a parameter name which matches the sType\n\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t * for searching data.\n\t\t *\n\t\t * The functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t *    }\n\t\t */\n\t\tsearch: {},\n\n\n\t\t/**\n\t\t * Type based ordering.\n\t\t *\n\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t * is defined by the functions available in this object.\n\t\t *\n\t\t * Each ordering option can be described by three properties added to\n\t\t * this object:\n\t\t *\n\t\t * * `{type}-pre` - Pre-formatting function\n\t\t * * `{type}-asc` - Ascending order function\n\t\t * * `{type}-desc` - Descending order function\n\t\t *\n\t\t * All three can be used together, only `{type}-pre` or only\n\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t * implementation in terms of speed, although the others are provided\n\t\t * for compatibility with existing Javascript sort functions.\n\t\t *\n\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t *\n\t\t * And return:\n\t\t *\n\t\t * * `{*}` Data to be sorted upon\n\t\t *\n\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t * functions, taking two parameters:\n\t\t *\n\t     *  1. `{*}` Data to compare to the second parameter\n\t     *  2. `{*}` Data to compare to the first parameter\n\t\t *\n\t\t * And returning:\n\t\t *\n\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t *   parameter.\n\t\t * \n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t *      \"string-pre\": function(x) {\n\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t *        return parseFloat( a );\n\t\t *      }\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t *      \"string-case-asc\": function(x,y) {\n\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t *      },\n\t\t *      \"string-case-desc\": function(x,y) {\n\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\torder: {}\n\t},\n\n\t/**\n\t * Unique DataTables instance counter\n\t *\n\t * @type int\n\t * @private\n\t */\n\t_unique: 0,\n\n\n\t//\n\t// Depreciated\n\t// The following properties are retained for backwards compatibility only.\n\t// The should not be used in new projects and will be removed in a future\n\t// version\n\t//\n\n\t/**\n\t * Version check function.\n\t *  @type function\n\t *  @depreciated Since 1.10\n\t */\n\tfnVersionCheck: DataTable.fnVersionCheck,\n\n\n\t/**\n\t * Index for what 'this' index API functions should use\n\t *  @type int\n\t *  @deprecated Since v1.10\n\t */\n\tiApiIndex: 0,\n\n\n\t/**\n\t * jQuery UI class container\n\t *  @type object\n\t *  @deprecated Since v1.10\n\t */\n\toJUIClasses: {},\n\n\n\t/**\n\t * Software version\n\t *  @type string\n\t *  @deprecated Since v1.10\n\t */\n\tsVersion: DataTable.version\n};\n\n\n//\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n//\n$.extend( _ext, {\n\tafnFiltering: _ext.search,\n\taTypes:       _ext.type.detect,\n\tofnSearch:    _ext.type.search,\n\toSort:        _ext.type.order,\n\tafnSortData:  _ext.order,\n\taoFeatures:   _ext.feature,\n\toApi:         _ext.internal,\n\toStdClasses:  _ext.classes,\n\toPagination:  _ext.pager\n} );\n\n\n$.extend( DataTable.ext.classes, {\n\t\"sTable\": \"dataTable\",\n\t\"sNoFooter\": \"no-footer\",\n\n\t/* Paging buttons */\n\t\"sPageButton\": \"paginate_button\",\n\t\"sPageButtonActive\": \"current\",\n\t\"sPageButtonDisabled\": \"disabled\",\n\n\t/* Striping classes */\n\t\"sStripeOdd\": \"odd\",\n\t\"sStripeEven\": \"even\",\n\n\t/* Empty row */\n\t\"sRowEmpty\": \"dataTables_empty\",\n\n\t/* Features */\n\t\"sWrapper\": \"dataTables_wrapper\",\n\t\"sFilter\": \"dataTables_filter\",\n\t\"sInfo\": \"dataTables_info\",\n\t\"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\n\t\"sLength\": \"dataTables_length\",\n\t\"sProcessing\": \"dataTables_processing\",\n\n\t/* Sorting */\n\t\"sSortAsc\": \"sorting_asc\",\n\t\"sSortDesc\": \"sorting_desc\",\n\t\"sSortable\": \"sorting\", /* Sortable in both directions */\n\t\"sSortableAsc\": \"sorting_desc_disabled\",\n\t\"sSortableDesc\": \"sorting_asc_disabled\",\n\t\"sSortableNone\": \"sorting_disabled\",\n\t\"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\n\n\t/* Filtering */\n\t\"sFilterInput\": \"\",\n\n\t/* Page length */\n\t\"sLengthSelect\": \"\",\n\n\t/* Scrolling */\n\t\"sScrollWrapper\": \"dataTables_scroll\",\n\t\"sScrollHead\": \"dataTables_scrollHead\",\n\t\"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n\t\"sScrollBody\": \"dataTables_scrollBody\",\n\t\"sScrollFoot\": \"dataTables_scrollFoot\",\n\t\"sScrollFootInner\": \"dataTables_scrollFootInner\",\n\n\t/* Misc */\n\t\"sHeaderTH\": \"\",\n\t\"sFooterTH\": \"\",\n\n\t// Deprecated\n\t\"sSortJUIAsc\": \"\",\n\t\"sSortJUIDesc\": \"\",\n\t\"sSortJUI\": \"\",\n\t\"sSortJUIAscAllowed\": \"\",\n\t\"sSortJUIDescAllowed\": \"\",\n\t\"sSortJUIWrapper\": \"\",\n\t\"sSortIcon\": \"\",\n\t\"sJUIHeader\": \"\",\n\t\"sJUIFooter\": \"\"\n} );\n\n\nvar extPagination = DataTable.ext.pager;\n\nfunction _numbers ( page, pages ) {\n\tvar\n\t\tnumbers = [],\n\t\tbuttons = extPagination.numbers_length,\n\t\thalf = Math.floor( buttons / 2 ),\n\t\ti = 1;\n\n\tif ( pages <= buttons ) {\n\t\tnumbers = _range( 0, pages );\n\t}\n\telse if ( page <= half ) {\n\t\tnumbers = _range( 0, buttons-2 );\n\t\tnumbers.push( 'ellipsis' );\n\t\tnumbers.push( pages-1 );\n\t}\n\telse if ( page >= pages - 1 - half ) {\n\t\tnumbers = _range( pages-(buttons-2), pages );\n\t\tnumbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6\n\t\tnumbers.splice( 0, 0, 0 );\n\t}\n\telse {\n\t\tnumbers = _range( page-half+2, page+half-1 );\n\t\tnumbers.push( 'ellipsis' );\n\t\tnumbers.push( pages-1 );\n\t\tnumbers.splice( 0, 0, 'ellipsis' );\n\t\tnumbers.splice( 0, 0, 0 );\n\t}\n\n\tnumbers.DT_el = 'span';\n\treturn numbers;\n}\n\n\n$.extend( extPagination, {\n\tsimple: function ( page, pages ) {\n\t\treturn [ 'previous', 'next' ];\n\t},\n\n\tfull: function ( page, pages ) {\n\t\treturn [  'first', 'previous', 'next', 'last' ];\n\t},\n\n\tnumbers: function ( page, pages ) {\n\t\treturn [ _numbers(page, pages) ];\n\t},\n\n\tsimple_numbers: function ( page, pages ) {\n\t\treturn [ 'previous', _numbers(page, pages), 'next' ];\n\t},\n\n\tfull_numbers: function ( page, pages ) {\n\t\treturn [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];\n\t},\n\t\n\tfirst_last_numbers: function (page, pages) {\n \t\treturn ['first', _numbers(page, pages), 'last'];\n \t},\n\n\t// For testing and plug-ins to use\n\t_numbers: _numbers,\n\n\t// Number of number buttons (including ellipsis) to show. _Must be odd!_\n\tnumbers_length: 7\n} );\n\n\n$.extend( true, DataTable.ext.renderer, {\n\tpageButton: {\n\t\t_: function ( settings, host, idx, buttons, page, pages ) {\n\t\t\tvar classes = settings.oClasses;\n\t\t\tvar lang = settings.oLanguage.oPaginate;\n\t\t\tvar aria = settings.oLanguage.oAria.paginate || {};\n\t\t\tvar btnDisplay, btnClass;\n\n\t\t\tvar attach = function( container, buttons ) {\n\t\t\t\tvar i, ien, node, button;\n\t\t\t\tvar disabledClass = classes.sPageButtonDisabled;\n\t\t\t\tvar clickHandler = function ( e ) {\n\t\t\t\t\t_fnPageChange( settings, e.data.action, true );\n\t\t\t\t};\n\n\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\t\tbutton = buttons[i];\n\n\t\t\t\t\tif ( Array.isArray( button ) ) {\n\t\t\t\t\t\tvar inner = $( '<'+(button.DT_el || 'div')+'/>' )\n\t\t\t\t\t\t\t.appendTo( container );\n\t\t\t\t\t\tattach( inner, button );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar disabled = false;\n\n\t\t\t\t\t\tbtnDisplay = null;\n\t\t\t\t\t\tbtnClass = button;\n\n\t\t\t\t\t\tswitch ( button ) {\n\t\t\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\t\t\tcontainer.append('<span class=\"ellipsis\">&#x2026;</span>');\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'first':\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\n\t\t\t\t\t\t\t\tif ( page === 0 ) {\n\t\t\t\t\t\t\t\t\tdisabled = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\n\t\t\t\t\t\t\t\tif ( page === 0 ) {\n\t\t\t\t\t\t\t\t\tdisabled = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'next':\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\n\t\t\t\t\t\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\t\t\t\t\t\tdisabled = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 'last':\n\t\t\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\n\t\t\t\t\t\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\t\t\t\t\t\tdisabled = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tbtnDisplay = settings.fnFormatNumber( button + 1 );\n\t\t\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t\t\tclasses.sPageButtonActive : '';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( btnDisplay !== null ) {\n\t\t\t\t\t\t\tvar tag = settings.oInit.pagingTag || 'a';\n\n\t\t\t\t\t\t\tif (disabled) {\n\t\t\t\t\t\t\t\tbtnClass += ' ' + disabledClass;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tnode = $('<'+tag+'>', {\n\t\t\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\n\t\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t\t'aria-disabled': disabled ? 'true' : null,\n\t\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\n\t\t\t\t\t\t\t\t\t'role': 'link',\n\t\t\t\t\t\t\t\t\t'aria-current': btnClass === classes.sPageButtonActive ? 'page' : null,\n\t\t\t\t\t\t\t\t\t'data-dt-idx': button,\n\t\t\t\t\t\t\t\t\t'tabindex': disabled ? -1 : settings.iTabIndex,\n\t\t\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\n\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t.html( btnDisplay )\n\t\t\t\t\t\t\t\t.appendTo( container );\n\n\t\t\t\t\t\t\t_fnBindAction(\n\t\t\t\t\t\t\t\tnode, {action: button}, clickHandler\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t// inside an iframe or frame. Try / catch the error. Not good for\n\t\t\t// accessibility, but neither are frames.\n\t\t\tvar activeEl;\n\n\t\t\ttry {\n\t\t\t\t// Because this approach is destroying and recreating the paging\n\t\t\t\t// elements, focus is lost on the select button which is bad for\n\t\t\t\t// accessibility. So we want to restore focus once the draw has\n\t\t\t\t// completed\n\t\t\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\n\t\t\t}\n\t\t\tcatch (e) {}\n\n\t\t\tattach( $(host).empty(), buttons );\n\n\t\t\tif ( activeEl !== undefined ) {\n\t\t\t\t$(host).find( '[data-dt-idx='+activeEl+']' ).trigger('focus');\n\t\t\t}\n\t\t}\n\t}\n} );\n\n\n\n// Built in type detection. See model.ext.aTypes for information about\n// what is required from this methods.\n$.extend( DataTable.ext.type.detect, [\n\t// Plain numbers - first since V8 detects some plain numbers as dates\n\t// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\n\tfunction ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _isNumber( d, decimal ) ? 'num'+decimal : null;\n\t},\n\n\t// Dates (only those recognised by the browser's Date.parse)\n\tfunction ( d, settings )\n\t{\n\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\n\t\t// valid, so we need to use a regex to restrict date formats. Use a\n\t\t// plug-in for anything other than ISO8601 style strings\n\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\n\t\t\treturn null;\n\t\t}\n\t\tvar parsed = Date.parse(d);\n\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\n\t},\n\n\t// Formatted numbers\n\tfunction ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;\n\t},\n\n\t// HTML numeric\n\tfunction ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;\n\t},\n\n\t// HTML numeric, formatted\n\tfunction ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;\n\t},\n\n\t// HTML (this is strict checking - there must be html)\n\tfunction ( d, settings )\n\t{\n\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\n\t\t\t'html' : null;\n\t}\n] );\n\n\n\n// Filter formatting functions. See model.ext.ofnSearch for information about\n// what is required from these methods.\n// \n// Note that additional search methods are added for the html numbers and\n// html formatted numbers by `_addNumericSort()` when we know what the decimal\n// place is\n\n\n$.extend( DataTable.ext.type.search, {\n\thtml: function ( data ) {\n\t\treturn _empty(data) ?\n\t\t\tdata :\n\t\t\ttypeof data === 'string' ?\n\t\t\t\tdata\n\t\t\t\t\t.replace( _re_new_lines, \" \" )\n\t\t\t\t\t.replace( _re_html, \"\" ) :\n\t\t\t\t'';\n\t},\n\n\tstring: function ( data ) {\n\t\treturn _empty(data) ?\n\t\t\tdata :\n\t\t\ttypeof data === 'string' ?\n\t\t\t\tdata.replace( _re_new_lines, \" \" ) :\n\t\t\t\tdata;\n\t}\n} );\n\n\n\nvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\n\tif ( d !== 0 && (!d || d === '-') ) {\n\t\treturn -Infinity;\n\t}\n\t\n\tvar type = typeof d;\n\n\tif (type === 'number' || type === 'bigint') {\n\t\treturn d;\n\t}\n\n\t// If a decimal place other than `.` is used, it needs to be given to the\n\t// function so we can detect it and replace with a `.` which is the only\n\t// decimal place Javascript recognises - it is not locale aware.\n\tif ( decimalPlace ) {\n\t\td = _numToDecimal( d, decimalPlace );\n\t}\n\n\tif ( d.replace ) {\n\t\tif ( re1 ) {\n\t\t\td = d.replace( re1, '' );\n\t\t}\n\n\t\tif ( re2 ) {\n\t\t\td = d.replace( re2, '' );\n\t\t}\n\t}\n\n\treturn d * 1;\n};\n\n\n// Add the numeric 'deformatting' functions for sorting and search. This is done\n// in a function to provide an easy ability for the language options to add\n// additional methods if a non-period decimal place is used.\nfunction _addNumericSort ( decimalPlace ) {\n\t$.each(\n\t\t{\n\t\t\t// Plain numbers\n\t\t\t\"num\": function ( d ) {\n\t\t\t\treturn __numericReplace( d, decimalPlace );\n\t\t\t},\n\n\t\t\t// Formatted numbers\n\t\t\t\"num-fmt\": function ( d ) {\n\t\t\t\treturn __numericReplace( d, decimalPlace, _re_formatted_numeric );\n\t\t\t},\n\n\t\t\t// HTML numeric\n\t\t\t\"html-num\": function ( d ) {\n\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html );\n\t\t\t},\n\n\t\t\t// HTML numeric, formatted\n\t\t\t\"html-num-fmt\": function ( d ) {\n\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );\n\t\t\t}\n\t\t},\n\t\tfunction ( key, fn ) {\n\t\t\t// Add the ordering method\n\t\t\t_ext.type.order[ key+decimalPlace+'-pre' ] = fn;\n\n\t\t\t// For HTML types add a search formatter that will strip the HTML\n\t\t\tif ( key.match(/^html\\-/) ) {\n\t\t\t\t_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;\n\t\t\t}\n\t\t}\n\t);\n}\n\n\n// Default sort methods\n$.extend( _ext.type.order, {\n\t// Dates\n\t\"date-pre\": function ( d ) {\n\t\tvar ts = Date.parse( d );\n\t\treturn isNaN(ts) ? -Infinity : ts;\n\t},\n\n\t// html\n\t\"html-pre\": function ( a ) {\n\t\treturn _empty(a) ?\n\t\t\t'' :\n\t\t\ta.replace ?\n\t\t\t\ta.replace( /<.*?>/g, \"\" ).toLowerCase() :\n\t\t\t\ta+'';\n\t},\n\n\t// string\n\t\"string-pre\": function ( a ) {\n\t\t// This is a little complex, but faster than always calling toString,\n\t\t// https://jsperf.com/tostring-v-check\n\t\treturn _empty(a) ?\n\t\t\t'' :\n\t\t\ttypeof a === 'string' ?\n\t\t\t\ta.toLowerCase() :\n\t\t\t\t! a.toString ?\n\t\t\t\t\t'' :\n\t\t\t\t\ta.toString();\n\t},\n\n\t// string-asc and -desc are retained only for compatibility with the old\n\t// sort methods\n\t\"string-asc\": function ( x, y ) {\n\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t},\n\n\t\"string-desc\": function ( x, y ) {\n\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t}\n} );\n\n\n// Numeric sorting types - order doesn't matter here\n_addNumericSort( '' );\n\n\n$.extend( true, DataTable.ext.renderer, {\n\theader: {\n\t\t_: function ( settings, cell, column, classes ) {\n\t\t\t// No additional mark-up required\n\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t// listening for\n\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\n\t\t\t\t\treturn;               // table, not a nested one\n\t\t\t\t}\n\n\t\t\t\tvar colIdx = column.idx;\n\n\t\t\t\tcell\n\t\t\t\t\t.removeClass(\n\t\t\t\t\t\tclasses.sSortAsc +' '+\n\t\t\t\t\t\tclasses.sSortDesc\n\t\t\t\t\t)\n\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t);\n\t\t\t} );\n\t\t},\n\n\t\tjqueryui: function ( settings, cell, column, classes ) {\n\t\t\t$('<div/>')\n\t\t\t\t.addClass( classes.sSortJUIWrapper )\n\t\t\t\t.append( cell.contents() )\n\t\t\t\t.append( $('<span/>')\n\t\t\t\t\t.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )\n\t\t\t\t)\n\t\t\t\t.appendTo( cell );\n\n\t\t\t// Attach a sort listener to update on sort\n\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar colIdx = column.idx;\n\n\t\t\t\tcell\n\t\t\t\t\t.removeClass( classes.sSortAsc +\" \"+classes.sSortDesc )\n\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t);\n\n\t\t\t\tcell\n\t\t\t\t\t.find( 'span.'+classes.sSortIcon )\n\t\t\t\t\t.removeClass(\n\t\t\t\t\t\tclasses.sSortJUIAsc +\" \"+\n\t\t\t\t\t\tclasses.sSortJUIDesc +\" \"+\n\t\t\t\t\t\tclasses.sSortJUI +\" \"+\n\t\t\t\t\t\tclasses.sSortJUIAscAllowed +\" \"+\n\t\t\t\t\t\tclasses.sSortJUIDescAllowed\n\t\t\t\t\t)\n\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\tclasses.sSortJUIAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\tclasses.sSortJUIDesc :\n\t\t\t\t\t\t\tcolumn.sSortingClassJUI\n\t\t\t\t\t);\n\t\t\t} );\n\t\t}\n\t}\n} );\n\n/*\n * Public helper functions. These aren't used internally by DataTables, or\n * called by any of the options passed into DataTables, but they can be used\n * externally by developers working with DataTables. They are helper functions\n * to make working with DataTables a little bit easier.\n */\n\nvar __htmlEscapeEntities = function ( d ) {\n\tif (Array.isArray(d)) {\n\t\td = d.join(',');\n\t}\n\n\treturn typeof d === 'string' ?\n\t\td\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;') :\n\t\td;\n};\n\n// Common logic for moment, luxon or a date action\nfunction __mld( dt, momentFn, luxonFn, dateFn, arg1 ) {\n\tif (window.moment) {\n\t\treturn dt[momentFn]( arg1 );\n\t}\n\telse if (window.luxon) {\n\t\treturn dt[luxonFn]( arg1 );\n\t}\n\t\n\treturn dateFn ? dt[dateFn]( arg1 ) : dt;\n}\n\n\nvar __mlWarning = false;\nfunction __mldObj (d, format, locale) {\n\tvar dt;\n\n\tif (window.moment) {\n\t\tdt = window.moment.utc( d, format, locale, true );\n\n\t\tif (! dt.isValid()) {\n\t\t\treturn null;\n\t\t}\n\t}\n\telse if (window.luxon) {\n\t\tdt = format && typeof d === 'string'\n\t\t\t? window.luxon.DateTime.fromFormat( d, format )\n\t\t\t: window.luxon.DateTime.fromISO( d );\n\n\t\tif (! dt.isValid) {\n\t\t\treturn null;\n\t\t}\n\n\t\tdt.setLocale(locale);\n\t}\n\telse if (! format) {\n\t\t// No format given, must be ISO\n\t\tdt = new Date(d);\n\t}\n\telse {\n\t\tif (! __mlWarning) {\n\t\t\talert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\n\t\t}\n\n\t\t__mlWarning = true;\n\t}\n\n\treturn dt;\n}\n\n// Wrapper for date, datetime and time which all operate the same way with the exception of\n// the output string for auto locale support\nfunction __mlHelper (localeString) {\n\treturn function ( from, to, locale, def ) {\n\t\t// Luxon and Moment support\n\t\t// Argument shifting\n\t\tif ( arguments.length === 0 ) {\n\t\t\tlocale = 'en';\n\t\t\tto = null; // means toLocaleString\n\t\t\tfrom = null; // means iso8601\n\t\t}\n\t\telse if ( arguments.length === 1 ) {\n\t\t\tlocale = 'en';\n\t\t\tto = from;\n\t\t\tfrom = null;\n\t\t}\n\t\telse if ( arguments.length === 2 ) {\n\t\t\tlocale = to;\n\t\t\tto = from;\n\t\t\tfrom = null;\n\t\t}\n\n\t\tvar typeName = 'datetime-' + to;\n\n\t\t// Add type detection and sorting specific to this date format - we need to be able to identify\n\t\t// date type columns as such, rather than as numbers in extensions. Hence the need for this.\n\t\tif (! DataTable.ext.type.order[typeName]) {\n\t\t\t// The renderer will give the value to type detect as the type!\n\t\t\tDataTable.ext.type.detect.unshift(function (d) {\n\t\t\t\treturn d === typeName ? typeName : false;\n\t\t\t});\n\n\t\t\t// The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\n\t\t\t// `valueOf` which gives milliseconds epoch\n\t\t\tDataTable.ext.type.order[typeName + '-asc'] = function (a, b) {\n\t\t\t\tvar x = a.valueOf();\n\t\t\t\tvar y = b.valueOf();\n\n\t\t\t\treturn x === y\n\t\t\t\t\t? 0\n\t\t\t\t\t: x < y\n\t\t\t\t\t\t? -1\n\t\t\t\t\t\t: 1;\n\t\t\t}\n\n\t\t\tDataTable.ext.type.order[typeName + '-desc'] = function (a, b) {\n\t\t\t\tvar x = a.valueOf();\n\t\t\t\tvar y = b.valueOf();\n\n\t\t\t\treturn x === y\n\t\t\t\t\t? 0\n\t\t\t\t\t: x > y\n\t\t\t\t\t\t? -1\n\t\t\t\t\t\t: 1;\n\t\t\t}\n\t\t}\n\t\n\t\treturn function ( d, type ) {\n\t\t\t// Allow for a default value\n\t\t\tif (d === null || d === undefined) {\n\t\t\t\tif (def === '--now') {\n\t\t\t\t\t// We treat everything as UTC further down, so no changes are\n\t\t\t\t\t// made, as such need to get the local date / time as if it were\n\t\t\t\t\t// UTC\n\t\t\t\t\tvar local = new Date();\n\t\t\t\t\td = new Date( Date.UTC(\n\t\t\t\t\t\tlocal.getFullYear(), local.getMonth(), local.getDate(),\n\t\t\t\t\t\tlocal.getHours(), local.getMinutes(), local.getSeconds()\n\t\t\t\t\t) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (type === 'type') {\n\t\t\t\t// Typing uses the type name for fast matching\n\t\t\t\treturn typeName;\n\t\t\t}\n\n\t\t\tif (d === '') {\n\t\t\t\treturn type !== 'sort'\n\t\t\t\t\t? ''\n\t\t\t\t\t: __mldObj('0000-01-01 00:00:00', null, locale);\n\t\t\t}\n\n\t\t\t// Shortcut. If `from` and `to` are the same, we are using the renderer to\n\t\t\t// format for ordering, not display - its already in the display format.\n\t\t\tif ( to !== null && from === to && type !== 'sort' && type !== 'type' && ! (d instanceof Date) ) {\n\t\t\t\treturn d;\n\t\t\t}\n\n\t\t\tvar dt = __mldObj(d, from, locale);\n\n\t\t\tif (dt === null) {\n\t\t\t\treturn d;\n\t\t\t}\n\n\t\t\tif (type === 'sort') {\n\t\t\t\treturn dt;\n\t\t\t}\n\t\t\t\n\t\t\tvar formatted = to === null\n\t\t\t\t? __mld(dt, 'toDate', 'toJSDate', '')[localeString]()\n\t\t\t\t: __mld(dt, 'format', 'toFormat', 'toISOString', to);\n\n\t\t\t// XSS protection\n\t\t\treturn type === 'display' ?\n\t\t\t\t__htmlEscapeEntities( formatted ) :\n\t\t\t\tformatted;\n\t\t};\n\t}\n}\n\n// Based on locale, determine standard number formatting\n// Fallback for legacy browsers is US English\nvar __thousands = ',';\nvar __decimal = '.';\n\nif (window.Intl !== undefined) {\n\ttry {\n\t\tvar num = new Intl.NumberFormat().formatToParts(100000.1);\n\t\n\t\tfor (var i=0 ; i<num.length ; i++) {\n\t\t\tif (num[i].type === 'group') {\n\t\t\t\t__thousands = num[i].value;\n\t\t\t}\n\t\t\telse if (num[i].type === 'decimal') {\n\t\t\t\t__decimal = num[i].value;\n\t\t\t}\n\t\t}\n\t}\n\tcatch (e) {\n\t\t// noop\n\t}\n}\n\n// Formatted date time detection - use by declaring the formats you are going to use\nDataTable.datetime = function ( format, locale ) {\n\tvar typeName = 'datetime-detect-' + format;\n\n\tif (! locale) {\n\t\tlocale = 'en';\n\t}\n\n\tif (! DataTable.ext.type.order[typeName]) {\n\t\tDataTable.ext.type.detect.unshift(function (d) {\n\t\t\tvar dt = __mldObj(d, format, locale);\n\t\t\treturn d === '' || dt ? typeName : false;\n\t\t});\n\n\t\tDataTable.ext.type.order[typeName + '-pre'] = function (d) {\n\t\t\treturn __mldObj(d, format, locale) || 0;\n\t\t}\n\t}\n}\n\n/**\n * Helpers for `columns.render`.\n *\n * The options defined here can be used with the `columns.render` initialisation\n * option to provide a display renderer. The following functions are defined:\n *\n * * `number` - Will format numeric data (defined by `columns.data`) for\n *   display, retaining the original unformatted data for sorting and filtering.\n *   It takes 5 parameters:\n *   * `string` - Thousands grouping separator\n *   * `string` - Decimal point indicator\n *   * `integer` - Number of decimal points to show\n *   * `string` (optional) - Prefix.\n *   * `string` (optional) - Postfix (/suffix).\n * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n *   parameters.\n *\n * @example\n *   // Column definition using the number renderer\n *   {\n *     data: \"salary\",\n *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n *   }\n *\n * @namespace\n */\nDataTable.render = {\n\tdate: __mlHelper('toLocaleDateString'),\n\tdatetime: __mlHelper('toLocaleString'),\n\ttime: __mlHelper('toLocaleTimeString'),\n\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\n\t\t// Auto locale detection\n\t\tif (thousands === null || thousands === undefined) {\n\t\t\tthousands = __thousands;\n\t\t}\n\n\t\tif (decimal === null || decimal === undefined) {\n\t\t\tdecimal = __decimal;\n\t\t}\n\n\t\treturn {\n\t\t\tdisplay: function ( d ) {\n\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\n\t\t\t\tif (d === '' || d === null) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\n\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\tvar flo = parseFloat( d );\n\n\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t// be a number after all)\n\t\t\t\tif ( isNaN( flo ) ) {\n\t\t\t\t\treturn __htmlEscapeEntities( d );\n\t\t\t\t}\n\n\t\t\t\tflo = flo.toFixed( precision );\n\t\t\t\td = Math.abs( flo );\n\n\t\t\t\tvar intPart = parseInt( d, 10 );\n\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\n\t\t\t\t\t'';\n\n\t\t\t\t// If zero, then can't have a negative prefix\n\t\t\t\tif (intPart === 0 && parseFloat(floatPart) === 0) {\n\t\t\t\t\tnegative = '';\n\t\t\t\t}\n\n\t\t\t\treturn negative + (prefix||'') +\n\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t) +\n\t\t\t\t\tfloatPart +\n\t\t\t\t\t(postfix||'');\n\t\t\t}\n\t\t};\n\t},\n\n\ttext: function () {\n\t\treturn {\n\t\t\tdisplay: __htmlEscapeEntities,\n\t\t\tfilter: __htmlEscapeEntities\n\t\t};\n\t}\n};\n\n\n/*\n * This is really a good bit rubbish this method of exposing the internal methods\n * publicly... - To be fixed in 2.0 using methods on the prototype\n */\n\n\n/**\n * Create a wrapper function for exporting an internal functions to an external API.\n *  @param {string} fn API function name\n *  @returns {function} wrapped function\n *  @memberof DataTable#internal\n */\nfunction _fnExternApiFunc (fn)\n{\n\treturn function() {\n\t\tvar args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(\n\t\t\tArray.prototype.slice.call(arguments)\n\t\t);\n\t\treturn DataTable.ext.internal[fn].apply( this, args );\n\t};\n}\n\n\n/**\n * Reference to internal functions for use by plug-in developers. Note that\n * these methods are references to internal functions and are considered to be\n * private. If you use these methods, be aware that they are liable to change\n * between versions.\n *  @namespace\n */\n$.extend( DataTable.ext.internal, {\n\t_fnExternApiFunc: _fnExternApiFunc,\n\t_fnBuildAjax: _fnBuildAjax,\n\t_fnAjaxUpdate: _fnAjaxUpdate,\n\t_fnAjaxParameters: _fnAjaxParameters,\n\t_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n\t_fnAjaxDataSrc: _fnAjaxDataSrc,\n\t_fnAddColumn: _fnAddColumn,\n\t_fnColumnOptions: _fnColumnOptions,\n\t_fnAdjustColumnSizing: _fnAdjustColumnSizing,\n\t_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n\t_fnColumnIndexToVisible: _fnColumnIndexToVisible,\n\t_fnVisbleColumns: _fnVisbleColumns,\n\t_fnGetColumns: _fnGetColumns,\n\t_fnColumnTypes: _fnColumnTypes,\n\t_fnApplyColumnDefs: _fnApplyColumnDefs,\n\t_fnHungarianMap: _fnHungarianMap,\n\t_fnCamelToHungarian: _fnCamelToHungarian,\n\t_fnLanguageCompat: _fnLanguageCompat,\n\t_fnBrowserDetect: _fnBrowserDetect,\n\t_fnAddData: _fnAddData,\n\t_fnAddTr: _fnAddTr,\n\t_fnNodeToDataIndex: _fnNodeToDataIndex,\n\t_fnNodeToColumnIndex: _fnNodeToColumnIndex,\n\t_fnGetCellData: _fnGetCellData,\n\t_fnSetCellData: _fnSetCellData,\n\t_fnSplitObjNotation: _fnSplitObjNotation,\n\t_fnGetObjectDataFn: _fnGetObjectDataFn,\n\t_fnSetObjectDataFn: _fnSetObjectDataFn,\n\t_fnGetDataMaster: _fnGetDataMaster,\n\t_fnClearTable: _fnClearTable,\n\t_fnDeleteIndex: _fnDeleteIndex,\n\t_fnInvalidate: _fnInvalidate,\n\t_fnGetRowElements: _fnGetRowElements,\n\t_fnCreateTr: _fnCreateTr,\n\t_fnBuildHead: _fnBuildHead,\n\t_fnDrawHead: _fnDrawHead,\n\t_fnDraw: _fnDraw,\n\t_fnReDraw: _fnReDraw,\n\t_fnAddOptionsHtml: _fnAddOptionsHtml,\n\t_fnDetectHeader: _fnDetectHeader,\n\t_fnGetUniqueThs: _fnGetUniqueThs,\n\t_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n\t_fnFilterComplete: _fnFilterComplete,\n\t_fnFilterCustom: _fnFilterCustom,\n\t_fnFilterColumn: _fnFilterColumn,\n\t_fnFilter: _fnFilter,\n\t_fnFilterCreateSearch: _fnFilterCreateSearch,\n\t_fnEscapeRegex: _fnEscapeRegex,\n\t_fnFilterData: _fnFilterData,\n\t_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n\t_fnUpdateInfo: _fnUpdateInfo,\n\t_fnInfoMacros: _fnInfoMacros,\n\t_fnInitialise: _fnInitialise,\n\t_fnInitComplete: _fnInitComplete,\n\t_fnLengthChange: _fnLengthChange,\n\t_fnFeatureHtmlLength: _fnFeatureHtmlLength,\n\t_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n\t_fnPageChange: _fnPageChange,\n\t_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n\t_fnProcessingDisplay: _fnProcessingDisplay,\n\t_fnFeatureHtmlTable: _fnFeatureHtmlTable,\n\t_fnScrollDraw: _fnScrollDraw,\n\t_fnApplyToChildren: _fnApplyToChildren,\n\t_fnCalculateColumnWidths: _fnCalculateColumnWidths,\n\t_fnThrottle: _fnThrottle,\n\t_fnConvertToWidth: _fnConvertToWidth,\n\t_fnGetWidestNode: _fnGetWidestNode,\n\t_fnGetMaxLenString: _fnGetMaxLenString,\n\t_fnStringToCss: _fnStringToCss,\n\t_fnSortFlatten: _fnSortFlatten,\n\t_fnSort: _fnSort,\n\t_fnSortAria: _fnSortAria,\n\t_fnSortListener: _fnSortListener,\n\t_fnSortAttachListener: _fnSortAttachListener,\n\t_fnSortingClasses: _fnSortingClasses,\n\t_fnSortData: _fnSortData,\n\t_fnSaveState: _fnSaveState,\n\t_fnLoadState: _fnLoadState,\n\t_fnImplementState: _fnImplementState,\n\t_fnSettingsFromNode: _fnSettingsFromNode,\n\t_fnLog: _fnLog,\n\t_fnMap: _fnMap,\n\t_fnBindAction: _fnBindAction,\n\t_fnCallbackReg: _fnCallbackReg,\n\t_fnCallbackFire: _fnCallbackFire,\n\t_fnLengthOverflow: _fnLengthOverflow,\n\t_fnRenderer: _fnRenderer,\n\t_fnDataSource: _fnDataSource,\n\t_fnRowAttributes: _fnRowAttributes,\n\t_fnExtend: _fnExtend,\n\t_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\n\t                                // in 1.10, so this dead-end function is\n\t                                // added to prevent errors\n} );\n\n\n// jQuery access\n$.fn.dataTable = DataTable;\n\n// Provide access to the host jQuery object (circular reference)\nDataTable.$ = $;\n\n// Legacy aliases\n$.fn.dataTableSettings = DataTable.settings;\n$.fn.dataTableExt = DataTable.ext;\n\n// With a capital `D` we return a DataTables API instance rather than a\n// jQuery object\n$.fn.DataTable = function ( opts ) {\n\treturn $(this).dataTable( opts ).api();\n};\n\n// All properties that are available to $.fn.dataTable should also be\n// available on $.fn.DataTable\n$.each( DataTable, function ( prop, val ) {\n\t$.fn.DataTable[ prop ] = val;\n} );\n\nexport default DataTable;\n","/*! DataTables Bootstrap 5 integration\n * 2020 SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\nimport DataTable from 'datatables.net';\n\n// Allow reassignment of the $ variable\nlet $ = jQuery;\n\n\n/**\n * DataTables integration for Bootstrap 5. This requires Bootstrap 5 and\n * DataTables 1.10 or newer.\n *\n * This file sets the defaults and adds options to DataTables to style its\n * controls using Bootstrap. See https://datatables.net/manual/styling/bootstrap\n * for further information.\n */\n\n/* Set the defaults for DataTables initialisation */\n$.extend( true, DataTable.defaults, {\n\tdom:\n\t\t\"<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>\" +\n\t\t\"<'row dt-row'<'col-sm-12'tr>>\" +\n\t\t\"<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>\",\n\trenderer: 'bootstrap'\n} );\n\n\n/* Default class modification */\n$.extend( DataTable.ext.classes, {\n\tsWrapper:      \"dataTables_wrapper dt-bootstrap5\",\n\tsFilterInput:  \"form-control form-control-sm\",\n\tsLengthSelect: \"form-select form-select-sm\",\n\tsProcessing:   \"dataTables_processing card\",\n\tsPageButton:   \"paginate_button page-item\"\n} );\n\n\n/* Bootstrap paging button renderer */\nDataTable.ext.renderer.pageButton.bootstrap = function ( settings, host, idx, buttons, page, pages ) {\n\tvar api     = new DataTable.Api( settings );\n\tvar classes = settings.oClasses;\n\tvar lang    = settings.oLanguage.oPaginate;\n\tvar aria = settings.oLanguage.oAria.paginate || {};\n\tvar btnDisplay, btnClass;\n\n\tvar attach = function( container, buttons ) {\n\t\tvar i, ien, node, button;\n\t\tvar clickHandler = function ( e ) {\n\t\t\te.preventDefault();\n\t\t\tif ( !$(e.currentTarget).hasClass('disabled') && api.page() != e.data.action ) {\n\t\t\t\tapi.page( e.data.action ).draw( 'page' );\n\t\t\t}\n\t\t};\n\n\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tbutton = buttons[i];\n\n\t\t\tif ( Array.isArray( button ) ) {\n\t\t\t\tattach( container, button );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbtnDisplay = '';\n\t\t\t\tbtnClass = '';\n\n\t\t\t\tswitch ( button ) {\n\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\tbtnDisplay = '&#x2026;';\n\t\t\t\t\t\tbtnClass = 'disabled';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'first':\n\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'next':\n\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'last':\n\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t'' : ' disabled');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbtnDisplay = button + 1;\n\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t'active' : '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ( btnDisplay ) {\n\t\t\t\t\tvar disabled = btnClass.indexOf('disabled') !== -1;\n\n\t\t\t\t\tnode = $('<li>', {\n\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\n\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append( $('<a>', {\n\t\t\t\t\t\t\t\t'href': disabled ? null : '#',\n\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t'aria-disabled': disabled ? 'true' : null,\n\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\n\t\t\t\t\t\t\t\t'role': 'link',\n\t\t\t\t\t\t\t\t'aria-current': btnClass === 'active' ? 'page' : null,\n\t\t\t\t\t\t\t\t'data-dt-idx': button,\n\t\t\t\t\t\t\t\t'tabindex': disabled ? -1 : settings.iTabIndex,\n\t\t\t\t\t\t\t\t'class': 'page-link'\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.html( btnDisplay )\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.appendTo( container );\n\n\t\t\t\t\tsettings.oApi._fnBindAction(\n\t\t\t\t\t\tnode, {action: button}, clickHandler\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar hostEl = $(host);\n\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t// inside an iframe or frame. \n\tvar activeEl;\n\n\ttry {\n\t\t// Because this approach is destroying and recreating the paging\n\t\t// elements, focus is lost on the select button which is bad for\n\t\t// accessibility. So we want to restore focus once the draw has\n\t\t// completed\n\t\tactiveEl = hostEl.find(document.activeElement).data('dt-idx');\n\t}\n\tcatch (e) {}\n\n\tvar paginationEl = hostEl.children('ul.pagination');\n\n\tif (paginationEl.length) {\n\t\tpaginationEl.empty();\n\t}\n\telse {\n\t\tpaginationEl = hostEl.html('<ul/>').children('ul').addClass('pagination');\n\t}\n\n\tattach(\n\t\tpaginationEl,\n\t\tbuttons\n\t);\n\n\tif ( activeEl !== undefined ) {\n\t\thostEl.find('[data-dt-idx='+activeEl+']').trigger('focus');\n\t}\n};\n\n\nexport default DataTable;\n","import dataTable from \"datatables.net-bs5\"\n\n$.extend( $.fn.DataTable.defaults, {\n  searching: true,\n  stateSave: true,\n  paging: true,\n  processing: true,\n  serverSide: true,\n  iDisplayLength: 15,\n  drawCallback: function (settings) {\n    if (sessionStorage.getItem('clearDTState') === 'true') {\n      if ( sessionStorage.getItem('initialSort') ) {\n        if ( parseInt(JSON.parse(sessionStorage.getItem('initialSort'))[0][0]) >= parseInt(this.DataTable().init().columns.length) ) {\n          sessionStorage.setItem('initialSort', JSON.stringify([[1,\"asc\"]]))\n        }\n        this.DataTable().search('').columns().search('').order().state.clear()\n        this.DataTable().columns().header()[JSON.parse(sessionStorage.getItem('initialSort'))]      \n        this.DataTable().order(JSON.parse(sessionStorage.getItem('initialSort')))\n        this.DataTable().draw()\n      }\n      sessionStorage.removeItem('initialSort')\n    }\n    sessionStorage.setItem('clearDTState', false)\n  },\n  ajax: {\n    type: 'POST'\n  },\n  pagingType: \"numbers\",\n  columnDefs: [\n    {\n      targets: '_all',\n      defaultContent: '-'\n    }\n  ],\n  language: { url: '/dt_i18n?locale=' + $('body').attr('data-locale') },\n    dom: 't<\"info d-flex justify-content-between mx-0 row mt-1\"<\"col-6 d-none d-sm-block\"i><\"col-6 d-block d-sm-none \"><\"col-6 \"p>>r', \"initComplete\": function(settings, json) {\n      $(\".info\").appendTo($(\"#tableDom\"))\n    }\n} );\n"],"names":["$","jQuery","DataTable","selector","options","sSelector","oOpts","traditional","_Api","_fnSettingsFromNode","_ext","data","redraw","api","rows","bRedraw","settings","scroll","_fnScrollDraw","nTr","target","callback","remove","complete","sInput","iColumn","bRegex","bSmart","bShowGlobal","bCaseInsensitive","src","col","type","iRow","node","nodeName","cell","mHtml","sClass","mAction","iCol","bShow","aaSort","nNode","fnCallback","mData","mRow","bAction","_that","emptyInit","len","fn","_fnExternApiFunc","o","oInit","_fnExtend","i","iLen","sId","bInitHandedOff","defaults","$this","_fnLog","_fnCompatOpts","_fnCompatCols","_fnCamelToHungarian","allSettings","s","bRetrieve","bDestroy","oSettings","_fnLanguageCompat","_fnMap","_fnCallbackReg","_fnGetObjectDataFn","_fnBrowserDetect","oClasses","tmp","oLanguage","json","_fnCallbackFire","_fnInitialise","stripeClasses","rowOne","el","anThs","aoColumnsInit","nThead","_fnDetectHeader","_fnGetUniqueThs","_fnAddColumn","_fnApplyColumnDefs","oDef","_fnColumnOptions","a","name","sort","filter","features","loadedInit","sorting","_fnSortingClasses","aSort","_fnSortFlatten","sortedColumns","val","_fnSortAria","_fnDataSource","captions","thead","tbody","tfoot","_fnAddData","_fnAddTr","_fnSaveState","_fnLoadState","_api_register","_api_registerPlural","_re_dic","_re_new_lines","_re_html","_re_date","_re_escape_regex","_re_formatted_numeric","_empty","d","_intVal","integer","_numToDecimal","num","decimalPoint","_fnEscapeRegex","_isNumber","formatted","strType","_isHtml","_htmlNumeric","html","_stripHtml","_pluck","prop","prop2","out","ien","_pluck_order","order","_range","start","end","_removeEmpty","_areAllUnique","sorted","last","_unique","j","k","again","_flatten","_includes","search","arg","freq","frequency","timer","that","now","args","source","meta","setData","_fnSplitObjNotation","b","aLast","arrayNotation","funcNotation","innerSrc","__reArray","__reFn","jLen","key","row","t","fetchData","join","_fnHungarianMap","hungarian","match","newKey","map","user","force","hungarianKey","lang","defaultDecimal","_addNumericSort","zeroRecords","decimal","_fnCompatMap","knew","old","init","searchCols","dataSort","browser","n","outer","inner","_fnReduce","inc","value","isSet","nTh","oDefaults","oCol","oOptions","th","origClass","mDataSrc","mRender","attrTest","rowData","innerData","_fnSetObjectDataFn","bAsc","bDesc","_fnAdjustColumnSizing","columns","_fnCalculateColumnWidths","_fnVisibleToColumnIndex","iMatch","aiVis","_fnGetColumns","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","vis","sParam","_fnColumnTypes","types","jen","ken","detectedType","cache","_fnGetCellData","aoColDefs","aoCols","kLen","def","aTargets","aDataIn","anTds","oData","id","_fnCreateTr","trs","_fnGetRowElements","_fnNodeToDataIndex","_fnNodeToColumnIndex","rowIdx","colIdx","draw","defaultContent","cellData","fomatters","_fnSetCellData","str","_fnGetDataMaster","_fnClearTable","_fnDeleteIndex","iTarget","splice","iTargetIndex","_fnInvalidate","cellWrite","cells","cols","_fnRowAttributes","tds","td","contents","objectRead","attr","idx","setter","cellProcess","rowNode","nTrIn","nTd","create","tr","_fnBuildHead","column","createHeader","classes","_fnSortAttachListener","_fnRenderer","_fnDrawHead","aoSource","bIncludeHidden","nLocalTr","aoLocal","aApplied","iColumns","iRowspan","iColspan","_fnDraw","ajaxComplete","_fnStart","aPreDraw","_fnProcessingDisplay","anRows","iRowCount","asStripeClasses","iStripes","oLang","bServerSide","aiDisplay","iDisplayStart","iDisplayEnd","_fnAjaxUpdate","iStart","iEnd","iDataIndex","aoData","nRow","sStripe","sZero","body","_fnReDraw","holdPosition","_fnSort","_fnFilterComplete","_fnAddOptionsHtml","table","holding","insert","aDom","featureNode","cOption","nNewNode","cNext","sAttr","aSplit","_fnFeatureHtmlLength","_fnFeatureHtmlFilter","_fnFeatureHtmlProcessing","_fnFeatureHtmlTable","_fnFeatureHtmlInfo","_fnFeatureHtmlPaginate","aoFeatures","aanFeatures","aLayout","nTrs","nCell","l","iColShifted","bUnique","fnShiftCol","nHeader","aReturn","iInitDisplayStart","_fnBuildAjax","rbracket","ajaxData","ajax","instance","status","_fnAjaxDataSrc","error","newData","baseAjax","xhr","thrown","ret","drawHold","_fnAjaxParameters","_fnAjaxUpdateDraw","columnCount","preSearch","preColSearch","dataProp","columnSearch","displayStart","displayLength","param","legacy","compat","modern","recordsTotal","recordsFiltered","_fnInitComplete","write","dataSrc","tableId","language","previousSearch","input","searchFn","event","searchDelay","jqFilter","_fnThrottle","e","ev","oInput","iForce","oPrevSearch","aoPrevSearch","fnSaveFilter","oFilter","fnRegex","_fnFilter","_fnFilterColumn","_fnFilterCustom","filters","displayRows","searchStr","regex","smart","caseInsensitive","display","rpSearch","_fnFilterCreateSearch","prevSearch","displayMaster","invalidated","filtered","_fnFilterData","word","m","__filter_div","__filter_div_textContent","filterData","wasInvalidated","_fnSearchToCamel","obj","_fnSearchToHung","tid","nodes","_fnUpdateInfo","max","total","_fnInfoMacros","formatter","all","iAjaxStart","deferLoading","_fnStringToCss","aData","_fnLengthChange","_fnLengthOverflow","menu","d2","lengths","select","div","plugin","visRecords","page","pages","buttons","_fnPageChange","action","records","changed","show","scrollX","scrollY","caption","captionSide","headerClone","footerClone","footer","_div","size","scroller","children","scrollHead","scrollBody","scrollFoot","scrollLeft","scrollXInner","barWidth","divHeader","divHeaderStyle","divHeaderInner","divHeaderInnerStyle","divHeaderTable","divBodyEl","divBody","divBodyStyle","divFooter","divFooterInner","divFooterTable","header","tableEl","tableStyle","ie67","headerTrgEls","footerTrgEls","headerSrcEls","footerSrcEls","headerCopy","footerCopy","headerWidths","footerWidths","headerContent","footerContent","correction","sanityWidth","zeroOut","nSizer","style","scrollBarVis","_fnApplyToChildren","nToSize","iOuterWidth","bScrolling","padding","an1","an2","index","nNode1","nNode2","__re_html_remove","visibleColumns","headerCells","tableWidthAttr","tableContainer","userInputs","columnIdx","styleWidth","sizes","_fnConvertToWidth","tmpTable","_fnGetWidestNode","holder","border","bounding","bindResize","widths","parent","els","results","_fnGetMaxLenString","maxIdx","aoColumns","aDataSort","sType","srcCol","fixed","fixedObj","nestedSort","add","aiOrig","oExtSort","formatters","sortCol","_fnSortData","x","y","test","dataA","dataB","label","nextSort","oAria","asSorting","sTitle","_fnSortListener","append","nextSortIdx","next","overflow","sortIdx","attachTo","_fnBindAction","oldSort","sortClass","customSort","customData","state","loaded","_fnImplementState","abStateLoad","duration","level","msg","tn","ext","mappedName","extender","breakRefs","sStore","sName","callbackArr","eventName","renderer","host","__apiStruct","__arrayProto","_toSettings","mixed","jq","tables","context","ctxSettings","ctx","flatten","alwaysNew","items","item","apiInst","_selector_row_indexes","apiSelector","scope","struct","methodScoping","struc","heir","method","find","pluralName","singularName","__table_selector","paging","__reload","resetPaging","url","_selector_run","selectFn","opts","res","selectorType","_selector_opts","_selector_first","inst","displayFiltered","displayFilteredMap","__row_selector","run","sel","selInt","cellIdx","rowObj","r","hash","thatIdx","loopRow","loopCells","newRows","modRows","namespace","stateSaveParamsEvent","destroyEvent","idFn","ids","__details_add","klass","addRow","created","__details_state","__details_remove","__details_display","__details_events","drawEvent","colvisEvent","visible","_emp","_child_obj","_child_mth","__re_column_selector","__columnData","r1","r2","__column_selector","names","visColumns","jqResult","__setColumnVis","insertBefore","calc","__cell_selector","allCells","fnSelector","rowSelector","columnSelector","internalOpts","cellsNoOpts","dir","set","caseInsen","module","root","is","version","aThis","aThat","iThis","iThat","head","foot","jqRows","jqTable","jqTbody","jqWrapper","orig","removedMethod","arg1","arg2","arg3","arg4","token","plural","resolved","toFormat","paginate","extPagination","_numbers","numbers","half","aria","btnDisplay","btnClass","attach","container","button","disabledClass","clickHandler","disabled","tag","activeEl","parsed","__numericReplace","decimalPlace","re1","re2","ts","__htmlEscapeEntities","__mld","dt","momentFn","luxonFn","dateFn","__mlWarning","__mldObj","format","locale","__mlHelper","localeString","from","to","typeName","local","__thousands","__decimal","thousands","precision","prefix","postfix","negative","flo","intPart","floatPart","hostEl","paginationEl"],"mappings":"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","x_google_ignoreList":[0,1]}