{"version":3,"file":"form_controller-BixcNdhO.js","sources":["../../../node_modules/parsleyjs/dist/parsley.js","../../../app/frontend/javascript/libs/parsley/validator/comparison.js","../../../app/frontend/javascript/libs/parsley/i18n/pt-br.js","../../../app/frontend/javascript/libs/parsley/i18n/en.js","../../../app/frontend/javascript/libs/parsley/i18n/es.js","../../../app/frontend/javascript/libs/parsley/parsley_defaults.js","../../../app/frontend/javascript/base/parsley.js","../../../app/frontend/javascript/controllers/form_controller.js"],"sourcesContent":["/*!\n* Parsley.js\n* Version 2.9.2 - built Tue, Dec 10th 2019, 6:18 pm\n* http://parsleyjs.org\n* Guillaume Potier - <guillaume@wisembly.com>\n* Marc-Andre Lafortune - <petroselinum@marc-andre.ca>\n* MIT Licensed\n*/\n\n// The source code below is generated by babel as\n// Parsley is written in ECMAScript 6\n//\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('jquery')) :\n  typeof define === 'function' && define.amd ? define(['jquery'], factory) :\n  (global = global || self, global.parsley = factory(global.jQuery));\n}(this, (function ($) { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n      return;\n    }\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n\n  var globalID = 1;\n  var pastWarnings = {};\n  var Utils = {\n    // Parsley DOM-API\n    // returns object from dom attributes and values\n    attr: function attr(element, namespace, obj) {\n      var i;\n      var attribute;\n      var attributes;\n      var regex = new RegExp('^' + namespace, 'i');\n      if ('undefined' === typeof obj) obj = {};else {\n        // Clear all own properties. This won't affect prototype's values\n        for (i in obj) {\n          if (obj.hasOwnProperty(i)) delete obj[i];\n        }\n      }\n      if (!element) return obj;\n      attributes = element.attributes;\n\n      for (i = attributes.length; i--;) {\n        attribute = attributes[i];\n\n        if (attribute && attribute.specified && regex.test(attribute.name)) {\n          obj[this.camelize(attribute.name.slice(namespace.length))] = this.deserializeValue(attribute.value);\n        }\n      }\n\n      return obj;\n    },\n    checkAttr: function checkAttr(element, namespace, _checkAttr) {\n      return element.hasAttribute(namespace + _checkAttr);\n    },\n    setAttr: function setAttr(element, namespace, attr, value) {\n      element.setAttribute(this.dasherize(namespace + attr), String(value));\n    },\n    getType: function getType(element) {\n      return element.getAttribute('type') || 'text';\n    },\n    generateID: function generateID() {\n      return '' + globalID++;\n    },\n\n    /** Third party functions **/\n    deserializeValue: function deserializeValue(value) {\n      var num;\n\n      try {\n        return value ? value == \"true\" || (value == \"false\" ? false : value == \"null\" ? null : !isNaN(num = Number(value)) ? num : /^[\\[\\{]/.test(value) ? JSON.parse(value) : value) : value;\n      } catch (e) {\n        return value;\n      }\n    },\n    // Zepto camelize function\n    camelize: function camelize(str) {\n      return str.replace(/-+(.)?/g, function (match, chr) {\n        return chr ? chr.toUpperCase() : '';\n      });\n    },\n    // Zepto dasherize function\n    dasherize: function dasherize(str) {\n      return str.replace(/::/g, '/').replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2').replace(/([a-z\\d])([A-Z])/g, '$1_$2').replace(/_/g, '-').toLowerCase();\n    },\n    warn: function warn() {\n      var _window$console;\n\n      if (window.console && 'function' === typeof window.console.warn) (_window$console = window.console).warn.apply(_window$console, arguments);\n    },\n    warnOnce: function warnOnce(msg) {\n      if (!pastWarnings[msg]) {\n        pastWarnings[msg] = true;\n        this.warn.apply(this, arguments);\n      }\n    },\n    _resetWarnings: function _resetWarnings() {\n      pastWarnings = {};\n    },\n    trimString: function trimString(string) {\n      return string.replace(/^\\s+|\\s+$/g, '');\n    },\n    parse: {\n      date: function date(string) {\n        var parsed = string.match(/^(\\d{4,})-(\\d\\d)-(\\d\\d)$/);\n        if (!parsed) return null;\n\n        var _parsed$map = parsed.map(function (x) {\n          return parseInt(x, 10);\n        }),\n            _parsed$map2 = _slicedToArray(_parsed$map, 4),\n            _ = _parsed$map2[0],\n            year = _parsed$map2[1],\n            month = _parsed$map2[2],\n            day = _parsed$map2[3];\n\n        var date = new Date(year, month - 1, day);\n        if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) return null;\n        return date;\n      },\n      string: function string(_string) {\n        return _string;\n      },\n      integer: function integer(string) {\n        if (isNaN(string)) return null;\n        return parseInt(string, 10);\n      },\n      number: function number(string) {\n        if (isNaN(string)) throw null;\n        return parseFloat(string);\n      },\n      'boolean': function _boolean(string) {\n        return !/^\\s*false\\s*$/i.test(string);\n      },\n      object: function object(string) {\n        return Utils.deserializeValue(string);\n      },\n      regexp: function regexp(_regexp) {\n        var flags = ''; // Test if RegExp is literal, if not, nothing to be done, otherwise, we need to isolate flags and pattern\n\n        if (/^\\/.*\\/(?:[gimy]*)$/.test(_regexp)) {\n          // Replace the regexp literal string with the first match group: ([gimy]*)\n          // If no flag is present, this will be a blank string\n          flags = _regexp.replace(/.*\\/([gimy]*)$/, '$1'); // Again, replace the regexp literal string with the first match group:\n          // everything excluding the opening and closing slashes and the flags\n\n          _regexp = _regexp.replace(new RegExp('^/(.*?)/' + flags + '$'), '$1');\n        } else {\n          // Anchor regexp:\n          _regexp = '^' + _regexp + '$';\n        }\n\n        return new RegExp(_regexp, flags);\n      }\n    },\n    parseRequirement: function parseRequirement(requirementType, string) {\n      var converter = this.parse[requirementType || 'string'];\n      if (!converter) throw 'Unknown requirement specification: \"' + requirementType + '\"';\n      var converted = converter(string);\n      if (converted === null) throw \"Requirement is not a \".concat(requirementType, \": \\\"\").concat(string, \"\\\"\");\n      return converted;\n    },\n    namespaceEvents: function namespaceEvents(events, namespace) {\n      events = this.trimString(events || '').split(/\\s+/);\n      if (!events[0]) return '';\n      return $.map(events, function (evt) {\n        return \"\".concat(evt, \".\").concat(namespace);\n      }).join(' ');\n    },\n    difference: function difference(array, remove) {\n      // This is O(N^2), should be optimized\n      var result = [];\n      $.each(array, function (_, elem) {\n        if (remove.indexOf(elem) == -1) result.push(elem);\n      });\n      return result;\n    },\n    // Alter-ego to native Promise.all, but for jQuery\n    all: function all(promises) {\n      // jQuery treats $.when() and $.when(singlePromise) differently; let's avoid that and add spurious elements\n      return $.when.apply($, _toConsumableArray(promises).concat([42, 42]));\n    },\n    // Object.create polyfill, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create#Polyfill\n    objectCreate: Object.create || function () {\n      var Object = function Object() {};\n\n      return function (prototype) {\n        if (arguments.length > 1) {\n          throw Error('Second argument not supported');\n        }\n\n        if (_typeof(prototype) != 'object') {\n          throw TypeError('Argument must be an object');\n        }\n\n        Object.prototype = prototype;\n        var result = new Object();\n        Object.prototype = null;\n        return result;\n      };\n    }(),\n    _SubmitSelector: 'input[type=\"submit\"], button:submit'\n  };\n\n  // All these options could be overriden and specified directly in DOM using\n  // `data-parsley-` default DOM-API\n  // eg: `inputs` can be set in DOM using `data-parsley-inputs=\"input, textarea\"`\n  // eg: `data-parsley-stop-on-first-failing-constraint=\"false\"`\n  var Defaults = {\n    // ### General\n    // Default data-namespace for DOM API\n    namespace: 'data-parsley-',\n    // Supported inputs by default\n    inputs: 'input, textarea, select',\n    // Excluded inputs by default\n    excluded: 'input[type=button], input[type=submit], input[type=reset], input[type=hidden]',\n    // Stop validating field on highest priority failing constraint\n    priorityEnabled: true,\n    // ### Field only\n    // identifier used to group together inputs (e.g. radio buttons...)\n    multiple: null,\n    // identifier (or array of identifiers) used to validate only a select group of inputs\n    group: null,\n    // ### UI\n    // Enable\\Disable error messages\n    uiEnabled: true,\n    // Key events threshold before validation\n    validationThreshold: 3,\n    // Focused field on form validation error. 'first'|'last'|'none'\n    focus: 'first',\n    // event(s) that will trigger validation before first failure. eg: `input`...\n    trigger: false,\n    // event(s) that will trigger validation after first failure.\n    triggerAfterFailure: 'input',\n    // Class that would be added on every failing validation Parsley field\n    errorClass: 'parsley-error',\n    // Same for success validation\n    successClass: 'parsley-success',\n    // Return the `$element` that will receive these above success or error classes\n    // Could also be (and given directly from DOM) a valid selector like `'#div'`\n    classHandler: function classHandler(Field) {},\n    // Return the `$element` where errors will be appended\n    // Could also be (and given directly from DOM) a valid selector like `'#div'`\n    errorsContainer: function errorsContainer(Field) {},\n    // ul elem that would receive errors' list\n    errorsWrapper: '<ul class=\"parsley-errors-list\"></ul>',\n    // li elem that would receive error message\n    errorTemplate: '<li></li>'\n  };\n\n  var Base = function Base() {\n    this.__id__ = Utils.generateID();\n  };\n\n  Base.prototype = {\n    asyncSupport: true,\n    // Deprecated\n    _pipeAccordingToValidationResult: function _pipeAccordingToValidationResult() {\n      var _this = this;\n\n      var pipe = function pipe() {\n        var r = $.Deferred();\n        if (true !== _this.validationResult) r.reject();\n        return r.resolve().promise();\n      };\n\n      return [pipe, pipe];\n    },\n    actualizeOptions: function actualizeOptions() {\n      Utils.attr(this.element, this.options.namespace, this.domOptions);\n      if (this.parent && this.parent.actualizeOptions) this.parent.actualizeOptions();\n      return this;\n    },\n    _resetOptions: function _resetOptions(initOptions) {\n      this.domOptions = Utils.objectCreate(this.parent.options);\n      this.options = Utils.objectCreate(this.domOptions); // Shallow copy of ownProperties of initOptions:\n\n      for (var i in initOptions) {\n        if (initOptions.hasOwnProperty(i)) this.options[i] = initOptions[i];\n      }\n\n      this.actualizeOptions();\n    },\n    _listeners: null,\n    // Register a callback for the given event name\n    // Callback is called with context as the first argument and the `this`\n    // The context is the current parsley instance, or window.Parsley if global\n    // A return value of `false` will interrupt the calls\n    on: function on(name, fn) {\n      this._listeners = this._listeners || {};\n      var queue = this._listeners[name] = this._listeners[name] || [];\n      queue.push(fn);\n      return this;\n    },\n    // Deprecated. Use `on` instead\n    subscribe: function subscribe(name, fn) {\n      $.listenTo(this, name.toLowerCase(), fn);\n    },\n    // Unregister a callback (or all if none is given) for the given event name\n    off: function off(name, fn) {\n      var queue = this._listeners && this._listeners[name];\n\n      if (queue) {\n        if (!fn) {\n          delete this._listeners[name];\n        } else {\n          for (var i = queue.length; i--;) {\n            if (queue[i] === fn) queue.splice(i, 1);\n          }\n        }\n      }\n\n      return this;\n    },\n    // Deprecated. Use `off`\n    unsubscribe: function unsubscribe(name, fn) {\n      $.unsubscribeTo(this, name.toLowerCase());\n    },\n    // Trigger an event of the given name\n    // A return value of `false` interrupts the callback chain\n    // Returns false if execution was interrupted\n    trigger: function trigger(name, target, extraArg) {\n      target = target || this;\n      var queue = this._listeners && this._listeners[name];\n      var result;\n\n      if (queue) {\n        for (var i = queue.length; i--;) {\n          result = queue[i].call(target, target, extraArg);\n          if (result === false) return result;\n        }\n      }\n\n      if (this.parent) {\n        return this.parent.trigger(name, target, extraArg);\n      }\n\n      return true;\n    },\n    asyncIsValid: function asyncIsValid(group, force) {\n      Utils.warnOnce(\"asyncIsValid is deprecated; please use whenValid instead\");\n      return this.whenValid({\n        group: group,\n        force: force\n      });\n    },\n    _findRelated: function _findRelated() {\n      return this.options.multiple ? $(this.parent.element.querySelectorAll(\"[\".concat(this.options.namespace, \"multiple=\\\"\").concat(this.options.multiple, \"\\\"]\"))) : this.$element;\n    }\n  };\n\n  var convertArrayRequirement = function convertArrayRequirement(string, length) {\n    var m = string.match(/^\\s*\\[(.*)\\]\\s*$/);\n    if (!m) throw 'Requirement is not an array: \"' + string + '\"';\n    var values = m[1].split(',').map(Utils.trimString);\n    if (values.length !== length) throw 'Requirement has ' + values.length + ' values when ' + length + ' are needed';\n    return values;\n  };\n\n  var convertExtraOptionRequirement = function convertExtraOptionRequirement(requirementSpec, string, extraOptionReader) {\n    var main = null;\n    var extra = {};\n\n    for (var key in requirementSpec) {\n      if (key) {\n        var value = extraOptionReader(key);\n        if ('string' === typeof value) value = Utils.parseRequirement(requirementSpec[key], value);\n        extra[key] = value;\n      } else {\n        main = Utils.parseRequirement(requirementSpec[key], string);\n      }\n    }\n\n    return [main, extra];\n  }; // A Validator needs to implement the methods `validate` and `parseRequirements`\n\n\n  var Validator = function Validator(spec) {\n    $.extend(true, this, spec);\n  };\n\n  Validator.prototype = {\n    // Returns `true` iff the given `value` is valid according the given requirements.\n    validate: function validate(value, requirementFirstArg) {\n      if (this.fn) {\n        // Legacy style validator\n        if (arguments.length > 3) // If more args then value, requirement, instance...\n          requirementFirstArg = [].slice.call(arguments, 1, -1); // Skip first arg (value) and last (instance), combining the rest\n\n        return this.fn(value, requirementFirstArg);\n      }\n\n      if (Array.isArray(value)) {\n        if (!this.validateMultiple) throw 'Validator `' + this.name + '` does not handle multiple values';\n        return this.validateMultiple.apply(this, arguments);\n      } else {\n        var instance = arguments[arguments.length - 1];\n\n        if (this.validateDate && instance._isDateInput()) {\n          arguments[0] = Utils.parse.date(arguments[0]);\n          if (arguments[0] === null) return false;\n          return this.validateDate.apply(this, arguments);\n        }\n\n        if (this.validateNumber) {\n          if (!value) // Builtin validators all accept empty strings, except `required` of course\n            return true;\n          if (isNaN(value)) return false;\n          arguments[0] = parseFloat(arguments[0]);\n          return this.validateNumber.apply(this, arguments);\n        }\n\n        if (this.validateString) {\n          return this.validateString.apply(this, arguments);\n        }\n\n        throw 'Validator `' + this.name + '` only handles multiple values';\n      }\n    },\n    // Parses `requirements` into an array of arguments,\n    // according to `this.requirementType`\n    parseRequirements: function parseRequirements(requirements, extraOptionReader) {\n      if ('string' !== typeof requirements) {\n        // Assume requirement already parsed\n        // but make sure we return an array\n        return Array.isArray(requirements) ? requirements : [requirements];\n      }\n\n      var type = this.requirementType;\n\n      if (Array.isArray(type)) {\n        var values = convertArrayRequirement(requirements, type.length);\n\n        for (var i = 0; i < values.length; i++) {\n          values[i] = Utils.parseRequirement(type[i], values[i]);\n        }\n\n        return values;\n      } else if ($.isPlainObject(type)) {\n        return convertExtraOptionRequirement(type, requirements, extraOptionReader);\n      } else {\n        return [Utils.parseRequirement(type, requirements)];\n      }\n    },\n    // Defaults:\n    requirementType: 'string',\n    priority: 2\n  };\n\n  var ValidatorRegistry = function ValidatorRegistry(validators, catalog) {\n    this.__class__ = 'ValidatorRegistry'; // Default Parsley locale is en\n\n    this.locale = 'en';\n    this.init(validators || {}, catalog || {});\n  };\n\n  var typeTesters = {\n    email: /^((([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))$/,\n    // Follow https://www.w3.org/TR/html5/infrastructure.html#floating-point-numbers\n    number: /^-?(\\d*\\.)?\\d+(e[-+]?\\d+)?$/i,\n    integer: /^-?\\d+$/,\n    digits: /^\\d+$/,\n    alphanum: /^\\w+$/i,\n    date: {\n      test: function test(value) {\n        return Utils.parse.date(value) !== null;\n      }\n    },\n    url: new RegExp(\"^\" + // protocol identifier\n    \"(?:(?:https?|ftp)://)?\" + // ** mod: make scheme optional\n    // user:pass authentication\n    \"(?:\\\\S+(?::\\\\S*)?@)?\" + \"(?:\" + // IP address exclusion\n    // private & local networks\n    // \"(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})\" +   // ** mod: allow local networks\n    // \"(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})\" +  // ** mod: allow local networks\n    // \"(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})\" +  // ** mod: allow local networks\n    // IP address dotted notation octets\n    // excludes loopback network 0.0.0.0\n    // excludes reserved space >= 224.0.0.0\n    // excludes network & broacast addresses\n    // (first & last IP address of each class)\n    \"(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])\" + \"(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}\" + \"(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))\" + \"|\" + // host name\n    \"(?:(?:[a-zA-Z\\\\u00a1-\\\\uffff0-9]-*)*[a-zA-Z\\\\u00a1-\\\\uffff0-9]+)\" + // domain name\n    \"(?:\\\\.(?:[a-zA-Z\\\\u00a1-\\\\uffff0-9]-*)*[a-zA-Z\\\\u00a1-\\\\uffff0-9]+)*\" + // TLD identifier\n    \"(?:\\\\.(?:[a-zA-Z\\\\u00a1-\\\\uffff]{2,}))\" + \")\" + // port number\n    \"(?::\\\\d{2,5})?\" + // resource path\n    \"(?:/\\\\S*)?\" + \"$\")\n  };\n  typeTesters.range = typeTesters.number; // See http://stackoverflow.com/a/10454560/8279\n\n  var decimalPlaces = function decimalPlaces(num) {\n    var match = ('' + num).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n\n    if (!match) {\n      return 0;\n    }\n\n    return Math.max(0, // Number of digits right of decimal point.\n    (match[1] ? match[1].length : 0) - ( // Adjust for scientific notation.\n    match[2] ? +match[2] : 0));\n  }; // parseArguments('number', ['1', '2']) => [1, 2]\n\n\n  var parseArguments = function parseArguments(type, args) {\n    return args.map(Utils.parse[type]);\n  }; // operatorToValidator returns a validating function for an operator function, applied to the given type\n\n\n  var operatorToValidator = function operatorToValidator(type, operator) {\n    return function (value) {\n      for (var _len = arguments.length, requirementsAndInput = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        requirementsAndInput[_key - 1] = arguments[_key];\n      }\n\n      requirementsAndInput.pop(); // Get rid of `input` argument\n\n      return operator.apply(void 0, [value].concat(_toConsumableArray(parseArguments(type, requirementsAndInput))));\n    };\n  };\n\n  var comparisonOperator = function comparisonOperator(operator) {\n    return {\n      validateDate: operatorToValidator('date', operator),\n      validateNumber: operatorToValidator('number', operator),\n      requirementType: operator.length <= 2 ? 'string' : ['string', 'string'],\n      // Support operators with a 1 or 2 requirement(s)\n      priority: 30\n    };\n  };\n\n  ValidatorRegistry.prototype = {\n    init: function init(validators, catalog) {\n      this.catalog = catalog; // Copy prototype's validators:\n\n      this.validators = _extends({}, this.validators);\n\n      for (var name in validators) {\n        this.addValidator(name, validators[name].fn, validators[name].priority);\n      }\n\n      window.Parsley.trigger('parsley:validator:init');\n    },\n    // Set new messages locale if we have dictionary loaded in ParsleyConfig.i18n\n    setLocale: function setLocale(locale) {\n      if ('undefined' === typeof this.catalog[locale]) throw new Error(locale + ' is not available in the catalog');\n      this.locale = locale;\n      return this;\n    },\n    // Add a new messages catalog for a given locale. Set locale for this catalog if set === `true`\n    addCatalog: function addCatalog(locale, messages, set) {\n      if ('object' === _typeof(messages)) this.catalog[locale] = messages;\n      if (true === set) return this.setLocale(locale);\n      return this;\n    },\n    // Add a specific message for a given constraint in a given locale\n    addMessage: function addMessage(locale, name, message) {\n      if ('undefined' === typeof this.catalog[locale]) this.catalog[locale] = {};\n      this.catalog[locale][name] = message;\n      return this;\n    },\n    // Add messages for a given locale\n    addMessages: function addMessages(locale, nameMessageObject) {\n      for (var name in nameMessageObject) {\n        this.addMessage(locale, name, nameMessageObject[name]);\n      }\n\n      return this;\n    },\n    // Add a new validator\n    //\n    //    addValidator('custom', {\n    //        requirementType: ['integer', 'integer'],\n    //        validateString: function(value, from, to) {},\n    //        priority: 22,\n    //        messages: {\n    //          en: \"Hey, that's no good\",\n    //          fr: \"Aye aye, pas bon du tout\",\n    //        }\n    //    })\n    //\n    // Old API was addValidator(name, function, priority)\n    //\n    addValidator: function addValidator(name, arg1, arg2) {\n      if (this.validators[name]) Utils.warn('Validator \"' + name + '\" is already defined.');else if (Defaults.hasOwnProperty(name)) {\n        Utils.warn('\"' + name + '\" is a restricted keyword and is not a valid validator name.');\n        return;\n      }\n      return this._setValidator.apply(this, arguments);\n    },\n    hasValidator: function hasValidator(name) {\n      return !!this.validators[name];\n    },\n    updateValidator: function updateValidator(name, arg1, arg2) {\n      if (!this.validators[name]) {\n        Utils.warn('Validator \"' + name + '\" is not already defined.');\n        return this.addValidator.apply(this, arguments);\n      }\n\n      return this._setValidator.apply(this, arguments);\n    },\n    removeValidator: function removeValidator(name) {\n      if (!this.validators[name]) Utils.warn('Validator \"' + name + '\" is not defined.');\n      delete this.validators[name];\n      return this;\n    },\n    _setValidator: function _setValidator(name, validator, priority) {\n      if ('object' !== _typeof(validator)) {\n        // Old style validator, with `fn` and `priority`\n        validator = {\n          fn: validator,\n          priority: priority\n        };\n      }\n\n      if (!validator.validate) {\n        validator = new Validator(validator);\n      }\n\n      this.validators[name] = validator;\n\n      for (var locale in validator.messages || {}) {\n        this.addMessage(locale, name, validator.messages[locale]);\n      }\n\n      return this;\n    },\n    getErrorMessage: function getErrorMessage(constraint) {\n      var message; // Type constraints are a bit different, we have to match their requirements too to find right error message\n\n      if ('type' === constraint.name) {\n        var typeMessages = this.catalog[this.locale][constraint.name] || {};\n        message = typeMessages[constraint.requirements];\n      } else message = this.formatMessage(this.catalog[this.locale][constraint.name], constraint.requirements);\n\n      return message || this.catalog[this.locale].defaultMessage || this.catalog.en.defaultMessage;\n    },\n    // Kind of light `sprintf()` implementation\n    formatMessage: function formatMessage(string, parameters) {\n      if ('object' === _typeof(parameters)) {\n        for (var i in parameters) {\n          string = this.formatMessage(string, parameters[i]);\n        }\n\n        return string;\n      }\n\n      return 'string' === typeof string ? string.replace(/%s/i, parameters) : '';\n    },\n    // Here is the Parsley default validators list.\n    // A validator is an object with the following key values:\n    //  - priority: an integer\n    //  - requirement: 'string' (default), 'integer', 'number', 'regexp' or an Array of these\n    //  - validateString, validateMultiple, validateNumber: functions returning `true`, `false` or a promise\n    // Alternatively, a validator can be a function that returns such an object\n    //\n    validators: {\n      notblank: {\n        validateString: function validateString(value) {\n          return /\\S/.test(value);\n        },\n        priority: 2\n      },\n      required: {\n        validateMultiple: function validateMultiple(values) {\n          return values.length > 0;\n        },\n        validateString: function validateString(value) {\n          return /\\S/.test(value);\n        },\n        priority: 512\n      },\n      type: {\n        validateString: function validateString(value, type) {\n          var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n              _ref$step = _ref.step,\n              step = _ref$step === void 0 ? 'any' : _ref$step,\n              _ref$base = _ref.base,\n              base = _ref$base === void 0 ? 0 : _ref$base;\n\n          var tester = typeTesters[type];\n\n          if (!tester) {\n            throw new Error('validator type `' + type + '` is not supported');\n          }\n\n          if (!value) return true; // Builtin validators all accept empty strings, except `required` of course\n\n          if (!tester.test(value)) return false;\n\n          if ('number' === type) {\n            if (!/^any$/i.test(step || '')) {\n              var nb = Number(value);\n              var decimals = Math.max(decimalPlaces(step), decimalPlaces(base));\n              if (decimalPlaces(nb) > decimals) // Value can't have too many decimals\n                return false; // Be careful of rounding errors by using integers.\n\n              var toInt = function toInt(f) {\n                return Math.round(f * Math.pow(10, decimals));\n              };\n\n              if ((toInt(nb) - toInt(base)) % toInt(step) != 0) return false;\n            }\n          }\n\n          return true;\n        },\n        requirementType: {\n          '': 'string',\n          step: 'string',\n          base: 'number'\n        },\n        priority: 256\n      },\n      pattern: {\n        validateString: function validateString(value, regexp) {\n          if (!value) return true; // Builtin validators all accept empty strings, except `required` of course\n\n          return regexp.test(value);\n        },\n        requirementType: 'regexp',\n        priority: 64\n      },\n      minlength: {\n        validateString: function validateString(value, requirement) {\n          if (!value) return true; // Builtin validators all accept empty strings, except `required` of course\n\n          return value.length >= requirement;\n        },\n        requirementType: 'integer',\n        priority: 30\n      },\n      maxlength: {\n        validateString: function validateString(value, requirement) {\n          return value.length <= requirement;\n        },\n        requirementType: 'integer',\n        priority: 30\n      },\n      length: {\n        validateString: function validateString(value, min, max) {\n          if (!value) return true; // Builtin validators all accept empty strings, except `required` of course\n\n          return value.length >= min && value.length <= max;\n        },\n        requirementType: ['integer', 'integer'],\n        priority: 30\n      },\n      mincheck: {\n        validateMultiple: function validateMultiple(values, requirement) {\n          return values.length >= requirement;\n        },\n        requirementType: 'integer',\n        priority: 30\n      },\n      maxcheck: {\n        validateMultiple: function validateMultiple(values, requirement) {\n          return values.length <= requirement;\n        },\n        requirementType: 'integer',\n        priority: 30\n      },\n      check: {\n        validateMultiple: function validateMultiple(values, min, max) {\n          return values.length >= min && values.length <= max;\n        },\n        requirementType: ['integer', 'integer'],\n        priority: 30\n      },\n      min: comparisonOperator(function (value, requirement) {\n        return value >= requirement;\n      }),\n      max: comparisonOperator(function (value, requirement) {\n        return value <= requirement;\n      }),\n      range: comparisonOperator(function (value, min, max) {\n        return value >= min && value <= max;\n      }),\n      equalto: {\n        validateString: function validateString(value, refOrValue) {\n          if (!value) return true; // Builtin validators all accept empty strings, except `required` of course\n\n          var $reference = $(refOrValue);\n          if ($reference.length) return value === $reference.val();else return value === refOrValue;\n        },\n        priority: 256\n      },\n      euvatin: {\n        validateString: function validateString(value, refOrValue) {\n          if (!value) {\n            return true; // Builtin validators all accept empty strings, except `required` of course\n          }\n\n          var re = /^[A-Z][A-Z][A-Za-z0-9 -]{2,}$/;\n          return re.test(value);\n        },\n        priority: 30\n      }\n    }\n  };\n\n  var UI = {};\n\n  var diffResults = function diffResults(newResult, oldResult, deep) {\n    var added = [];\n    var kept = [];\n\n    for (var i = 0; i < newResult.length; i++) {\n      var found = false;\n\n      for (var j = 0; j < oldResult.length; j++) {\n        if (newResult[i].assert.name === oldResult[j].assert.name) {\n          found = true;\n          break;\n        }\n      }\n\n      if (found) kept.push(newResult[i]);else added.push(newResult[i]);\n    }\n\n    return {\n      kept: kept,\n      added: added,\n      removed: !deep ? diffResults(oldResult, newResult, true).added : []\n    };\n  };\n\n  UI.Form = {\n    _actualizeTriggers: function _actualizeTriggers() {\n      var _this = this;\n\n      this.$element.on('submit.Parsley', function (evt) {\n        _this.onSubmitValidate(evt);\n      });\n      this.$element.on('click.Parsley', Utils._SubmitSelector, function (evt) {\n        _this.onSubmitButton(evt);\n      }); // UI could be disabled\n\n      if (false === this.options.uiEnabled) return;\n      this.element.setAttribute('novalidate', '');\n    },\n    focus: function focus() {\n      this._focusedField = null;\n      if (true === this.validationResult || 'none' === this.options.focus) return null;\n\n      for (var i = 0; i < this.fields.length; i++) {\n        var field = this.fields[i];\n\n        if (true !== field.validationResult && field.validationResult.length > 0 && 'undefined' === typeof field.options.noFocus) {\n          this._focusedField = field.$element;\n          if ('first' === this.options.focus) break;\n        }\n      }\n\n      if (null === this._focusedField) return null;\n      return this._focusedField.focus();\n    },\n    _destroyUI: function _destroyUI() {\n      // Reset all event listeners\n      this.$element.off('.Parsley');\n    }\n  };\n  UI.Field = {\n    _reflowUI: function _reflowUI() {\n      this._buildUI(); // If this field doesn't have an active UI don't bother doing something\n\n\n      if (!this._ui) return; // Diff between two validation results\n\n      var diff = diffResults(this.validationResult, this._ui.lastValidationResult); // Then store current validation result for next reflow\n\n      this._ui.lastValidationResult = this.validationResult; // Handle valid / invalid / none field class\n\n      this._manageStatusClass(); // Add, remove, updated errors messages\n\n\n      this._manageErrorsMessages(diff); // Triggers impl\n\n\n      this._actualizeTriggers(); // If field is not valid for the first time, bind keyup trigger to ease UX and quickly inform user\n\n\n      if ((diff.kept.length || diff.added.length) && !this._failedOnce) {\n        this._failedOnce = true;\n\n        this._actualizeTriggers();\n      }\n    },\n    // Returns an array of field's error message(s)\n    getErrorsMessages: function getErrorsMessages() {\n      // No error message, field is valid\n      if (true === this.validationResult) return [];\n      var messages = [];\n\n      for (var i = 0; i < this.validationResult.length; i++) {\n        messages.push(this.validationResult[i].errorMessage || this._getErrorMessage(this.validationResult[i].assert));\n      }\n\n      return messages;\n    },\n    // It's a goal of Parsley that this method is no longer required [#1073]\n    addError: function addError(name) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          message = _ref.message,\n          assert = _ref.assert,\n          _ref$updateClass = _ref.updateClass,\n          updateClass = _ref$updateClass === void 0 ? true : _ref$updateClass;\n\n      this._buildUI();\n\n      this._addError(name, {\n        message: message,\n        assert: assert\n      });\n\n      if (updateClass) this._errorClass();\n    },\n    // It's a goal of Parsley that this method is no longer required [#1073]\n    updateError: function updateError(name) {\n      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          message = _ref2.message,\n          assert = _ref2.assert,\n          _ref2$updateClass = _ref2.updateClass,\n          updateClass = _ref2$updateClass === void 0 ? true : _ref2$updateClass;\n\n      this._buildUI();\n\n      this._updateError(name, {\n        message: message,\n        assert: assert\n      });\n\n      if (updateClass) this._errorClass();\n    },\n    // It's a goal of Parsley that this method is no longer required [#1073]\n    removeError: function removeError(name) {\n      var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref3$updateClass = _ref3.updateClass,\n          updateClass = _ref3$updateClass === void 0 ? true : _ref3$updateClass;\n\n      this._buildUI();\n\n      this._removeError(name); // edge case possible here: remove a standard Parsley error that is still failing in this.validationResult\n      // but highly improbable cuz' manually removing a well Parsley handled error makes no sense.\n\n\n      if (updateClass) this._manageStatusClass();\n    },\n    _manageStatusClass: function _manageStatusClass() {\n      if (this.hasConstraints() && this.needsValidation() && true === this.validationResult) this._successClass();else if (this.validationResult.length > 0) this._errorClass();else this._resetClass();\n    },\n    _manageErrorsMessages: function _manageErrorsMessages(diff) {\n      if ('undefined' !== typeof this.options.errorsMessagesDisabled) return; // Case where we have errorMessage option that configure an unique field error message, regardless failing validators\n\n      if ('undefined' !== typeof this.options.errorMessage) {\n        if (diff.added.length || diff.kept.length) {\n          this._insertErrorWrapper();\n\n          if (0 === this._ui.$errorsWrapper.find('.parsley-custom-error-message').length) this._ui.$errorsWrapper.append($(this.options.errorTemplate).addClass('parsley-custom-error-message'));\n\n          this._ui.$errorClassHandler.attr('aria-describedby', this._ui.errorsWrapperId);\n\n          return this._ui.$errorsWrapper.addClass('filled').attr('aria-hidden', 'false').find('.parsley-custom-error-message').html(this.options.errorMessage);\n        }\n\n        this._ui.$errorClassHandler.removeAttr('aria-describedby');\n\n        return this._ui.$errorsWrapper.removeClass('filled').attr('aria-hidden', 'true').find('.parsley-custom-error-message').remove();\n      } // Show, hide, update failing constraints messages\n\n\n      for (var i = 0; i < diff.removed.length; i++) {\n        this._removeError(diff.removed[i].assert.name);\n      }\n\n      for (i = 0; i < diff.added.length; i++) {\n        this._addError(diff.added[i].assert.name, {\n          message: diff.added[i].errorMessage,\n          assert: diff.added[i].assert\n        });\n      }\n\n      for (i = 0; i < diff.kept.length; i++) {\n        this._updateError(diff.kept[i].assert.name, {\n          message: diff.kept[i].errorMessage,\n          assert: diff.kept[i].assert\n        });\n      }\n    },\n    _addError: function _addError(name, _ref4) {\n      var message = _ref4.message,\n          assert = _ref4.assert;\n\n      this._insertErrorWrapper();\n\n      this._ui.$errorClassHandler.attr('aria-describedby', this._ui.errorsWrapperId);\n\n      this._ui.$errorsWrapper.addClass('filled').attr('aria-hidden', 'false').append($(this.options.errorTemplate).addClass('parsley-' + name).html(message || this._getErrorMessage(assert)));\n    },\n    _updateError: function _updateError(name, _ref5) {\n      var message = _ref5.message,\n          assert = _ref5.assert;\n\n      this._ui.$errorsWrapper.addClass('filled').find('.parsley-' + name).html(message || this._getErrorMessage(assert));\n    },\n    _removeError: function _removeError(name) {\n      this._ui.$errorClassHandler.removeAttr('aria-describedby');\n\n      this._ui.$errorsWrapper.removeClass('filled').attr('aria-hidden', 'true').find('.parsley-' + name).remove();\n    },\n    _getErrorMessage: function _getErrorMessage(constraint) {\n      var customConstraintErrorMessage = constraint.name + 'Message';\n      if ('undefined' !== typeof this.options[customConstraintErrorMessage]) return window.Parsley.formatMessage(this.options[customConstraintErrorMessage], constraint.requirements);\n      return window.Parsley.getErrorMessage(constraint);\n    },\n    _buildUI: function _buildUI() {\n      // UI could be already built or disabled\n      if (this._ui || false === this.options.uiEnabled) return;\n      var _ui = {}; // Give field its Parsley id in DOM\n\n      this.element.setAttribute(this.options.namespace + 'id', this.__id__);\n      /** Generate important UI elements and store them in this **/\n      // $errorClassHandler is the $element that woul have parsley-error and parsley-success classes\n\n      _ui.$errorClassHandler = this._manageClassHandler(); // $errorsWrapper is a div that would contain the various field errors, it will be appended into $errorsContainer\n\n      _ui.errorsWrapperId = 'parsley-id-' + (this.options.multiple ? 'multiple-' + this.options.multiple : this.__id__);\n      _ui.$errorsWrapper = $(this.options.errorsWrapper).attr('id', _ui.errorsWrapperId); // ValidationResult UI storage to detect what have changed bwt two validations, and update DOM accordingly\n\n      _ui.lastValidationResult = [];\n      _ui.validationInformationVisible = false; // Store it in this for later\n\n      this._ui = _ui;\n    },\n    // Determine which element will have `parsley-error` and `parsley-success` classes\n    _manageClassHandler: function _manageClassHandler() {\n      // Class handled could also be determined by function given in Parsley options\n      if ('string' === typeof this.options.classHandler && $(this.options.classHandler).length) return $(this.options.classHandler); // Class handled could also be determined by function given in Parsley options\n\n      var $handlerFunction = this.options.classHandler; // It might also be the function name of a global function\n\n      if ('string' === typeof this.options.classHandler && 'function' === typeof window[this.options.classHandler]) $handlerFunction = window[this.options.classHandler];\n\n      if ('function' === typeof $handlerFunction) {\n        var $handler = $handlerFunction.call(this, this); // If this function returned a valid existing DOM element, go for it\n\n        if ('undefined' !== typeof $handler && $handler.length) return $handler;\n      } else if ('object' === _typeof($handlerFunction) && $handlerFunction instanceof jQuery && $handlerFunction.length) {\n        return $handlerFunction;\n      } else if ($handlerFunction) {\n        Utils.warn('The class handler `' + $handlerFunction + '` does not exist in DOM nor as a global JS function');\n      }\n\n      return this._inputHolder();\n    },\n    _inputHolder: function _inputHolder() {\n      // if simple element (input, texatrea, select...) it will perfectly host the classes and precede the error container\n      if (!this.options.multiple || this.element.nodeName === 'SELECT') return this.$element; // But if multiple element (radio, checkbox), that would be their parent\n\n      return this.$element.parent();\n    },\n    _insertErrorWrapper: function _insertErrorWrapper() {\n      var $errorsContainer = this.options.errorsContainer; // Nothing to do if already inserted\n\n      if (0 !== this._ui.$errorsWrapper.parent().length) return this._ui.$errorsWrapper.parent();\n\n      if ('string' === typeof $errorsContainer) {\n        if ($($errorsContainer).length) return $($errorsContainer).append(this._ui.$errorsWrapper);else if ('function' === typeof window[$errorsContainer]) $errorsContainer = window[$errorsContainer];else Utils.warn('The errors container `' + $errorsContainer + '` does not exist in DOM nor as a global JS function');\n      }\n\n      if ('function' === typeof $errorsContainer) $errorsContainer = $errorsContainer.call(this, this);\n      if ('object' === _typeof($errorsContainer) && $errorsContainer.length) return $errorsContainer.append(this._ui.$errorsWrapper);\n      return this._inputHolder().after(this._ui.$errorsWrapper);\n    },\n    _actualizeTriggers: function _actualizeTriggers() {\n      var _this2 = this;\n\n      var $toBind = this._findRelated();\n\n      var trigger; // Remove Parsley events already bound on this field\n\n      $toBind.off('.Parsley');\n      if (this._failedOnce) $toBind.on(Utils.namespaceEvents(this.options.triggerAfterFailure, 'Parsley'), function () {\n        _this2._validateIfNeeded();\n      });else if (trigger = Utils.namespaceEvents(this.options.trigger, 'Parsley')) {\n        $toBind.on(trigger, function (event) {\n          _this2._validateIfNeeded(event);\n        });\n      }\n    },\n    _validateIfNeeded: function _validateIfNeeded(event) {\n      var _this3 = this;\n\n      // For keyup, keypress, keydown, input... events that could be a little bit obstrusive\n      // do not validate if val length < min threshold on first validation. Once field have been validated once and info\n      // about success or failure have been displayed, always validate with this trigger to reflect every yalidation change.\n      if (event && /key|input/.test(event.type)) if (!(this._ui && this._ui.validationInformationVisible) && this.getValue().length <= this.options.validationThreshold) return;\n\n      if (this.options.debounce) {\n        window.clearTimeout(this._debounced);\n        this._debounced = window.setTimeout(function () {\n          return _this3.validate();\n        }, this.options.debounce);\n      } else this.validate();\n    },\n    _resetUI: function _resetUI() {\n      // Reset all event listeners\n      this._failedOnce = false;\n\n      this._actualizeTriggers(); // Nothing to do if UI never initialized for this field\n\n\n      if ('undefined' === typeof this._ui) return; // Reset all errors' li\n\n      this._ui.$errorsWrapper.removeClass('filled').children().remove(); // Reset validation class\n\n\n      this._resetClass(); // Reset validation flags and last validation result\n\n\n      this._ui.lastValidationResult = [];\n      this._ui.validationInformationVisible = false;\n    },\n    _destroyUI: function _destroyUI() {\n      this._resetUI();\n\n      if ('undefined' !== typeof this._ui) this._ui.$errorsWrapper.remove();\n      delete this._ui;\n    },\n    _successClass: function _successClass() {\n      this._ui.validationInformationVisible = true;\n\n      this._ui.$errorClassHandler.removeClass(this.options.errorClass).addClass(this.options.successClass);\n    },\n    _errorClass: function _errorClass() {\n      this._ui.validationInformationVisible = true;\n\n      this._ui.$errorClassHandler.removeClass(this.options.successClass).addClass(this.options.errorClass);\n    },\n    _resetClass: function _resetClass() {\n      this._ui.$errorClassHandler.removeClass(this.options.successClass).removeClass(this.options.errorClass);\n    }\n  };\n\n  var Form = function Form(element, domOptions, options) {\n    this.__class__ = 'Form';\n    this.element = element;\n    this.$element = $(element);\n    this.domOptions = domOptions;\n    this.options = options;\n    this.parent = window.Parsley;\n    this.fields = [];\n    this.validationResult = null;\n  };\n\n  var statusMapping = {\n    pending: null,\n    resolved: true,\n    rejected: false\n  };\n  Form.prototype = {\n    onSubmitValidate: function onSubmitValidate(event) {\n      var _this = this;\n\n      // This is a Parsley generated submit event, do not validate, do not prevent, simply exit and keep normal behavior\n      if (true === event.parsley) return; // If we didn't come here through a submit button, use the first one in the form\n\n      var submitSource = this._submitSource || this.$element.find(Utils._SubmitSelector)[0];\n      this._submitSource = null;\n      this.$element.find('.parsley-synthetic-submit-button').prop('disabled', true);\n      if (submitSource && null !== submitSource.getAttribute('formnovalidate')) return;\n      window.Parsley._remoteCache = {};\n      var promise = this.whenValidate({\n        event: event\n      });\n\n      if ('resolved' === promise.state() && false !== this._trigger('submit')) ; else {\n        // Rejected or pending: cancel this submit\n        event.stopImmediatePropagation();\n        event.preventDefault();\n        if ('pending' === promise.state()) promise.done(function () {\n          _this._submit(submitSource);\n        });\n      }\n    },\n    onSubmitButton: function onSubmitButton(event) {\n      this._submitSource = event.currentTarget;\n    },\n    // internal\n    // _submit submits the form, this time without going through the validations.\n    // Care must be taken to \"fake\" the actual submit button being clicked.\n    _submit: function _submit(submitSource) {\n      if (false === this._trigger('submit')) return; // Add submit button's data\n\n      if (submitSource) {\n        var $synthetic = this.$element.find('.parsley-synthetic-submit-button').prop('disabled', false);\n        if (0 === $synthetic.length) $synthetic = $('<input class=\"parsley-synthetic-submit-button\" type=\"hidden\">').appendTo(this.$element);\n        $synthetic.attr({\n          name: submitSource.getAttribute('name'),\n          value: submitSource.getAttribute('value')\n        });\n      }\n\n      this.$element.trigger(_extends($.Event('submit'), {\n        parsley: true\n      }));\n    },\n    // Performs validation on fields while triggering events.\n    // @returns `true` if all validations succeeds, `false`\n    // if a failure is immediately detected, or `null`\n    // if dependant on a promise.\n    // Consider using `whenValidate` instead.\n    validate: function validate(options) {\n      if (arguments.length >= 1 && !$.isPlainObject(options)) {\n        Utils.warnOnce('Calling validate on a parsley form without passing arguments as an object is deprecated.');\n\n        var _arguments = Array.prototype.slice.call(arguments),\n            group = _arguments[0],\n            force = _arguments[1],\n            event = _arguments[2];\n\n        options = {\n          group: group,\n          force: force,\n          event: event\n        };\n      }\n\n      return statusMapping[this.whenValidate(options).state()];\n    },\n    whenValidate: function whenValidate() {\n      var _this2 = this,\n          _Utils$all$done$fail$;\n\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          group = _ref.group,\n          force = _ref.force,\n          event = _ref.event;\n\n      this.submitEvent = event;\n\n      if (event) {\n        this.submitEvent = _extends({}, event, {\n          preventDefault: function preventDefault() {\n            Utils.warnOnce(\"Using `this.submitEvent.preventDefault()` is deprecated; instead, call `this.validationResult = false`\");\n            _this2.validationResult = false;\n          }\n        });\n      }\n\n      this.validationResult = true; // fire validate event to eventually modify things before every validation\n\n      this._trigger('validate'); // Refresh form DOM options and form's fields that could have changed\n\n\n      this._refreshFields();\n\n      var promises = this._withoutReactualizingFormOptions(function () {\n        return $.map(_this2.fields, function (field) {\n          return field.whenValidate({\n            force: force,\n            group: group\n          });\n        });\n      });\n\n      return (_Utils$all$done$fail$ = Utils.all(promises).done(function () {\n        _this2._trigger('success');\n      }).fail(function () {\n        _this2.validationResult = false;\n\n        _this2.focus();\n\n        _this2._trigger('error');\n      }).always(function () {\n        _this2._trigger('validated');\n      })).pipe.apply(_Utils$all$done$fail$, _toConsumableArray(this._pipeAccordingToValidationResult()));\n    },\n    // Iterate over refreshed fields, and stop on first failure.\n    // Returns `true` if all fields are valid, `false` if a failure is detected\n    // or `null` if the result depends on an unresolved promise.\n    // Prefer using `whenValid` instead.\n    isValid: function isValid(options) {\n      if (arguments.length >= 1 && !$.isPlainObject(options)) {\n        Utils.warnOnce('Calling isValid on a parsley form without passing arguments as an object is deprecated.');\n\n        var _arguments2 = Array.prototype.slice.call(arguments),\n            group = _arguments2[0],\n            force = _arguments2[1];\n\n        options = {\n          group: group,\n          force: force\n        };\n      }\n\n      return statusMapping[this.whenValid(options).state()];\n    },\n    // Iterate over refreshed fields and validate them.\n    // Returns a promise.\n    // A validation that immediately fails will interrupt the validations.\n    whenValid: function whenValid() {\n      var _this3 = this;\n\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          group = _ref2.group,\n          force = _ref2.force;\n\n      this._refreshFields();\n\n      var promises = this._withoutReactualizingFormOptions(function () {\n        return $.map(_this3.fields, function (field) {\n          return field.whenValid({\n            group: group,\n            force: force\n          });\n        });\n      });\n\n      return Utils.all(promises);\n    },\n    refresh: function refresh() {\n      this._refreshFields();\n\n      return this;\n    },\n    // Reset UI\n    reset: function reset() {\n      // Form case: emit a reset event for each field\n      for (var i = 0; i < this.fields.length; i++) {\n        this.fields[i].reset();\n      }\n\n      this._trigger('reset');\n    },\n    // Destroy Parsley instance (+ UI)\n    destroy: function destroy() {\n      // Field case: emit destroy event to clean UI and then destroy stored instance\n      this._destroyUI(); // Form case: destroy all its fields and then destroy stored instance\n\n\n      for (var i = 0; i < this.fields.length; i++) {\n        this.fields[i].destroy();\n      }\n\n      this.$element.removeData('Parsley');\n\n      this._trigger('destroy');\n    },\n    _refreshFields: function _refreshFields() {\n      return this.actualizeOptions()._bindFields();\n    },\n    _bindFields: function _bindFields() {\n      var _this4 = this;\n\n      var oldFields = this.fields;\n      this.fields = [];\n      this.fieldsMappedById = {};\n\n      this._withoutReactualizingFormOptions(function () {\n        _this4.$element.find(_this4.options.inputs).not(_this4.options.excluded).not(\"[\".concat(_this4.options.namespace, \"excluded=true]\")).each(function (_, element) {\n          var fieldInstance = new window.Parsley.Factory(element, {}, _this4); // Only add valid and not excluded `Field` and `FieldMultiple` children\n\n          if ('Field' === fieldInstance.__class__ || 'FieldMultiple' === fieldInstance.__class__) {\n            var uniqueId = fieldInstance.__class__ + '-' + fieldInstance.__id__;\n\n            if ('undefined' === typeof _this4.fieldsMappedById[uniqueId]) {\n              _this4.fieldsMappedById[uniqueId] = fieldInstance;\n\n              _this4.fields.push(fieldInstance);\n            }\n          }\n        });\n\n        $.each(Utils.difference(oldFields, _this4.fields), function (_, field) {\n          field.reset();\n        });\n      });\n\n      return this;\n    },\n    // Internal only.\n    // Looping on a form's fields to do validation or similar\n    // will trigger reactualizing options on all of them, which\n    // in turn will reactualize the form's options.\n    // To avoid calling actualizeOptions so many times on the form\n    // for nothing, _withoutReactualizingFormOptions temporarily disables\n    // the method actualizeOptions on this form while `fn` is called.\n    _withoutReactualizingFormOptions: function _withoutReactualizingFormOptions(fn) {\n      var oldActualizeOptions = this.actualizeOptions;\n\n      this.actualizeOptions = function () {\n        return this;\n      };\n\n      var result = fn();\n      this.actualizeOptions = oldActualizeOptions;\n      return result;\n    },\n    // Internal only.\n    // Shortcut to trigger an event\n    // Returns true iff event is not interrupted and default not prevented.\n    _trigger: function _trigger(eventName) {\n      return this.trigger('form:' + eventName);\n    }\n  };\n\n  var Constraint = function Constraint(parsleyField, name, requirements, priority, isDomConstraint) {\n    var validatorSpec = window.Parsley._validatorRegistry.validators[name];\n    var validator = new Validator(validatorSpec);\n    priority = priority || parsleyField.options[name + 'Priority'] || validator.priority;\n    isDomConstraint = true === isDomConstraint;\n\n    _extends(this, {\n      validator: validator,\n      name: name,\n      requirements: requirements,\n      priority: priority,\n      isDomConstraint: isDomConstraint\n    });\n\n    this._parseRequirements(parsleyField.options);\n  };\n\n  var capitalize = function capitalize(str) {\n    var cap = str[0].toUpperCase();\n    return cap + str.slice(1);\n  };\n\n  Constraint.prototype = {\n    validate: function validate(value, instance) {\n      var _this$validator;\n\n      return (_this$validator = this.validator).validate.apply(_this$validator, [value].concat(_toConsumableArray(this.requirementList), [instance]));\n    },\n    _parseRequirements: function _parseRequirements(options) {\n      var _this = this;\n\n      this.requirementList = this.validator.parseRequirements(this.requirements, function (key) {\n        return options[_this.name + capitalize(key)];\n      });\n    }\n  };\n\n  var Field = function Field(field, domOptions, options, parsleyFormInstance) {\n    this.__class__ = 'Field';\n    this.element = field;\n    this.$element = $(field); // Set parent if we have one\n\n    if ('undefined' !== typeof parsleyFormInstance) {\n      this.parent = parsleyFormInstance;\n    }\n\n    this.options = options;\n    this.domOptions = domOptions; // Initialize some properties\n\n    this.constraints = [];\n    this.constraintsByName = {};\n    this.validationResult = true; // Bind constraints\n\n    this._bindConstraints();\n  };\n\n  var statusMapping$1 = {\n    pending: null,\n    resolved: true,\n    rejected: false\n  };\n  Field.prototype = {\n    // # Public API\n    // Validate field and trigger some events for mainly `UI`\n    // @returns `true`, an array of the validators that failed, or\n    // `null` if validation is not finished. Prefer using whenValidate\n    validate: function validate(options) {\n      if (arguments.length >= 1 && !$.isPlainObject(options)) {\n        Utils.warnOnce('Calling validate on a parsley field without passing arguments as an object is deprecated.');\n        options = {\n          options: options\n        };\n      }\n\n      var promise = this.whenValidate(options);\n      if (!promise) // If excluded with `group` option\n        return true;\n\n      switch (promise.state()) {\n        case 'pending':\n          return null;\n\n        case 'resolved':\n          return true;\n\n        case 'rejected':\n          return this.validationResult;\n      }\n    },\n    // Validate field and trigger some events for mainly `UI`\n    // @returns a promise that succeeds only when all validations do\n    // or `undefined` if field is not in the given `group`.\n    whenValidate: function whenValidate() {\n      var _this$whenValid$alway,\n          _this = this;\n\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          force = _ref.force,\n          group = _ref.group;\n\n      // do not validate a field if not the same as given validation group\n      this.refresh();\n      if (group && !this._isInGroup(group)) return;\n      this.value = this.getValue(); // Field Validate event. `this.value` could be altered for custom needs\n\n      this._trigger('validate');\n\n      return (_this$whenValid$alway = this.whenValid({\n        force: force,\n        value: this.value,\n        _refreshed: true\n      }).always(function () {\n        _this._reflowUI();\n      }).done(function () {\n        _this._trigger('success');\n      }).fail(function () {\n        _this._trigger('error');\n      }).always(function () {\n        _this._trigger('validated');\n      })).pipe.apply(_this$whenValid$alway, _toConsumableArray(this._pipeAccordingToValidationResult()));\n    },\n    hasConstraints: function hasConstraints() {\n      return 0 !== this.constraints.length;\n    },\n    // An empty optional field does not need validation\n    needsValidation: function needsValidation(value) {\n      if ('undefined' === typeof value) value = this.getValue(); // If a field is empty and not required, it is valid\n      // Except if `data-parsley-validate-if-empty` explicitely added, useful for some custom validators\n\n      if (!value.length && !this._isRequired() && 'undefined' === typeof this.options.validateIfEmpty) return false;\n      return true;\n    },\n    _isInGroup: function _isInGroup(group) {\n      if (Array.isArray(this.options.group)) return -1 !== $.inArray(group, this.options.group);\n      return this.options.group === group;\n    },\n    // Just validate field. Do not trigger any event.\n    // Returns `true` iff all constraints pass, `false` if there are failures,\n    // or `null` if the result can not be determined yet (depends on a promise)\n    // See also `whenValid`.\n    isValid: function isValid(options) {\n      if (arguments.length >= 1 && !$.isPlainObject(options)) {\n        Utils.warnOnce('Calling isValid on a parsley field without passing arguments as an object is deprecated.');\n\n        var _arguments = Array.prototype.slice.call(arguments),\n            force = _arguments[0],\n            value = _arguments[1];\n\n        options = {\n          force: force,\n          value: value\n        };\n      }\n\n      var promise = this.whenValid(options);\n      if (!promise) // Excluded via `group`\n        return true;\n      return statusMapping$1[promise.state()];\n    },\n    // Just validate field. Do not trigger any event.\n    // @returns a promise that succeeds only when all validations do\n    // or `undefined` if the field is not in the given `group`.\n    // The argument `force` will force validation of empty fields.\n    // If a `value` is given, it will be validated instead of the value of the input.\n    whenValid: function whenValid() {\n      var _this2 = this;\n\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref2$force = _ref2.force,\n          force = _ref2$force === void 0 ? false : _ref2$force,\n          value = _ref2.value,\n          group = _ref2.group,\n          _refreshed = _ref2._refreshed;\n\n      // Recompute options and rebind constraints to have latest changes\n      if (!_refreshed) this.refresh(); // do not validate a field if not the same as given validation group\n\n      if (group && !this._isInGroup(group)) return;\n      this.validationResult = true; // A field without constraint is valid\n\n      if (!this.hasConstraints()) return $.when(); // Value could be passed as argument, needed to add more power to 'field:validate'\n\n      if ('undefined' === typeof value || null === value) value = this.getValue();\n      if (!this.needsValidation(value) && true !== force) return $.when();\n\n      var groupedConstraints = this._getGroupedConstraints();\n\n      var promises = [];\n      $.each(groupedConstraints, function (_, constraints) {\n        // Process one group of constraints at a time, we validate the constraints\n        // and combine the promises together.\n        var promise = Utils.all($.map(constraints, function (constraint) {\n          return _this2._validateConstraint(value, constraint);\n        }));\n        promises.push(promise);\n        if (promise.state() === 'rejected') return false; // Interrupt processing if a group has already failed\n      });\n      return Utils.all(promises);\n    },\n    // @returns a promise\n    _validateConstraint: function _validateConstraint(value, constraint) {\n      var _this3 = this;\n\n      var result = constraint.validate(value, this); // Map false to a failed promise\n\n      if (false === result) result = $.Deferred().reject(); // Make sure we return a promise and that we record failures\n\n      return Utils.all([result]).fail(function (errorMessage) {\n        if (!(_this3.validationResult instanceof Array)) _this3.validationResult = [];\n\n        _this3.validationResult.push({\n          assert: constraint,\n          errorMessage: 'string' === typeof errorMessage && errorMessage\n        });\n      });\n    },\n    // @returns Parsley field computed value that could be overrided or configured in DOM\n    getValue: function getValue() {\n      var value; // Value could be overriden in DOM or with explicit options\n\n      if ('function' === typeof this.options.value) value = this.options.value(this);else if ('undefined' !== typeof this.options.value) value = this.options.value;else value = this.$element.val(); // Handle wrong DOM or configurations\n\n      if ('undefined' === typeof value || null === value) return '';\n      return this._handleWhitespace(value);\n    },\n    // Reset UI\n    reset: function reset() {\n      this._resetUI();\n\n      return this._trigger('reset');\n    },\n    // Destroy Parsley instance (+ UI)\n    destroy: function destroy() {\n      // Field case: emit destroy event to clean UI and then destroy stored instance\n      this._destroyUI();\n\n      this.$element.removeData('Parsley');\n      this.$element.removeData('FieldMultiple');\n\n      this._trigger('destroy');\n    },\n    // Actualize options and rebind constraints\n    refresh: function refresh() {\n      this._refreshConstraints();\n\n      return this;\n    },\n    _refreshConstraints: function _refreshConstraints() {\n      return this.actualizeOptions()._bindConstraints();\n    },\n    refreshConstraints: function refreshConstraints() {\n      Utils.warnOnce(\"Parsley's refreshConstraints is deprecated. Please use refresh\");\n      return this.refresh();\n    },\n\n    /**\n    * Add a new constraint to a field\n    *\n    * @param {String}   name\n    * @param {Mixed}    requirements      optional\n    * @param {Number}   priority          optional\n    * @param {Boolean}  isDomConstraint   optional\n    */\n    addConstraint: function addConstraint(name, requirements, priority, isDomConstraint) {\n      if (window.Parsley._validatorRegistry.validators[name]) {\n        var constraint = new Constraint(this, name, requirements, priority, isDomConstraint); // if constraint already exist, delete it and push new version\n\n        if ('undefined' !== this.constraintsByName[constraint.name]) this.removeConstraint(constraint.name);\n        this.constraints.push(constraint);\n        this.constraintsByName[constraint.name] = constraint;\n      }\n\n      return this;\n    },\n    // Remove a constraint\n    removeConstraint: function removeConstraint(name) {\n      for (var i = 0; i < this.constraints.length; i++) {\n        if (name === this.constraints[i].name) {\n          this.constraints.splice(i, 1);\n          break;\n        }\n      }\n\n      delete this.constraintsByName[name];\n      return this;\n    },\n    // Update a constraint (Remove + re-add)\n    updateConstraint: function updateConstraint(name, parameters, priority) {\n      return this.removeConstraint(name).addConstraint(name, parameters, priority);\n    },\n    // # Internals\n    // Internal only.\n    // Bind constraints from config + options + DOM\n    _bindConstraints: function _bindConstraints() {\n      var constraints = [];\n      var constraintsByName = {}; // clean all existing DOM constraints to only keep javascript user constraints\n\n      for (var i = 0; i < this.constraints.length; i++) {\n        if (false === this.constraints[i].isDomConstraint) {\n          constraints.push(this.constraints[i]);\n          constraintsByName[this.constraints[i].name] = this.constraints[i];\n        }\n      }\n\n      this.constraints = constraints;\n      this.constraintsByName = constraintsByName; // then re-add Parsley DOM-API constraints\n\n      for (var name in this.options) {\n        this.addConstraint(name, this.options[name], undefined, true);\n      } // finally, bind special HTML5 constraints\n\n\n      return this._bindHtml5Constraints();\n    },\n    // Internal only.\n    // Bind specific HTML5 constraints to be HTML5 compliant\n    _bindHtml5Constraints: function _bindHtml5Constraints() {\n      // html5 required\n      if (null !== this.element.getAttribute('required')) this.addConstraint('required', true, undefined, true); // html5 pattern\n\n      if (null !== this.element.getAttribute('pattern')) this.addConstraint('pattern', this.element.getAttribute('pattern'), undefined, true); // range\n\n      var min = this.element.getAttribute('min');\n      var max = this.element.getAttribute('max');\n      if (null !== min && null !== max) this.addConstraint('range', [min, max], undefined, true); // HTML5 min\n      else if (null !== min) this.addConstraint('min', min, undefined, true); // HTML5 max\n        else if (null !== max) this.addConstraint('max', max, undefined, true); // length\n\n      if (null !== this.element.getAttribute('minlength') && null !== this.element.getAttribute('maxlength')) this.addConstraint('length', [this.element.getAttribute('minlength'), this.element.getAttribute('maxlength')], undefined, true); // HTML5 minlength\n      else if (null !== this.element.getAttribute('minlength')) this.addConstraint('minlength', this.element.getAttribute('minlength'), undefined, true); // HTML5 maxlength\n        else if (null !== this.element.getAttribute('maxlength')) this.addConstraint('maxlength', this.element.getAttribute('maxlength'), undefined, true); // html5 types\n\n      var type = Utils.getType(this.element); // Small special case here for HTML5 number: integer validator if step attribute is undefined or an integer value, number otherwise\n\n      if ('number' === type) {\n        return this.addConstraint('type', ['number', {\n          step: this.element.getAttribute('step') || '1',\n          base: min || this.element.getAttribute('value')\n        }], undefined, true); // Regular other HTML5 supported types\n      } else if (/^(email|url|range|date)$/i.test(type)) {\n        return this.addConstraint('type', type, undefined, true);\n      }\n\n      return this;\n    },\n    // Internal only.\n    // Field is required if have required constraint without `false` value\n    _isRequired: function _isRequired() {\n      if ('undefined' === typeof this.constraintsByName.required) return false;\n      return false !== this.constraintsByName.required.requirements;\n    },\n    // Internal only.\n    // Shortcut to trigger an event\n    _trigger: function _trigger(eventName) {\n      return this.trigger('field:' + eventName);\n    },\n    // Internal only\n    // Handles whitespace in a value\n    // Use `data-parsley-whitespace=\"squish\"` to auto squish input value\n    // Use `data-parsley-whitespace=\"trim\"` to auto trim input value\n    _handleWhitespace: function _handleWhitespace(value) {\n      if (true === this.options.trimValue) Utils.warnOnce('data-parsley-trim-value=\"true\" is deprecated, please use data-parsley-whitespace=\"trim\"');\n      if ('squish' === this.options.whitespace) value = value.replace(/\\s{2,}/g, ' ');\n      if ('trim' === this.options.whitespace || 'squish' === this.options.whitespace || true === this.options.trimValue) value = Utils.trimString(value);\n      return value;\n    },\n    _isDateInput: function _isDateInput() {\n      var c = this.constraintsByName.type;\n      return c && c.requirements === 'date';\n    },\n    // Internal only.\n    // Returns the constraints, grouped by descending priority.\n    // The result is thus an array of arrays of constraints.\n    _getGroupedConstraints: function _getGroupedConstraints() {\n      if (false === this.options.priorityEnabled) return [this.constraints];\n      var groupedConstraints = [];\n      var index = {}; // Create array unique of priorities\n\n      for (var i = 0; i < this.constraints.length; i++) {\n        var p = this.constraints[i].priority;\n        if (!index[p]) groupedConstraints.push(index[p] = []);\n        index[p].push(this.constraints[i]);\n      } // Sort them by priority DESC\n\n\n      groupedConstraints.sort(function (a, b) {\n        return b[0].priority - a[0].priority;\n      });\n      return groupedConstraints;\n    }\n  };\n\n  var Multiple = function Multiple() {\n    this.__class__ = 'FieldMultiple';\n  };\n\n  Multiple.prototype = {\n    // Add new `$element` sibling for multiple field\n    addElement: function addElement($element) {\n      this.$elements.push($element);\n      return this;\n    },\n    // See `Field._refreshConstraints()`\n    _refreshConstraints: function _refreshConstraints() {\n      var fieldConstraints;\n      this.constraints = []; // Select multiple special treatment\n\n      if (this.element.nodeName === 'SELECT') {\n        this.actualizeOptions()._bindConstraints();\n\n        return this;\n      } // Gather all constraints for each input in the multiple group\n\n\n      for (var i = 0; i < this.$elements.length; i++) {\n        // Check if element have not been dynamically removed since last binding\n        if (!$('html').has(this.$elements[i]).length) {\n          this.$elements.splice(i, 1);\n          continue;\n        }\n\n        fieldConstraints = this.$elements[i].data('FieldMultiple')._refreshConstraints().constraints;\n\n        for (var j = 0; j < fieldConstraints.length; j++) {\n          this.addConstraint(fieldConstraints[j].name, fieldConstraints[j].requirements, fieldConstraints[j].priority, fieldConstraints[j].isDomConstraint);\n        }\n      }\n\n      return this;\n    },\n    // See `Field.getValue()`\n    getValue: function getValue() {\n      // Value could be overriden in DOM\n      if ('function' === typeof this.options.value) return this.options.value(this);else if ('undefined' !== typeof this.options.value) return this.options.value; // Radio input case\n\n      if (this.element.nodeName === 'INPUT') {\n        var type = Utils.getType(this.element);\n        if (type === 'radio') return this._findRelated().filter(':checked').val() || ''; // checkbox input case\n\n        if (type === 'checkbox') {\n          var values = [];\n\n          this._findRelated().filter(':checked').each(function () {\n            values.push($(this).val());\n          });\n\n          return values;\n        }\n      } // Select multiple case\n\n\n      if (this.element.nodeName === 'SELECT' && null === this.$element.val()) return []; // Default case that should never happen\n\n      return this.$element.val();\n    },\n    _init: function _init() {\n      this.$elements = [this.$element];\n      return this;\n    }\n  };\n\n  var Factory = function Factory(element, options, parsleyFormInstance) {\n    this.element = element;\n    this.$element = $(element); // If the element has already been bound, returns its saved Parsley instance\n\n    var savedparsleyFormInstance = this.$element.data('Parsley');\n\n    if (savedparsleyFormInstance) {\n      // If the saved instance has been bound without a Form parent and there is one given in this call, add it\n      if ('undefined' !== typeof parsleyFormInstance && savedparsleyFormInstance.parent === window.Parsley) {\n        savedparsleyFormInstance.parent = parsleyFormInstance;\n\n        savedparsleyFormInstance._resetOptions(savedparsleyFormInstance.options);\n      }\n\n      if ('object' === _typeof(options)) {\n        _extends(savedparsleyFormInstance.options, options);\n      }\n\n      return savedparsleyFormInstance;\n    } // Parsley must be instantiated with a DOM element or jQuery $element\n\n\n    if (!this.$element.length) throw new Error('You must bind Parsley on an existing element.');\n    if ('undefined' !== typeof parsleyFormInstance && 'Form' !== parsleyFormInstance.__class__) throw new Error('Parent instance must be a Form instance');\n    this.parent = parsleyFormInstance || window.Parsley;\n    return this.init(options);\n  };\n\n  Factory.prototype = {\n    init: function init(options) {\n      this.__class__ = 'Parsley';\n      this.__version__ = '2.9.2';\n      this.__id__ = Utils.generateID(); // Pre-compute options\n\n      this._resetOptions(options); // A Form instance is obviously a `<form>` element but also every node that is not an input and has the `data-parsley-validate` attribute\n\n\n      if (this.element.nodeName === 'FORM' || Utils.checkAttr(this.element, this.options.namespace, 'validate') && !this.$element.is(this.options.inputs)) return this.bind('parsleyForm'); // Every other element is bound as a `Field` or `FieldMultiple`\n\n      return this.isMultiple() ? this.handleMultiple() : this.bind('parsleyField');\n    },\n    isMultiple: function isMultiple() {\n      var type = Utils.getType(this.element);\n      return type === 'radio' || type === 'checkbox' || this.element.nodeName === 'SELECT' && null !== this.element.getAttribute('multiple');\n    },\n    // Multiples fields are a real nightmare :(\n    // Maybe some refactoring would be appreciated here...\n    handleMultiple: function handleMultiple() {\n      var _this = this;\n\n      var name;\n      var parsleyMultipleInstance; // Handle multiple name\n\n      this.options.multiple = this.options.multiple || (name = this.element.getAttribute('name')) || this.element.getAttribute('id'); // Special select multiple input\n\n      if (this.element.nodeName === 'SELECT' && null !== this.element.getAttribute('multiple')) {\n        this.options.multiple = this.options.multiple || this.__id__;\n        return this.bind('parsleyFieldMultiple'); // Else for radio / checkboxes, we need a `name` or `data-parsley-multiple` to properly bind it\n      } else if (!this.options.multiple) {\n        Utils.warn('To be bound by Parsley, a radio, a checkbox and a multiple select input must have either a name or a multiple option.', this.$element);\n        return this;\n      } // Remove special chars\n\n\n      this.options.multiple = this.options.multiple.replace(/(:|\\.|\\[|\\]|\\{|\\}|\\$)/g, ''); // Add proper `data-parsley-multiple` to siblings if we have a valid multiple name\n\n      if (name) {\n        $('input[name=\"' + name + '\"]').each(function (i, input) {\n          var type = Utils.getType(input);\n          if (type === 'radio' || type === 'checkbox') input.setAttribute(_this.options.namespace + 'multiple', _this.options.multiple);\n        });\n      } // Check here if we don't already have a related multiple instance saved\n\n\n      var $previouslyRelated = this._findRelated();\n\n      for (var i = 0; i < $previouslyRelated.length; i++) {\n        parsleyMultipleInstance = $($previouslyRelated.get(i)).data('Parsley');\n\n        if ('undefined' !== typeof parsleyMultipleInstance) {\n          if (!this.$element.data('FieldMultiple')) {\n            parsleyMultipleInstance.addElement(this.$element);\n          }\n\n          break;\n        }\n      } // Create a secret Field instance for every multiple field. It will be stored in `data('FieldMultiple')`\n      // And will be useful later to access classic `Field` stuff while being in a `FieldMultiple` instance\n\n\n      this.bind('parsleyField', true);\n      return parsleyMultipleInstance || this.bind('parsleyFieldMultiple');\n    },\n    // Return proper `Form`, `Field` or `FieldMultiple`\n    bind: function bind(type, doNotStore) {\n      var parsleyInstance;\n\n      switch (type) {\n        case 'parsleyForm':\n          parsleyInstance = $.extend(new Form(this.element, this.domOptions, this.options), new Base(), window.ParsleyExtend)._bindFields();\n          break;\n\n        case 'parsleyField':\n          parsleyInstance = $.extend(new Field(this.element, this.domOptions, this.options, this.parent), new Base(), window.ParsleyExtend);\n          break;\n\n        case 'parsleyFieldMultiple':\n          parsleyInstance = $.extend(new Field(this.element, this.domOptions, this.options, this.parent), new Multiple(), new Base(), window.ParsleyExtend)._init();\n          break;\n\n        default:\n          throw new Error(type + 'is not a supported Parsley type');\n      }\n\n      if (this.options.multiple) Utils.setAttr(this.element, this.options.namespace, 'multiple', this.options.multiple);\n\n      if ('undefined' !== typeof doNotStore) {\n        this.$element.data('FieldMultiple', parsleyInstance);\n        return parsleyInstance;\n      } // Store the freshly bound instance in a DOM element for later access using jQuery `data()`\n\n\n      this.$element.data('Parsley', parsleyInstance); // Tell the world we have a new Form or Field instance!\n\n      parsleyInstance._actualizeTriggers();\n\n      parsleyInstance._trigger('init');\n\n      return parsleyInstance;\n    }\n  };\n\n  var vernums = $.fn.jquery.split('.');\n\n  if (parseInt(vernums[0]) <= 1 && parseInt(vernums[1]) < 8) {\n    throw \"The loaded version of jQuery is too old. Please upgrade to 1.8.x or better.\";\n  }\n\n  if (!vernums.forEach) {\n    Utils.warn('Parsley requires ES5 to run properly. Please include https://github.com/es-shims/es5-shim');\n  } // Inherit `on`, `off` & `trigger` to Parsley:\n\n\n  var Parsley = _extends(new Base(), {\n    element: document,\n    $element: $(document),\n    actualizeOptions: null,\n    _resetOptions: null,\n    Factory: Factory,\n    version: '2.9.2'\n  }); // Supplement Field and Form with Base\n  // This way, the constructors will have access to those methods\n\n\n  _extends(Field.prototype, UI.Field, Base.prototype);\n\n  _extends(Form.prototype, UI.Form, Base.prototype); // Inherit actualizeOptions and _resetOptions:\n\n\n  _extends(Factory.prototype, Base.prototype); // ### jQuery API\n  // `$('.elem').parsley(options)` or `$('.elem').psly(options)`\n\n\n  $.fn.parsley = $.fn.psly = function (options) {\n    if (this.length > 1) {\n      var instances = [];\n      this.each(function () {\n        instances.push($(this).parsley(options));\n      });\n      return instances;\n    } // Return undefined if applied to non existing DOM element\n\n\n    if (this.length == 0) {\n      return;\n    }\n\n    return new Factory(this[0], options);\n  }; // ### Field and Form extension\n  // Ensure the extension is now defined if it wasn't previously\n\n\n  if ('undefined' === typeof window.ParsleyExtend) window.ParsleyExtend = {}; // ### Parsley config\n  // Inherit from ParsleyDefault, and copy over any existing values\n\n  Parsley.options = _extends(Utils.objectCreate(Defaults), window.ParsleyConfig);\n  window.ParsleyConfig = Parsley.options; // Old way of accessing global options\n  // ### Globals\n\n  window.Parsley = window.psly = Parsley;\n  Parsley.Utils = Utils;\n  window.ParsleyUtils = {};\n  $.each(Utils, function (key, value) {\n    if ('function' === typeof value) {\n      window.ParsleyUtils[key] = function () {\n        Utils.warnOnce('Accessing `window.ParsleyUtils` is deprecated. Use `window.Parsley.Utils` instead.');\n        return Utils[key].apply(Utils, arguments);\n      };\n    }\n  }); // ### Define methods that forward to the registry, and deprecate all access except through window.Parsley\n\n  var registry = window.Parsley._validatorRegistry = new ValidatorRegistry(window.ParsleyConfig.validators, window.ParsleyConfig.i18n);\n  window.ParsleyValidator = {};\n  $.each('setLocale addCatalog addMessage addMessages getErrorMessage formatMessage addValidator updateValidator removeValidator hasValidator'.split(' '), function (i, method) {\n    window.Parsley[method] = function () {\n      return registry[method].apply(registry, arguments);\n    };\n\n    window.ParsleyValidator[method] = function () {\n      var _window$Parsley;\n\n      Utils.warnOnce(\"Accessing the method '\".concat(method, \"' through Validator is deprecated. Simply call 'window.Parsley.\").concat(method, \"(...)'\"));\n      return (_window$Parsley = window.Parsley)[method].apply(_window$Parsley, arguments);\n    };\n  }); // ### UI\n  // Deprecated global object\n\n  window.Parsley.UI = UI;\n  window.ParsleyUI = {\n    removeError: function removeError(instance, name, doNotUpdateClass) {\n      var updateClass = true !== doNotUpdateClass;\n      Utils.warnOnce(\"Accessing UI is deprecated. Call 'removeError' on the instance directly. Please comment in issue 1073 as to your need to call this method.\");\n      return instance.removeError(name, {\n        updateClass: updateClass\n      });\n    },\n    getErrorsMessages: function getErrorsMessages(instance) {\n      Utils.warnOnce(\"Accessing UI is deprecated. Call 'getErrorsMessages' on the instance directly.\");\n      return instance.getErrorsMessages();\n    }\n  };\n  $.each('addError updateError'.split(' '), function (i, method) {\n    window.ParsleyUI[method] = function (instance, name, message, assert, doNotUpdateClass) {\n      var updateClass = true !== doNotUpdateClass;\n      Utils.warnOnce(\"Accessing UI is deprecated. Call '\".concat(method, \"' on the instance directly. Please comment in issue 1073 as to your need to call this method.\"));\n      return instance[method](name, {\n        message: message,\n        assert: assert,\n        updateClass: updateClass\n      });\n    };\n  }); // ### PARSLEY auto-binding\n  // Prevent it by setting `ParsleyConfig.autoBind` to `false`\n\n  if (false !== window.ParsleyConfig.autoBind) {\n    $(function () {\n      // Works only on `data-parsley-validate`.\n      if ($('[data-parsley-validate]').length) $('[data-parsley-validate]').parsley();\n    });\n  }\n\n  var o = $({});\n\n  var deprecated = function deprecated() {\n    Utils.warnOnce(\"Parsley's pubsub module is deprecated; use the 'on' and 'off' methods on parsley instances or window.Parsley\");\n  }; // Returns an event handler that calls `fn` with the arguments it expects\n\n\n  function adapt(fn, context) {\n    // Store to allow unbinding\n    if (!fn.parsleyAdaptedCallback) {\n      fn.parsleyAdaptedCallback = function () {\n        var args = Array.prototype.slice.call(arguments, 0);\n        args.unshift(this);\n        fn.apply(context || o, args);\n      };\n    }\n\n    return fn.parsleyAdaptedCallback;\n  }\n\n  var eventPrefix = 'parsley:'; // Converts 'parsley:form:validate' into 'form:validate'\n\n  function eventName(name) {\n    if (name.lastIndexOf(eventPrefix, 0) === 0) return name.substr(eventPrefix.length);\n    return name;\n  } // $.listen is deprecated. Use Parsley.on instead.\n\n\n  $.listen = function (name, callback) {\n    var context;\n    deprecated();\n\n    if ('object' === _typeof(arguments[1]) && 'function' === typeof arguments[2]) {\n      context = arguments[1];\n      callback = arguments[2];\n    }\n\n    if ('function' !== typeof callback) throw new Error('Wrong parameters');\n    window.Parsley.on(eventName(name), adapt(callback, context));\n  };\n\n  $.listenTo = function (instance, name, fn) {\n    deprecated();\n    if (!(instance instanceof Field) && !(instance instanceof Form)) throw new Error('Must give Parsley instance');\n    if ('string' !== typeof name || 'function' !== typeof fn) throw new Error('Wrong parameters');\n    instance.on(eventName(name), adapt(fn));\n  };\n\n  $.unsubscribe = function (name, fn) {\n    deprecated();\n    if ('string' !== typeof name || 'function' !== typeof fn) throw new Error('Wrong arguments');\n    window.Parsley.off(eventName(name), fn.parsleyAdaptedCallback);\n  };\n\n  $.unsubscribeTo = function (instance, name) {\n    deprecated();\n    if (!(instance instanceof Field) && !(instance instanceof Form)) throw new Error('Must give Parsley instance');\n    instance.off(eventName(name));\n  };\n\n  $.unsubscribeAll = function (name) {\n    deprecated();\n    window.Parsley.off(eventName(name));\n    $('form,input,textarea,select').each(function () {\n      var instance = $(this).data('Parsley');\n\n      if (instance) {\n        instance.off(eventName(name));\n      }\n    });\n  }; // $.emit is deprecated. Use jQuery events instead.\n\n\n  $.emit = function (name, instance) {\n    var _instance;\n\n    deprecated();\n    var instanceGiven = instance instanceof Field || instance instanceof Form;\n    var args = Array.prototype.slice.call(arguments, instanceGiven ? 2 : 1);\n    args.unshift(eventName(name));\n\n    if (!instanceGiven) {\n      instance = window.Parsley;\n    }\n\n    (_instance = instance).trigger.apply(_instance, _toConsumableArray(args));\n  };\n\n  $.extend(true, Parsley, {\n    asyncValidators: {\n      'default': {\n        fn: function fn(xhr) {\n          // By default, only status 2xx are deemed successful.\n          // Note: we use status instead of state() because responses with status 200\n          // but invalid messages (e.g. an empty body for content type set to JSON) will\n          // result in state() === 'rejected'.\n          return xhr.status >= 200 && xhr.status < 300;\n        },\n        url: false\n      },\n      reverse: {\n        fn: function fn(xhr) {\n          // If reverse option is set, a failing ajax request is considered successful\n          return xhr.status < 200 || xhr.status >= 300;\n        },\n        url: false\n      }\n    },\n    addAsyncValidator: function addAsyncValidator(name, fn, url, options) {\n      Parsley.asyncValidators[name] = {\n        fn: fn,\n        url: url || false,\n        options: options || {}\n      };\n      return this;\n    }\n  });\n  Parsley.addValidator('remote', {\n    requirementType: {\n      '': 'string',\n      'validator': 'string',\n      'reverse': 'boolean',\n      'options': 'object'\n    },\n    validateString: function validateString(value, url, options, instance) {\n      var data = {};\n      var ajaxOptions;\n      var csr;\n      var validator = options.validator || (true === options.reverse ? 'reverse' : 'default');\n      if ('undefined' === typeof Parsley.asyncValidators[validator]) throw new Error('Calling an undefined async validator: `' + validator + '`');\n      url = Parsley.asyncValidators[validator].url || url; // Fill current value\n\n      if (url.indexOf('{value}') > -1) {\n        url = url.replace('{value}', encodeURIComponent(value));\n      } else {\n        data[instance.element.getAttribute('name') || instance.element.getAttribute('id')] = value;\n      } // Merge options passed in from the function with the ones in the attribute\n\n\n      var remoteOptions = $.extend(true, options.options || {}, Parsley.asyncValidators[validator].options); // All `$.ajax(options)` could be overridden or extended directly from DOM in `data-parsley-remote-options`\n\n      ajaxOptions = $.extend(true, {}, {\n        url: url,\n        data: data,\n        type: 'GET'\n      }, remoteOptions); // Generate store key based on ajax options\n\n      instance.trigger('field:ajaxoptions', instance, ajaxOptions);\n      csr = $.param(ajaxOptions); // Initialise querry cache\n\n      if ('undefined' === typeof Parsley._remoteCache) Parsley._remoteCache = {}; // Try to retrieve stored xhr\n\n      var xhr = Parsley._remoteCache[csr] = Parsley._remoteCache[csr] || $.ajax(ajaxOptions);\n\n      var handleXhr = function handleXhr() {\n        var result = Parsley.asyncValidators[validator].fn.call(instance, xhr, url, options);\n        if (!result) // Map falsy results to rejected promise\n          result = $.Deferred().reject();\n        return $.when(result);\n      };\n\n      return xhr.then(handleXhr, handleXhr);\n    },\n    priority: -1\n  });\n  Parsley.on('form:submit', function () {\n    Parsley._remoteCache = {};\n  });\n\n  Base.prototype.addAsyncValidator = function () {\n    Utils.warnOnce('Accessing the method `addAsyncValidator` through an instance is deprecated. Simply call `Parsley.addAsyncValidator(...)`');\n    return Parsley.addAsyncValidator.apply(Parsley, arguments);\n  };\n\n  // This is included with the Parsley library itself,\n  Parsley.addMessages('en', {\n    defaultMessage: \"This value seems to be invalid.\",\n    type: {\n      email: \"This value should be a valid email.\",\n      url: \"This value should be a valid url.\",\n      number: \"This value should be a valid number.\",\n      integer: \"This value should be a valid integer.\",\n      digits: \"This value should be digits.\",\n      alphanum: \"This value should be alphanumeric.\"\n    },\n    notblank: \"This value should not be blank.\",\n    required: \"This value is required.\",\n    pattern: \"This value seems to be invalid.\",\n    min: \"This value should be greater than or equal to %s.\",\n    max: \"This value should be lower than or equal to %s.\",\n    range: \"This value should be between %s and %s.\",\n    minlength: \"This value is too short. It should have %s characters or more.\",\n    maxlength: \"This value is too long. It should have %s characters or fewer.\",\n    length: \"This value length is invalid. It should be between %s and %s characters long.\",\n    mincheck: \"You must select at least %s choices.\",\n    maxcheck: \"You must select %s choices or fewer.\",\n    check: \"You must select between %s and %s choices.\",\n    equalto: \"This value should be the same.\",\n    euvatin: \"It's not a valid VAT Identification Number.\"\n  });\n  Parsley.setLocale('en');\n\n  function InputEvent() {\n    var _this = this;\n\n    var globals = window || global; // Slightly odd way construct our object. This way methods are force bound.\n    // Used to test for duplicate library.\n\n    _extends(this, {\n      // For browsers that do not support isTrusted, assumes event is native.\n      isNativeEvent: function isNativeEvent(evt) {\n        return evt.originalEvent && evt.originalEvent.isTrusted !== false;\n      },\n      fakeInputEvent: function fakeInputEvent(evt) {\n        if (_this.isNativeEvent(evt)) {\n          $(evt.target).trigger('input');\n        }\n      },\n      misbehaves: function misbehaves(evt) {\n        if (_this.isNativeEvent(evt)) {\n          _this.behavesOk(evt);\n\n          $(document).on('change.inputevent', evt.data.selector, _this.fakeInputEvent);\n\n          _this.fakeInputEvent(evt);\n        }\n      },\n      behavesOk: function behavesOk(evt) {\n        if (_this.isNativeEvent(evt)) {\n          $(document) // Simply unbinds the testing handler\n          .off('input.inputevent', evt.data.selector, _this.behavesOk).off('change.inputevent', evt.data.selector, _this.misbehaves);\n        }\n      },\n      // Bind the testing handlers\n      install: function install() {\n        if (globals.inputEventPatched) {\n          return;\n        }\n\n        globals.inputEventPatched = '0.0.3';\n\n        for (var _i = 0, _arr = ['select', 'input[type=\"checkbox\"]', 'input[type=\"radio\"]', 'input[type=\"file\"]']; _i < _arr.length; _i++) {\n          var selector = _arr[_i];\n          $(document).on('input.inputevent', selector, {\n            selector: selector\n          }, _this.behavesOk).on('change.inputevent', selector, {\n            selector: selector\n          }, _this.misbehaves);\n        }\n      },\n      uninstall: function uninstall() {\n        delete globals.inputEventPatched;\n        $(document).off('.inputevent');\n      }\n    });\n  }\n  var inputevent = new InputEvent();\n\n  inputevent.install();\n\n  return Parsley;\n\n})));\n//# sourceMappingURL=parsley.js.map\n","// Load this after Parsley for additional comparison validators\n// Note: comparing with a reference isn't well supported and not recommended.\n//import jQuery from 'jquery'; // Remove this line in ES3\n\n// gt, gte, lt, lte, notequalto extra validators\nvar parseRequirement = function (requirement) {\n  if (isNaN(+requirement))\n    return parseFloat(jQuery(requirement).val());\n  else\n    return +requirement;\n};\n\n// Greater than validator\nwindow.Parsley.addValidator('gt', {\n  validateString: function (value, requirement) {\n    return parseFloat(value) > parseRequirement(requirement);\n  },\n  priority: 32\n});\n\n// Greater than or equal to validator\nwindow.Parsley.addValidator('gte', {\n  validateString: function (value, requirement) {\n    return parseFloat(value) >= parseRequirement(requirement);\n  },\n  priority: 32\n});\n\n// Less than validator\nwindow.Parsley.addValidator('lt', {\n  validateString: function (value, requirement) {\n    return parseFloat(value) < parseRequirement(requirement);\n  },\n  priority: 32\n});\n\n// Less than or equal to validator\nwindow.Parsley.addValidator('lte', {\n  validateString: function (value, requirement) {\n    return parseFloat(value) <= parseRequirement(requirement);\n  },\n  priority: 32\n});\n","// Validation errors messages for Parsley\n// Load this after Parsley\n\nParsley.addMessages('pt-BR', {\n  defaultMessage: \"Este valor parece ser inválido.\",\n  type: {\n    email:        \"Este campo deve ser um email válido.\",\n    url:          \"Este campo deve ser um URL válida.\",\n    number:       \"Este campo deve ser um número válido.\",\n    integer:      \"Este campo deve ser um inteiro válido.\",\n    digits:       \"Este campo deve conter apenas dígitos.\",\n    alphanum:     \"Este campo deve ser alfa numérico.\"\n  },\n  notblank:       \"Este campo não pode ficar vazio.\",\n  required:       \"Este campo é obrigatório.\",\n  pattern:        \"Este campo parece estar inválido.\",\n  min:            \"Este campo deve ser maior ou igual a %s.\",\n  max:            \"Este campo deve ser menor ou igual a %s.\",\n  range:          \"Este campo deve estar entre %s e %s.\",\n  minlength:      \"Este campo é pequeno demais. Ele deveria ter %s caracteres ou mais.\",\n  maxlength:      \"Este campo é grande demais. Ele deveria ter %s caracteres ou menos.\",\n  length:         \"O tamanho deste campo é inválido. Ele deveria ter entre %s e %s caracteres.\",\n  mincheck:       \"Você deve escolher pelo menos %s opções.\",\n  maxcheck:       \"Você deve escolher %s opções ou mais\",\n  check:          \"Você deve escolher entre %s e %s opções.\",\n  equalto:        \"Este valor deveria ser igual.\",\n  uppercase:      \"Ao menos (%s) letra maiúscula(s)\",\n  lowercase:      \"Ao menos (%s) letra minúscula(s)\",\n  number:         \"Ao menos (%s) número(s)\",\n  special:        \"Ao menos (%s) caracter especial\"\n});\n\nParsley.setLocale('pt-BR');\n","// This is included with the Parsley library itself,\n// thus there is no use in adding it to your project.\n\n\nParsley.addMessages('en', {\n  defaultMessage: \"This value seems to be invalid.\",\n  type: {\n    email:        \"This value should be a valid email.\",\n    url:          \"This value should be a valid url.\",\n    number:       \"This value should be a valid number.\",\n    integer:      \"This value should be a valid integer.\",\n    digits:       \"This value should be digits.\",\n    alphanum:     \"This value should be alphanumeric.\"\n  },\n  notblank:       \"This value should not be blank.\",\n  required:       \"This value is required.\",\n  pattern:        \"This value seems to be invalid.\",\n  min:            \"This value should be greater than or equal to %s.\",\n  max:            \"This value should be lower than or equal to %s.\",\n  range:          \"This value should be between %s and %s.\",\n  minlength:      \"This value is too short. It should have %s characters or more.\",\n  maxlength:      \"This value is too long. It should have %s characters or fewer.\",\n  length:         \"This value length is invalid. It should be between %s and %s characters long.\",\n  mincheck:       \"You must select at least %s choices.\",\n  maxcheck:       \"You must select %s choices or fewer.\",\n  check:          \"You must select between %s and %s choices.\",\n  equalto:        \"This value should be the same.\",\n  euvatin:        \"It's not a valid VAT Identification Number.\",\n  uppercase:      \"Your password must contain at least (%s) uppercase letter.\",\n  lowercase:      \"Your password must contain at least (%s) lowercase letter.\",\n  number:         \"Your password must contain at least (%s) number.\",\n  special:        \"Your password must contain at least (%s) special characters.\"\n});\n\nParsley.setLocale('en');\n","// ParsleyConfig definition if not already set\n// Validation errors messages for Parsley\n// Load this after Parsley\n\nParsley.addMessages('es', {\n  defaultMessage: \"Este valor parece ser inválido.\",\n  type: {\n    email:        \"Este valor debe ser un correo válido.\",\n    url:          \"Este valor debe ser una URL válida.\",\n    number:       \"Este valor debe ser un número válido.\",\n    integer:      \"Este valor debe ser un número válido.\",\n    digits:       \"Este valor debe ser un dígito válido.\",\n    alphanum:     \"Este valor debe ser alfanumérico.\"\n  },\n  notblank:       \"Este valor no debe estar en blanco.\",\n  required:       \"Este valor es requerido.\",\n  pattern:        \"Este valor es incorrecto.\",\n  min:            \"Este valor no debe ser menor que %s.\",\n  max:            \"Este valor no debe ser mayor que %s.\",\n  range:          \"Este valor debe estar entre %s y %s.\",\n  minlength:      \"Este valor es muy corto. La longitud mínima es de %s caracteres.\",\n  maxlength:      \"Este valor es muy largo. La longitud máxima es de %s caracteres.\",\n  length:         \"La longitud de este valor debe estar entre %s y %s caracteres.\",\n  mincheck:       \"Debe seleccionar al menos %s opciones.\",\n  maxcheck:       \"Debe seleccionar %s opciones o menos.\",\n  check:          \"Debe seleccionar entre %s y %s opciones.\",\n  equalto:        \"Este valor debe ser idéntico.\",\n  uppercase:      \"Al menos (%s) letra(s) mayúscula(s)\",\n  lowercase:      \"Al menos (%s) letra(s) minúscula(s)\",\n  number:         \"Al menos (%s) número(s)\",\n  special:        \"Al menos (%s) carácter especial\"\n});\n\nParsley.setLocale('es');\n","// Parsley\nvar token = $('meta[name=csrf-token]').attr('content');\n\n$.extend(window.Parsley.options, {\n    errorClass: 'error',\n    successClass: 'valid',\n    classHandler: function (ParsleyField) { return ParsleyField.$element; },\n    errorsWrapper: '<div class=\"invalid-feedback\"></div>', errorTemplate: '<div></div>'\n});\nwindow.Parsley.setLocale($(document.body).attr(\"data-locale\"));\nwindow.Parsley.on('field:error', function (fieldInstance) {\n    var messages = fieldInstance.getErrorsMessages();\n    if ( fieldInstance.$element.hasClass('select2') || fieldInstance.$element.hasClass('multi') ) {\n        var targetElement = $('#popover_' + fieldInstance.$element.attr('id'))\n    } else {\n        var targetElement = fieldInstance.$element\n    }\n\n    targetElement.popover('dispose');\n    targetElement.popover({\n        trigger: 'manual',\n        container: 'body',\n        placement: 'top',\n        fallbackPlacement: ['top', 'top', 'top', 'top'],\n        content: function () {\n            return messages[0];\n        }\n    }).popover('toggle');\n    //console.log('Validation failed for: ' + this.$element.attr('name'));\n});\n\nwindow.Parsley.on('field:success', function (fieldInstance) {\n    if ( fieldInstance.$element.hasClass('select2') ) {\n        $('#popover_' + fieldInstance.$element.attr('id')).popover('dispose');\n    } else {\n        fieldInstance.$element.popover('dispose');\n    }\n});\n\nwindow.Parsley.on('form:validate', function ( form ) {\n  if (!form.isValid()){\n      $(\"html,body\").animate({\n          scrollTop : 0\n      });\n  }\n  \n  if (form.$element.is(\":hidden\")) {\n      form._ui.$errorsWrapper.css('display', 'none');\n      form.validationResult = true;\n      return true;\n  }\n});\n\n//has uppercase\nwindow.Parsley.addValidator('uppercase', {\n  requirementType: 'number',\n  validateString: function(value, requirement) {\n    var uppercases = value.match(/[A-Z]/g) || [];\n    return uppercases.length >= requirement;\n  },\n  messages: {\n    en: 'Your password must contain at least (%s) uppercase letter.'\n  }\n});\n\n//has lowercase\nwindow.Parsley.addValidator('lowercase', {\n  requirementType: 'number',\n  validateString: function(value, requirement) {\n    var lowecases = value.match(/[a-z]/g) || [];\n    return lowecases.length >= requirement;\n  },\n  messages: {\n    en: 'Your password must contain at least (%s) lowercase letter.'\n  }\n});\n  \n//has number\nwindow.Parsley.addValidator('number', {\n  requirementType: 'number',\n  validateString: function(value, requirement) {\n    var numbers = value.match(/[0-9]/g) || [];\n    return numbers.length >= requirement;\n  },\n  messages: {\n    en: 'Your password must contain at least (%s) number.'\n  }\n});\n  \n//has special char\nwindow.Parsley.addValidator('special', {\n  requirementType: 'number',\n  validateString: function(value, requirement) {\n    var specials = value.match(/[^a-zA-Z0-9]/g) || [];\n    return specials.length >= requirement;\n  },\n  messages: {\n    en: 'Your password must contain at least (%s) special characters.'\n  }\n});\n\nwindow.Parsley.addValidator('checkpenaltyrequirement', {\n  validate: function () {\n    var hScore = $('.goal_card_home').length;\n    var vScore = $('.goal_card_visitor').length;\n    var hpSet = $('#phscore').val();\n    var vpSet = $('#pvscore').val();\n\n    if (hScore == vScore) {\n      if ((hpSet == \"\" || vpSet == \"\") || (hpSet == vpSet)) {\n        var phScore = parseInt($('#prevGame_hscore').val());\n        var pvScore = parseInt($('#prevGame_vscore').val());\n        return check_goal_assignment(hScore, vScore, phScore, pvScore)\n      } else {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  }\n});\n","// Parsley\nimport Parsley from \"parsleyjs\"\nwindow.Parsley = Parsley\n\nimport \"../libs/parsley/validator/comparison\"\nimport \"../libs/parsley/i18n/pt-br\"\nimport \"../libs/parsley/i18n/en\"\nimport \"../libs/parsley/i18n/es\"\nimport \"../libs/parsley/parsley_defaults\"","import { Controller } from \"@hotwired/stimulus\"\nimport \"@js/base/parsley\"\nimport \"@js/base/sweetalert2\"\nimport i18n from \"@js/base/i18n\"\n\nexport default class FormController extends Controller {\n  static values = {\n    title: String,\n    text: String,\n    icon: { type: String, default: \"question\" },\n    scroll: Boolean,\n    swal: { type: Boolean, default: true },\n    modal: { type: String, default: \"\" },\n    redirect: { type: String, default: \"\" }\n  }\n\n  connect() {\n    const form = document.getElementById(this.element.id)\n    const title = this.titleValue\n    const text = this.textValue\n    const icon = this.iconValue\n    const scrollTop = this.scrollValue\n    const redirect = this.redirectValue\n    const swal = this.swalValue\n    const modal = document.getElementById(this.modalValue)\n\n    let scrollVar = scrollTop\n\n    if (redirect) {\n      this.element.addEventListener(\"turbo:submit-end\", (event) => {\n        const url = new URL(window.location.href.split(\"?\")[0])\n        history.pushState({}, null, redirect)\n        Turbo.navigator.history.replace(url.toString())\n      })\n    }\n\n    $(form).parsley();\n    $(form).parsley().on('form:submit', function (formInstance) {\n      if ( swal === true ) {\n        Swal.fire({\n          title: title,\n          text: text,\n          icon: icon,\n          showCancelButton: !0,\n          reverseButtons: true,\n          customClass: {\n            confirmButton: \"btn btn-primary w-xs\",\n            cancelButton: \"btn btn-outline-secondary w-xs me-2\",\n          },\n          confirmButtonText: i18n.t('confirm'),\n          cancelButtonText: i18n.t('cancel'),\n          buttonsStyling: !1,\n          showCloseButton: !0,\n          didClose: () => {\n            if (scrollTop === true && scrollVar === scrollTop ) {\n              scrollTopFunction()\n            }\n          }\n        }).then((result) => {\n            if (result.value) {\n              scrollVar = true\n              $('.modal').modal('hide')\n              $('.modal-backdrop').remove()\n              $(form).parsley().destroy()\n              form.requestSubmit()\n            } else {\n              scrollVar = false\n              return false;\n            }\n        })\n      } else {\n        scrollVar = true\n        if ( modal !== \"\" ) {\n          $(modal).modal('toggle')\n        } else {\n          $('.modal').modal('toggle')\n          $('.modal-backdrop').remove()\n        }\n        $(form).parsley().destroy()\n        Turbo.navigator.submitForm(form)\n      }\n      return false;\n    });\n  }\n}\n"],"names":["global","factory","module","require$$0","this","$","_typeof","obj","_extends","target","i","source","key","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","arr2","iter","_arr","_n","_d","_e","_i","_s","err","globalID","pastWarnings","Utils","element","namespace","attribute","attributes","regex","_checkAttr","attr","value","num","str","match","chr","_window$console","msg","string","parsed","_parsed$map","x","_parsed$map2","year","month","day","date","_string","_regexp","flags","requirementType","converter","converted","events","evt","array","remove","result","_","elem","promises","Object","prototype","Defaults","Field","Base","_this","pipe","r","initOptions","name","fn","queue","extraArg","group","force","convertArrayRequirement","length","m","values","convertExtraOptionRequirement","requirementSpec","extraOptionReader","main","extra","Validator","spec","requirementFirstArg","instance","requirements","type","ValidatorRegistry","validators","catalog","typeTesters","decimalPlaces","parseArguments","args","operatorToValidator","operator","_len","requirementsAndInput","_key","comparisonOperator","locale","messages","set","message","nameMessageObject","arg1","arg2","validator","priority","constraint","typeMessages","parameters","_ref","_ref$step","step","_ref$base","base","tester","nb","decimals","toInt","f","regexp","requirement","min","max","refOrValue","$reference","re","UI","diffResults","newResult","oldResult","deep","added","kept","found","j","field","diff","assert","_ref$updateClass","updateClass","_ref2","_ref2$updateClass","_ref3","_ref3$updateClass","_ref4","_ref5","customConstraintErrorMessage","_ui","$handlerFunction","$handler","$errorsContainer","_this2","$toBind","trigger","event","_this3","Form","domOptions","options","statusMapping","submitSource","promise","$synthetic","_arguments","_Utils$all$done$fail$","_arguments2","_this4","oldFields","fieldInstance","uniqueId","oldActualizeOptions","eventName","Constraint","parsleyField","isDomConstraint","validatorSpec","capitalize","cap","_this$validator","parsleyFormInstance","statusMapping$1","_this$whenValid$alway","_ref2$force","_refreshed","groupedConstraints","constraints","errorMessage","constraintsByName","c","index","p","a","b","Multiple","$element","fieldConstraints","Factory","savedparsleyFormInstance","parsleyMultipleInstance","input","$previouslyRelated","doNotStore","parsleyInstance","vernums","Parsley","instances","registry","method","_window$Parsley","doNotUpdateClass","o","deprecated","adapt","context","eventPrefix","callback","_instance","instanceGiven","xhr","url","data","ajaxOptions","csr","remoteOptions","handleXhr","InputEvent","globals","selector","inputevent","parseRequirement","ParsleyField","targetElement","form","uppercases","lowecases","numbers","specials","hScore","vScore","hpSet","vpSet","phScore","pvScore","FormController","Controller","title","text","icon","scrollTop","redirect","swal","modal","scrollVar","formInstance","i18n","__publicField"],"mappings":"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","x_google_ignoreList":[0]}