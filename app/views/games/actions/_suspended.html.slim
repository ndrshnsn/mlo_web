- suspendedPlayers = players_suspended(game.championship.hashid, game.hashid, season)
- if suspendedPlayers[:home_ycard].count > 0 || suspendedPlayers[:home_rcard].count > 0 || suspendedPlayers[:visitor_ycard].count > 0 || suspendedPlayers[:visitor_rcard].count > 0
  span.badge.d-block.bg-danger.mt-1 = t('.suspended_players')
  .row
    .col-12
      div
        .timeline
          - suspendedPlayers[:home_ycard].each do |hycard|
            - sPlayer = DefPlayer.joins(:player_seasons).where(player_seasons: { id: hycard }).first
            - rpPOS = translate_pkeys(sPlayer.def_player_position.name, sPlayer.platform)

            .timeline-item.left.w-100.p-0
              i class="icon ri-square-line text-reset card yellow" style="top: 15px !important; right: 15px !important"
              .content.p-1.d-flex.align-items-center style="border: 0 !important;"
                .flex-shrink-0.me-3.mb-3.ms-1 style="position:relative; padding-top: 5px;"
                  img.avatar-sm.img-thumbnail.rounded-circle src="#{session_pdbprefix}/players/#{get_platforms(platform: sPlayer.platform, dna: true)}/#{sPlayer.platformid}.png" class="avatar avatar-sm" style="width: 38px; height: 38px;"
                  span class="player-avatar-position badge badge-#{rpPOS[1]}" = rpPOS[0]
                .flex-grow-1
                  span = sPlayer.name
                  span.text-muted.fs-12.d-flex.align-middle
                    span.text-muted = t('cards.yellow')

          - suspendedPlayers[:home_rcard].each do |hrcard|
            - sPlayer = DefPlayer.joins(:player_seasons).where(player_seasons: { id: hrcard }).first
            - rpPOS = translate_pkeys(sPlayer.def_player_position.name, sPlayer.platform)

            .timeline-item.left.w-100.p-0
              i class="icon ri-square-line text-reset card red" style="top: 15px !important; right: 15px !important"
              .content.p-1.d-flex.align-items-center style="border: 0 !important;"
                .flex-shrink-0.me-3.mb-3.ms-1 style="position:relative; padding-top: 5px;"
                  img.avatar-sm.img-thumbnail.rounded-circle src="#{session_pdbprefix}/players/#{get_platforms(platform: sPlayer.platform, dna: true)}/#{sPlayer.platformid}.png" class="avatar avatar-sm" style="width: 38px; height: 38px;"
                  span class="player-avatar-position badge badge-#{rpPOS[1]}" = rpPOS[0]
                .flex-grow-1
                  span = sPlayer.name
                  span.text-muted.fs-12.d-flex.align-middle
                    span.text-muted = t('cards.red')

          - suspendedPlayers[:visitor_ycard].each do |vycard|
            - sPlayer = DefPlayer.joins(:player_seasons).where(player_seasons: { id: vycard }).first
            - rpPOS = translate_pkeys(sPlayer.def_player_position.name, sPlayer.platform)

            .timeline-item.right.w-100.p-0 style="background-color: #24282d;"
              i class="icon ri-square-line text-reset card yellow" style="top: 15px !important; right: 15px !important"
              .content.p-1.d-flex.align-items-center style="border: 0 !important;"
                .flex-grow-1.text-end
                  span = sPlayer.name
                  br
                  span.text-muted.fs-12 = t('cards.yellow')
                .flex-shrink-0.me-3.mb-3.ms-1 style="position:relative; padding-top: 5px;"
                  img.avatar-sm.img-thumbnail.rounded-circle src="#{session_pdbprefix}/players/#{get_platforms(platform: sPlayer.platform, dna: true)}/#{sPlayer.platformid}.png" class="avatar avatar-sm" style="width: 38px; height: 38px;"
                  span class="player-avatar-position badge badge-#{rpPOS[1]}" = rpPOS[0]

          - suspendedPlayers[:visitor_rcard].each do |vrcard|
            - sPlayer = DefPlayer.joins(:player_seasons).where(player_seasons: { id: vrcard }).first
            - rpPOS = translate_pkeys(sPlayer.def_player_position.name, sPlayer.platform)

            .timeline-item.right.w-100.p-0 style="background-color: #24282d;"
              i class="icon ri-square-line text-reset card red" style="top: 15px !important; right: 15px !important"
              .content.p-1.d-flex.align-items-center style="border: 0 !important;"
                .flex-grow-1.text-end
                  span = sPlayer.name
                  br
                  span.text-muted.fs-12 = t('cards.red')
                .flex-shrink-0.me-3.mb-3.ms-1 style="position:relative; padding-top: 5px;"
                  img.avatar-sm.img-thumbnail.rounded-circle src="#{session_pdbprefix}/players/#{get_platforms(platform: sPlayer.platform, dna: true)}/#{sPlayer.platformid}.png" class="avatar avatar-sm" style="width: 38px; height: 38px;"
                  span class="player-avatar-position badge badge-#{rpPOS[1]}" = rpPOS[0]
