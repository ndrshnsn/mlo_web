= render "layouts/modal/main", modal_size: "md"
  = form_with model: @game, id: "results_#{@game.hashid}", url: game_update_path(@game), class: "needs-validation", html: {"data-parsley-errors-messages-disabled": "true" }, data: { controller: "form", "form-title-value": t('games.result.confirm_question'), "form-text-value": t('games.result.confirm_text'), "form-icon-value": "question"} do |f|
    .modal-header
      h5.modal-title.d-flex.align-items-center
        i.ri-survey-line.me-1
        = t('games.result.title', id: @game.gsequence)
      button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"
    .modal-body
      - if @penalties
        span.col-12.text-center.badge.bg-danger-subtle.border.border-danger.mb-1.mb-3 style="white-space: normal!important;" = t('games.result.penalty_warning')
      - if @previous_game
        .row.mb-1.p-2
          blockquote#combined_message_span.blockquote.custom-blockquote.blockquote-danger.rounded.fs-14 hidden="true"
            p.text-body = t('games.result.combined_message')
      .row.mb-1
        .teams
          .text-center
            span.teams-logo
              = image_tag("#{session[:pdbprefix]}/teams/#{(@game.home.def_team.name.upcase.delete(' '))}.png", class: "img-fluid", onerror: "this.error=null;this.src='#{image_url("generic-club.png")}';")
            span.teams-name.d-sm-block.d-none = stringHuman(@game.home.def_team.name)
            span.teams-name.d-block.d-sm-none = stringHuman( @game.home.def_team.details['teamAbbr'])
            small.text-muted ##{ @game.home.user_season.user.nickname}
            p
            = link_to game_update_add_goal_path(id: @game, side: "home" ), data: { "turbo-frame": "modal_goal_#{@game.hashid}" } do
              .badge.bg-primary.me-1
                i.ri-football-line
                span.d-sm-block.d-none.ms-1 style="float: right;" = t('games.result.add_goal')
            = link_to game_update_add_card_path(id: @game, side: "home"), data: { "turbo_frame": "modal_card_#{@game.hashid}" } do
              .badge.bg-primary.me-1
                i.ri-square-fill
                span.d-sm-block.d-none.ms-1 style="float: right;" = t('games.result.add_card')
          .text-center
            span.score
              span.me-1.fs-1 id="game_modal_home_score_#{@game.championship.hashid}_#{@game.hashid}" 0
              | x
              span.ms-1.fs-1 id="game_modal_visitor_score_#{@game.championship.hashid}_#{@game.hashid}" 0

            span.penalty
              - if @previous_game
                input type="hidden" id="prevGame_hscore" value="#{@previous_game.hscore}"
                input type="hidden" id="prevGame_vscore" value="#{@previous_game.vscore}"
                input type="hidden" id="result_criterion" value="#{@result_criterion}"
              - if @penalties
                span.badge.bg-primary.mt-3.mb-1 = t('.penalties')
                #penaltyInput.d-flex
                  .form-group
                    = text_field_tag("phscore", '', class: "form-control form-control-sm phscore-mask text-center border border-primary", size: 2, maxlength: 2, "data-parsley-checkpenaltyrequirement": 'true', "data-parsley-validate-if-empty": "true", "data-controller": "cleave", "data-cleave-ctype-value": "penalty")
                  span.ms-1.me-1.font-weight-bolder style="line-height: 28px;"
                    | :
                  .form-group
                    = text_field_tag("pvscore", '', class: "form-control form-control-sm pvscore-mask text-center border border-primary", size: 2, maxlength: 2, "data-parsley-checkpenaltyrequirement": 'true', "data-parsley-validate-if-empty": "true", "data-controller": "cleave", "data-cleave-ctype-value": "penalty")

          .text-center
            span.teams-logo
              = image_tag("#{session[:pdbprefix]}/teams/#{(@game.visitor.def_team.name.upcase.delete(' '))}.png", class: "img-fluid", onerror: "this.error=null;this.src='#{image_url("generic-club.png")}';")
            span.teams-name.d-sm-block.d-none = stringHuman(@game.visitor.def_team.name)
            span.teams-name.d-block.d-sm-none = stringHuman( @game.visitor.def_team.details['teamAbbr'])
            small.text-muted ##{ @game.visitor.user_season.user.nickname}
            p
            = link_to game_update_add_goal_path(id: @game, side: "visitor"), data: { "turbo-frame": "modal_goal_#{@game.hashid}" } do
              .badge.bg-primary.me-1
                i.ri-football-line
                span.d-sm-block.d-none.ms-1 style="float: right;" = t('games.result.add_goal')
            = link_to game_update_add_card_path(id: @game, side: "visitor"), data: { "turbo_frame": "modal_card_#{@game.hashid}" } do
              .badge.bg-primary data-toggle="tooltip" data-title="Adicionar Cart√£o"
                i.ri-square-fill
                span.d-sm-block.d-none.ms-1 style="float: right;" = t('games.result.add_card')
      .row.pt-2.mb-3
        .simplebar-scrollable-y(data-simplebar style="max-height: 300px;")
          div
            = turbo_frame_tag "goals-and-cards_#{@game.championship.hashid}_#{@game.hashid}"
              
      - if @game.championship.preferences["match_best_player"] == "on"
        = render partial: "games/actions/best_player", game: @game, suspended_players: @suspended_players, players_home: @players_home, players_visitor: @players_visitor

    .modal-footer
      .col-12.text-end
        = button_tag t('games.result.cancel'), type: "button", "data-bs-dismiss": "modal", "aria-label": "Close", class: "btn btn-outline-secondary btn-sm me-1"
        = f.submit t('games.result.confirm'), class: "btn btn-primary btn-sm", id: "submit_result"

  javascript:
    var cid = "#{@game.championship.hashid}"
    var gid = "#{@game.hashid}"
    var previous_game = "#{@previous_game}"
    var result_criterion = document.getElementById('result_criterion').value

    function check_for_combined_result(home_score_goals, visitor_score_goals, previous_home_score_goals, previous_visitor_score_goals) {
      if (previous_game) {
        console.log(check_goal_assignment(home_score_goals, visitor_score_goals, previous_home_score_goals, previous_visitor_score_goals))
        if ( check_goal_assignment(home_score_goals, visitor_score_goals, previous_home_score_goals, previous_visitor_score_goals) == false && ( (home_score_goals != visitor_score_goals) || (previous_home_score_goals != previous_visitor_score_goals) ) ) {
          var combined_result = false
          var submit_button_status = true
        } else {
          var combined_result = true
          var submit_button_status = false
        }
        document.getElementById('combined_message_span').hidden = combined_result
        document.getElementById('submit_result').disabled = submit_button_status
      }
    }

    function update_score(home_score_goals, visitor_score_goals) {
      document.getElementById('game_modal_home_score_'+ cid +'_'+ gid).textContent = home_score_goals
      document.getElementById('game_modal_visitor_score_'+ cid +'_'+ gid).textContent = visitor_score_goals
    }

    function check_goal_assignment(home_score_goals, visitor_score_goals, previous_home_score_goals, previous_visitor_score_goals) {
      var home_sum = home_score_goals + previous_visitor_score_goals
      var visitor_sum = previous_home_score_goals + visitor_score_goals
      if (home_sum == visitor_sum) {
        if (result_criterion == "outGoals") {
          if (previous_visitor_score_goals == visitor_score_goals) {
            return false
          } else {
            return true
          }
        }
        return false
      } else {
        return true
      }
    }