- phase = Championship.translate_phase(game.phase)
- status = Game.translate_status(game.status)
- session_pdbprefix = session.present? ? session[:pdbprefix] : session_pdbprefix
- session_season = session.present? ? session[:season] : session_season
= turbo_frame_tag "game_#{game.id}" do
  .card
    .card-header.d-flex.pb-0.bg-primary-subtle.rounded-top
      .flex-grow-1
        h6.card-title Jogo ##{game.gsequence}
        p.card-subtitle
          span class="badge bg-#{phase[1]}" = phase[0]
          span class="badge bg-#{status[2]}-subtle ms-1 text-#{status[2]}" = status[1]
      .flex-shrink-0.text-end
        i.ri-map-pin-line.me-1.fs-12
        span.fs-13 #{game.home.def_team.details["teamCity"]}, #{stringHuman(t("defaults.countries.#{game.home.def_team.def_country.name}"))}
        p.text-muted.fs-12 = game.home.def_team.details["teamStadium"]
    .card-body.pt-4.pb-3
      .teams.mb-1
        .text-center
          span.teams-logo
            = image_tag("#{session_pdbprefix}/teams/#{(game.home.def_team.name.upcase.delete(' '))}.png", class: "img-fluid", onerror: "this.error=null;this.src='#{image_url("generic-club.png")}';")
          span.teams-name.d-sm-block.d-none = stringHuman(DefTeam.getTranslation(game.home.def_team.name).first)
          span.teams-name.d-block.d-sm-none = game.home.def_team.details["teamAbbr"]
          small.text-muted
            a href="javascript:void(0)" id="button_userinfo_home_#{game.id}" data-controller="popover" data-popover-id-value="#{game.home.user_season.user.id}" data-popover-turbo-value="true" data-popover-frame-value="basic_user_info_#{game.home.user_season.user.id}" data-popover-source-value="#{user_get_basic_info_path(game.home.user_season.user)}" ##{game.home.user_season.user.nickname}
        .text-center
          - if (game.home.user_season.user.id == current_user_id || game.visitor.user_season.user.id == current_user_id) && game.status == 2
            - worker = Sidekiq::Cron::Job.find("game_confirm_#{game.championship.season.id}_#{game.championship.id}_#{game.id}")
            - if worker
              - next_enqueue = Time.parse(worker.enqueue_args[4]) + game.championship.season.preferences["time_game_confirmation"].hour
              = render "games/status/confirm_time", next_enqueue: next_enqueue

          span.score.d-flex.justify-content-center
            span.fs-1 = game.hscore
            span.ms-1.me-1.fs-6 X
            span.fs-1 = game.vscore
          span.penalty
            - if game.phscore != nil && game.pvscore != nil
              span.badge.bg-primary-subtle.mb-1 = t('.penalties')
              p.text-warning
                | #{game.phscore} : #{game.pvscore}
        .text-center
          span.teams-logo
            = image_tag("#{session_pdbprefix}/teams/#{(game.visitor.def_team.name.upcase.delete(' '))}.png", class: "img-fluid", onerror: "this.error=null;this.src='#{image_url("generic-club.png")}';")
          span.teams-name.d-sm-block.d-none = stringHuman(DefTeam.getTranslation(game.visitor.def_team.name).first)
          span.teams-name.d-block.d-sm-none = game.visitor.def_team.details["teamAbbr"]
          small.text-muted
            a href="javascript:void(0)" id="button_userinfo_visitor_#{game.id}" data-controller="popover" data-popover-id-value="#{game.visitor.user_season.user.id}" data-popover-turbo-value="true" data-popover-frame-value="basic_user_info_#{game.visitor.user_season.user.id}" data-popover-source-value="#{user_get_basic_info_path(game.visitor.user_season.user)}" ##{game.visitor.user_season.user.nickname}

      - if game.status == 3
        = render "games/actions/goals_cards", game: game, season: session_season, session_pdbprefix: session_pdbprefix

      - if game.home.user_season.user.id == current_user_id || game.visitor.user_season.user.id == current_user_id
        - if game.championship.preferences['cards_suspension'] == "on" && game.status == 1
          = render "games/actions/suspended", game: game, season: session_season, session_pdbprefix: session_pdbprefix
        - if game.status == 2
          = render "games/actions/goals_cards", game: game, season: session_season, session_pdbprefix: session_pdbprefix

    .card-footer id="game_actions_footer_#{game.championship.id}_#{game.id}"
      - if game.home.user_season.user.id == current_user_id || game.visitor.user_season.user.id == current_user_id
        - if game.status < 3
          div.game_actions id="game_actions_#{game.championship.id}_#{game.id}"
            .text-center
              div id="game_actions_#{game.championship.id}_#{game.id}_home"
              - if game.status == 0
                - if game.home.user_season.user.id == current_user_id
                  - if game.hsaccepted
                    = render "games/status/ready"
                  - else
                    = link_to "javascript:;", class: "btn bg-primary-subtle btn-sm border border-primary", data: { controller: "confirm", "confirm-title-value": t('.start_game_question', game: game.gsequence), "confirm-text-value": t('.start_game_text'), "confirm-link-value": game_start_path(game), "confirm-icon-value": "question", "confirm-action-value": "POST", action: "click->confirm#dialog" } do
                      i.ri-play-line.me-1.align-bottom
                      span = t(".start_game")
                - else
                  - if !game.hsaccepted && game.vsaccepted
                    = render "games/status/waiting"
                  - elsif game.hsaccepted && !game.vsaccepted
                    = render "games/status/ready"
            .text-center
            .text-center
              div id="game_actions_#{game.championship.id}_#{game.id}_visitor"
              - if game.status == 0
                - if game.visitor.user_season.user.id == current_user_id
                  - if game.vsaccepted
                    = render "games/status/ready"
                  - else
                    = link_to "javascript:;", class: "btn bg-primary-subtle btn-sm border border-primary", data: { controller: "confirm", "confirm-title-value": t('.start_game_question', game: game.gsequence), "confirm-text-value": t('.start_game_text'), "confirm-link-value": game_start_path(game), "confirm-icon-value": "question", "confirm-action-value": "POST", action: "click->confirm#dialog" } do
                      i.ri-play-line.me-1.align-bottom
                      span = t(".start_game")
                - else
                  - if !game.vsaccepted && game.hsaccepted
                    = render "games/status/waiting"
                  - elsif game.vsaccepted && !game.hsaccepted
                    = render "games/status/ready"
      
        - current_side = game.home.user_season.user.id == current_user_id ? game.home.id : game.visitor.id
        - if game.status == 1
          - if game.eresults_id == nil
            = render 'games/status/results', game: game
          - else
            - if game.eresults_id == current_side
              = render 'games/status/results', game: game
            - else
              = render 'games/status/op_results', game: game
        - elsif game.status == 2
          - if game.eresults_id == current_side
            = render 'games/status/w_confirmation', game: game
          - else
            = render 'games/status/confirm', game: game

      - else
        - if game.status == 1
          = render "games/status/running"

        / - elsif game.status == 3
        /   = render partial: 'championships/games/gStatus_inContest', locals: { game: game, iteration: iteration}

  = turbo_frame_tag "modal_goal_#{game.id}", target: "_top"
  = turbo_frame_tag "modal_card_#{game.id}", target: "_top"